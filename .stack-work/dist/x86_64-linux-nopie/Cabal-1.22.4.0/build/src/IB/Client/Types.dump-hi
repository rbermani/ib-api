
==================== FINAL INTERFACE ====================
2017-12-01 17:56:49.979116 UTC

interface ibapi_FYtdachWwYX1Bggz8sQPyH:IB.Client.Types 7102
  interface hash: 5028e846f0be5663b3152a946bf63392
  ABI hash: 4c6a6fdfbfd3bbf81422ed04211308a6
  export-list hash: 85904ef18005241fa853203f455d7870
  orphan hash: 622be51b9f2788ea8e2d0222307c9709
  flag hash: 4da6523336910b5057b8123d217edee8
  sig of: Nothing
  used TH splices: False
  where
exports:
  IB.Client.Types.conToId
  IB.Client.Types.dblBoundsCheck
  IB.Client.Types.dblCheckNegative
  IB.Client.Types.dblDefaultCheck
  IB.Client.Types.dblMaximum
  IB.Client.Types.defContract
  IB.Client.Types.defContractDetails
  IB.Client.Types.defOrder
  IB.Client.Types.defScannerSubscription
  IB.Client.Types.defUnderComp
  IB.Client.Types.fromBool
  IB.Client.Types.fromEnum'
  IB.Client.Types.idToMsg
  IB.Client.Types.int32max
  IB.Client.Types.int32min
  IB.Client.Types.isPrice
  IB.Client.Types.msgToId
  IB.Client.Types.reqToId
  IB.Client.Types.BarData{IB.Client.Types.BarData IB.Client.Types.bar_average IB.Client.Types.bar_barCount IB.Client.Types.bar_close IB.Client.Types.bar_date IB.Client.Types.bar_hasGaps IB.Client.Types.bar_high IB.Client.Types.bar_low IB.Client.Types.bar_open IB.Client.Types.bar_volume}
  IB.Client.Types.ComboLeg{IB.Client.Types.ComboLeg IB.Client.Types.cl_action IB.Client.Types.cl_conId IB.Client.Types.cl_designatedLocation IB.Client.Types.cl_exchange IB.Client.Types.cl_exemptCode IB.Client.Types.cl_openClose IB.Client.Types.cl_ratio IB.Client.Types.cl_shortSaleSlot}
  IB.Client.Types.Contract{IB.Client.Types.Contract IB.Client.Types.ct_comboLegsDescrip IB.Client.Types.ct_comboLegsList IB.Client.Types.ct_conId IB.Client.Types.ct_currency IB.Client.Types.ct_exchange IB.Client.Types.ct_expiry IB.Client.Types.ct_includeExpired IB.Client.Types.ct_localSymbol IB.Client.Types.ct_multiplier IB.Client.Types.ct_primaryExchange IB.Client.Types.ct_right IB.Client.Types.ct_secId IB.Client.Types.ct_secIdType IB.Client.Types.ct_secType IB.Client.Types.ct_strike IB.Client.Types.ct_symbol IB.Client.Types.ct_tradingClass IB.Client.Types.ct_underComp}
  IB.Client.Types.ContractDetails{IB.Client.Types.ContractDetails IB.Client.Types.ctd_bondType IB.Client.Types.ctd_callable IB.Client.Types.ctd_category IB.Client.Types.ctd_contractMonth IB.Client.Types.ctd_convertible IB.Client.Types.ctd_coupon IB.Client.Types.ctd_couponType IB.Client.Types.ctd_cusip IB.Client.Types.ctd_descAppend IB.Client.Types.ctd_evMultiplier IB.Client.Types.ctd_evRule IB.Client.Types.ctd_industry IB.Client.Types.ctd_issueDate IB.Client.Types.ctd_liquidHours IB.Client.Types.ctd_longName IB.Client.Types.ctd_marketName IB.Client.Types.ctd_maturity IB.Client.Types.ctd_minTick IB.Client.Types.ctd_nextOptionDate IB.Client.Types.ctd_nextOptionPartial IB.Client.Types.ctd_nextOptionType IB.Client.Types.ctd_notes IB.Client.Types.ctd_orderTypes IB.Client.Types.ctd_priceMagnifier IB.Client.Types.ctd_putable IB.Client.Types.ctd_ratings IB.Client.Types.ctd_secIdList IB.Client.Types.ctd_subcategory IB.Client.Types.ctd_summary IB.Client.Types.ctd_timeZoneId IB.Client.Types.ctd_tradingHours IB.Client.Types.ctd_underConId IB.Client.Types.ctd_validExchanges}
  IB.Client.Types.Execution{IB.Client.Types.Execution IB.Client.Types.ex_acctNumber IB.Client.Types.ex_avgPrice IB.Client.Types.ex_clientId IB.Client.Types.ex_cumQty IB.Client.Types.ex_evMultiplier IB.Client.Types.ex_evRule IB.Client.Types.ex_exchange IB.Client.Types.ex_execId IB.Client.Types.ex_liquidation IB.Client.Types.ex_orderId IB.Client.Types.ex_orderRef IB.Client.Types.ex_permId IB.Client.Types.ex_price IB.Client.Types.ex_shares IB.Client.Types.ex_side IB.Client.Types.ex_time}
  IB.Client.Types.ExecutionFilter{IB.Client.Types.ExecutionFilter IB.Client.Types.exf_acctCode IB.Client.Types.exf_clientId IB.Client.Types.exf_exchange IB.Client.Types.exf_secType IB.Client.Types.exf_side IB.Client.Types.exf_symbol IB.Client.Types.exf_time}
  IB.Client.Types.FaDataType{IB.Client.Types.ALIASES IB.Client.Types.GROUPS IB.Client.Types.PROFILES}
  IB.Client.Types.GroupId
  IB.Client.Types.HandlerFunc
  IB.Client.Types.IBMessage{IB.Client.Types.AccountSummary IB.Client.Types.AccountSummaryEnd IB.Client.Types.AcctDownloadEnd IB.Client.Types.AcctUpdateTime IB.Client.Types.AcctValue IB.Client.Types.BondContractData IB.Client.Types.CommissionReport IB.Client.Types.ContractData IB.Client.Types.ContractDataEnd IB.Client.Types.CurrentTime IB.Client.Types.DeltaNeutralValidation IB.Client.Types.DisplayGroupList IB.Client.Types.DisplayGroupUpdated IB.Client.Types.Err IB.Client.Types.ExecutionData IB.Client.Types.ExecutionDataEnd IB.Client.Types.FundamentalData IB.Client.Types.HistoricalData IB.Client.Types.IBUnknown IB.Client.Types.ManagedAccts IB.Client.Types.MarketDataType IB.Client.Types.MarketDepth IB.Client.Types.MarketDepthL2 IB.Client.Types.NewsBulletins IB.Client.Types.NextValidId IB.Client.Types.OpenOrder IB.Client.Types.OpenOrderEnd IB.Client.Types.OrderStatus IB.Client.Types.PortfolioValue IB.Client.Types.PositionData IB.Client.Types.PositionEnd IB.Client.Types.RealTimeBars IB.Client.Types.ReceiveFA IB.Client.Types.ScannerData IB.Client.Types.ScannerParameters IB.Client.Types.TickEFP IB.Client.Types.TickGeneric IB.Client.Types.TickOptionComputation IB.Client.Types.TickPrice IB.Client.Types.TickSize IB.Client.Types.TickSnapshotEnd IB.Client.Types.TickString IB.Client.Types.UnusedMsg1 IB.Client.Types.UnusedMsg2 IB.Client.Types.VerifyCompleted IB.Client.Types.VerifyMessageAPI IB.Client.Types.account IB.Client.Types.accountName IB.Client.Types.average IB.Client.Types.averageCost IB.Client.Types.avgCost IB.Client.Types.avgFillPrice IB.Client.Types.barDataList IB.Client.Types.basisPoints IB.Client.Types.canAutoExecute IB.Client.Types.clientId IB.Client.Types.close IB.Client.Types.comboLeg IB.Client.Types.commission IB.Client.Types.contract IB.Client.Types.contractInfo IB.Client.Types.count IB.Client.Types.cur IB.Client.Types.currency IB.Client.Types.cxml IB.Client.Types.delta IB.Client.Types.dividendImpact IB.Client.Types.dividendsToExpiry IB.Client.Types.endDateStr IB.Client.Types.errorCode IB.Client.Types.errorMsg IB.Client.Types.errorText IB.Client.Types.exec IB.Client.Types.execId IB.Client.Types.faDataTypeInt IB.Client.Types.fdata IB.Client.Types.filled IB.Client.Types.formattedBasisPoints IB.Client.Types.futureExpiry IB.Client.Types.gamma IB.Client.Types.groups IB.Client.Types.high IB.Client.Types.holdDays IB.Client.Types.id IB.Client.Types.impliedFuturesPrice IB.Client.Types.impliedVol IB.Client.Types.isSuccessful IB.Client.Types.key IB.Client.Types.lastFillPrice IB.Client.Types.low IB.Client.Types.marketDataType IB.Client.Types.marketMaker IB.Client.Types.marketPrice IB.Client.Types.marketValue IB.Client.Types.msgId IB.Client.Types.msgType IB.Client.Types.newsMessage IB.Client.Types.open IB.Client.Types.operation IB.Client.Types.optPrice IB.Client.Types.order IB.Client.Types.orderComboLegs IB.Client.Types.orderId IB.Client.Types.orderState IB.Client.Types.originatingExch IB.Client.Types.parentId IB.Client.Types.permId IB.Client.Types.position IB.Client.Types.price IB.Client.Types.pvDividend IB.Client.Types.realizedPNL IB.Client.Types.remaining IB.Client.Types.reqId IB.Client.Types.scannerDataList IB.Client.Types.side IB.Client.Types.size IB.Client.Types.startDateStr IB.Client.Types.status IB.Client.Types.tag IB.Client.Types.tg_value IB.Client.Types.theta IB.Client.Types.tickType IB.Client.Types.tickerId IB.Client.Types.time IB.Client.Types.ts_value IB.Client.Types.undPrice IB.Client.Types.underComp IB.Client.Types.unrealizedPNL IB.Client.Types.val IB.Client.Types.value IB.Client.Types.vega IB.Client.Types.volume IB.Client.Types.whyHeld IB.Client.Types.yield IB.Client.Types.yieldRedemptionDate}
  IB.Client.Types.IBServer{IB.Client.Types.IBServer IB.Client.Types.s_addr IB.Client.Types.s_clientId IB.Client.Types.s_connected IB.Client.Types.s_debug IB.Client.Types.s_extraAuth IB.Client.Types.s_handler IB.Client.Types.s_msgThread IB.Client.Types.s_port IB.Client.Types.s_sock IB.Client.Types.s_timeoutInterval IB.Client.Types.s_twsTime IB.Client.Types.s_version}
  IB.Client.Types.MIB
  IB.Client.Types.NewsBulletin{IB.Client.Types.EXCHANGE_AVAIL_MSG IB.Client.Types.EXCHANGE_UNAVAIL_MSG IB.Client.Types.NEWS_MSG}
  IB.Client.Types.Order{IB.Client.Types.Order IB.Client.Types.ord_account IB.Client.Types.ord_action IB.Client.Types.ord_activeStartTime IB.Client.Types.ord_activeStopTime IB.Client.Types.ord_algoParams IB.Client.Types.ord_algoStrategy IB.Client.Types.ord_allOrNone IB.Client.Types.ord_auctionStrategy IB.Client.Types.ord_auxPrice IB.Client.Types.ord_basisPoints IB.Client.Types.ord_basisPointsType IB.Client.Types.ord_blockOrder IB.Client.Types.ord_clearingAccount IB.Client.Types.ord_clearingIntent IB.Client.Types.ord_clientId IB.Client.Types.ord_continuousUpdate IB.Client.Types.ord_delta IB.Client.Types.ord_deltaNeutralAuxPrice IB.Client.Types.ord_deltaNeutralClearingAccount IB.Client.Types.ord_deltaNeutralClearingIntent IB.Client.Types.ord_deltaNeutralConId IB.Client.Types.ord_deltaNeutralDesignatedLocation IB.Client.Types.ord_deltaNeutralOpenClose IB.Client.Types.ord_deltaNeutralOrderType IB.Client.Types.ord_deltaNeutralSettlingFirm IB.Client.Types.ord_deltaNeutralShortSale IB.Client.Types.ord_deltaNeutralShortSaleSlot IB.Client.Types.ord_designatedLocation IB.Client.Types.ord_discretionaryAmt IB.Client.Types.ord_displaySize IB.Client.Types.ord_eTradeOnly IB.Client.Types.ord_exemptCode IB.Client.Types.ord_faGroup IB.Client.Types.ord_faMethod IB.Client.Types.ord_faPercentage IB.Client.Types.ord_faProfile IB.Client.Types.ord_firmQuoteOnly IB.Client.Types.ord_goodAfterTime IB.Client.Types.ord_goodTillDate IB.Client.Types.ord_hedgeParam IB.Client.Types.ord_hedgeType IB.Client.Types.ord_hidden IB.Client.Types.ord_lmtPrice IB.Client.Types.ord_minQty IB.Client.Types.ord_nbboPriceCap IB.Client.Types.ord_notHeld IB.Client.Types.ord_ocaGroup IB.Client.Types.ord_ocaType IB.Client.Types.ord_openClose IB.Client.Types.ord_optOutSmartRouting IB.Client.Types.ord_orderId IB.Client.Types.ord_orderRef IB.Client.Types.ord_orderType IB.Client.Types.ord_origin IB.Client.Types.ord_outsideRth IB.Client.Types.ord_overridePercentageConstraints IB.Client.Types.ord_parentId IB.Client.Types.ord_percentOffset IB.Client.Types.ord_permId IB.Client.Types.ord_referencePriceType IB.Client.Types.ord_rule80A IB.Client.Types.ord_scaleAutoReset IB.Client.Types.ord_scaleInitFillQty IB.Client.Types.ord_scaleInitLevelSize IB.Client.Types.ord_scaleInitPosition IB.Client.Types.ord_scalePriceAdjustInterval IB.Client.Types.ord_scalePriceAdjustValue IB.Client.Types.ord_scalePriceIncrement IB.Client.Types.ord_scaleProfitOffset IB.Client.Types.ord_scaleRandomPercent IB.Client.Types.ord_scaleSubsLevelSize IB.Client.Types.ord_scaleTable IB.Client.Types.ord_settlingFirm IB.Client.Types.ord_shortSaleSlot IB.Client.Types.ord_smartComboRoutingParams IB.Client.Types.ord_startingPrice IB.Client.Types.ord_stockRangeLower IB.Client.Types.ord_stockRangeUpper IB.Client.Types.ord_stockRefPrice IB.Client.Types.ord_sweepToFill IB.Client.Types.ord_tif IB.Client.Types.ord_totalQuantity IB.Client.Types.ord_trailStopPrice IB.Client.Types.ord_trailingPercent IB.Client.Types.ord_transmit IB.Client.Types.ord_triggerMethod IB.Client.Types.ord_volatility IB.Client.Types.ord_volatilityType IB.Client.Types.ord_whatIf}
  IB.Client.Types.OrderComboLeg
  IB.Client.Types.OrderId
  IB.Client.Types.OrderState{IB.Client.Types.OrderState IB.Client.Types.os_commission IB.Client.Types.os_commissionCurrency IB.Client.Types.os_equityWithLoan IB.Client.Types.os_initMargin IB.Client.Types.os_maintMargin IB.Client.Types.os_maxCommission IB.Client.Types.os_minCommission IB.Client.Types.os_status IB.Client.Types.os_warningText}
  IB.Client.Types.Origin{IB.Client.Types.CUSTOMER IB.Client.Types.FIRM IB.Client.Types.UNKNOWN}
  IB.Client.Types.Preamble{IB.Client.Types.Preamble IB.Client.Types.pre_serverVersion IB.Client.Types.pre_twsTime}
  IB.Client.Types.RecvMsg{IB.Client.Types.RecvMsg IB.Client.Types.rc_msgBody IB.Client.Types.rc_msgId IB.Client.Types.rc_version}
  IB.Client.Types.ReqId
  IB.Client.Types.Request{IB.Client.Types.AccountSummaryReq IB.Client.Types.AccountUpdatesReq IB.Client.Types.AllOpenOrdersReq IB.Client.Types.AutoOpenOrdersReq IB.Client.Types.CalcOptionPriceReq IB.Client.Types.CancelAccountSummary IB.Client.Types.CancelCalcImpliedVolatility IB.Client.Types.CancelCalcOptionPrice IB.Client.Types.CancelFundamentalData IB.Client.Types.CancelHistoricalData IB.Client.Types.CancelMktData IB.Client.Types.CancelMktDepth IB.Client.Types.CancelNewsBulletins IB.Client.Types.CancelOrder IB.Client.Types.CancelPositions IB.Client.Types.CancelRealTimeBars IB.Client.Types.CancelScannerSubscription IB.Client.Types.ContractDetailsReq IB.Client.Types.CurrentTimeReq IB.Client.Types.ExecutionsReq IB.Client.Types.ExerciseOptionsReq IB.Client.Types.FAReplaceReq IB.Client.Types.FAReq IB.Client.Types.FundamentalDataReq IB.Client.Types.GlobalCancelReq IB.Client.Types.HistoricalDataReq IB.Client.Types.IdsReq IB.Client.Types.ImpliedVolatilityReq IB.Client.Types.ManagedAcctsReq IB.Client.Types.MarketDataTypeReq IB.Client.Types.MktDataReq IB.Client.Types.MktDepthReq IB.Client.Types.NewsBulletinsReq IB.Client.Types.OpenOrdersReq IB.Client.Types.PlaceOrder IB.Client.Types.PositionsReq IB.Client.Types.QueryDisplayGroups IB.Client.Types.RealTimeBarsReq IB.Client.Types.ScannerParametersReq IB.Client.Types.ScannerSubscriptionReq IB.Client.Types.SetServerLogLevel IB.Client.Types.StartApi IB.Client.Types.SubscribeToGroupEvents IB.Client.Types.UnsubscribeFromGroupEvents IB.Client.Types.UnusedReq IB.Client.Types.UpdateDisplayGroup IB.Client.Types.VerifyMessage IB.Client.Types.VerifyReq IB.Client.Types.asr_groupName IB.Client.Types.asr_tags IB.Client.Types.aur_acctCode IB.Client.Types.aur_subscribe IB.Client.Types.cdr_contract IB.Client.Types.eor_account IB.Client.Types.eor_contract IB.Client.Types.eor_exerciseAction IB.Client.Types.eor_exerciseQuantity IB.Client.Types.eor_override IB.Client.Types.exe_filter IB.Client.Types.far_cxml IB.Client.Types.far_pFaDataType IB.Client.Types.fdr_contract IB.Client.Types.fdr_reportType IB.Client.Types.hdr_barSizeSetting IB.Client.Types.hdr_chartOptions IB.Client.Types.hdr_contract IB.Client.Types.hdr_durationStr IB.Client.Types.hdr_endDataTime IB.Client.Types.hdr_formatDate IB.Client.Types.hdr_useRTH IB.Client.Types.hdr_whatToShow IB.Client.Types.ivr_contract IB.Client.Types.ivr_optionPrice IB.Client.Types.ivr_underPrice IB.Client.Types.mdr_contract IB.Client.Types.mdr_genericTicks IB.Client.Types.mdr_mktDataOptions IB.Client.Types.mdr_snapshot IB.Client.Types.mkr_contract IB.Client.Types.mkr_mktDepthOptions IB.Client.Types.mkr_numRows IB.Client.Types.opr_contract IB.Client.Types.opr_underPrice IB.Client.Types.opr_volatility IB.Client.Types.por_contract IB.Client.Types.por_order IB.Client.Types.rqp_orderId IB.Client.Types.rqp_reqId IB.Client.Types.rqp_tickerId IB.Client.Types.rtb_barSize IB.Client.Types.rtb_contract IB.Client.Types.rtb_realTimeBarsOptions IB.Client.Types.rtb_useRTH IB.Client.Types.rtb_whatToShow IB.Client.Types.ssr_subscription IB.Client.Types.ssr_subscriptionOptions IB.Client.Types.udg_contractInfo IB.Client.Types.vr_apiName IB.Client.Types.vr_apiVer}
  IB.Client.Types.ScanData{IB.Client.Types.ScanData IB.Client.Types.sd_benchmark IB.Client.Types.sd_contract IB.Client.Types.sd_distance IB.Client.Types.sd_legsStr IB.Client.Types.sd_projection IB.Client.Types.sd_rank}
  IB.Client.Types.ScannerSubscription{IB.Client.Types.ScannerSubscription IB.Client.Types.ssb_abovePrice IB.Client.Types.ssb_aboveVolume IB.Client.Types.ssb_averageOptionVolumeAbove IB.Client.Types.ssb_belowPrice IB.Client.Types.ssb_couponRateAbove IB.Client.Types.ssb_couponRateBelow IB.Client.Types.ssb_excludeConvertible IB.Client.Types.ssb_instrument IB.Client.Types.ssb_locationCode IB.Client.Types.ssb_marketCapAbove IB.Client.Types.ssb_marketCapBelow IB.Client.Types.ssb_maturityDateAbove IB.Client.Types.ssb_maturityDateBelow IB.Client.Types.ssb_moodyRatingAbove IB.Client.Types.ssb_moodyRatingBelow IB.Client.Types.ssb_numberOfRows IB.Client.Types.ssb_scanCode IB.Client.Types.ssb_scannerSettingPairs IB.Client.Types.ssb_spRatingAbove IB.Client.Types.ssb_spRatingBelow IB.Client.Types.ssb_stockTypeFilter}
  IB.Client.Types.TagValue{IB.Client.Types.TagValue IB.Client.Types.tv_tag IB.Client.Types.tv_value}
  IB.Client.Types.TickType{IB.Client.Types.ASK IB.Client.Types.ASK_EXCH IB.Client.Types.ASK_OPTION_COMPUTATION IB.Client.Types.ASK_SIZE IB.Client.Types.AUCTION_VOLUME IB.Client.Types.AVG_VOLUME IB.Client.Types.BID IB.Client.Types.BID_EXCH IB.Client.Types.BID_OPTION_COMPUTATION IB.Client.Types.BID_SIZE IB.Client.Types.CLOSE IB.Client.Types.HIGH IB.Client.Types.HIGH_13_WEEK IB.Client.Types.HIGH_26_WEEK IB.Client.Types.HIGH_52_WEEK IB.Client.Types.INDEX_FUTURE_PREMIUM IB.Client.Types.LAST IB.Client.Types.LAST_OPTION_COMPUTATION IB.Client.Types.LAST_SIZE IB.Client.Types.LOW IB.Client.Types.LOW_13_WEEK IB.Client.Types.LOW_26_WEEK IB.Client.Types.LOW_52_WEEK IB.Client.Types.MODEL_OPTION IB.Client.Types.OPEN IB.Client.Types.OPEN_INTEREST IB.Client.Types.OPTION_ASK_EXCH IB.Client.Types.OPTION_BID_EXCH IB.Client.Types.OPTION_CALL_OPEN_INTEREST IB.Client.Types.OPTION_CALL_VOLUME IB.Client.Types.OPTION_HISTORICAL_VOL IB.Client.Types.OPTION_IMPLIED_VOL IB.Client.Types.OPTION_PUT_OPEN_INTEREST IB.Client.Types.OPTION_PUT_VOLUME IB.Client.Types.VOLUME}
  IB.Client.Types.TickerId
  IB.Client.Types.UnderComp{IB.Client.Types.UnderComp IB.Client.Types.uc_conId IB.Client.Types.uc_delta IB.Client.Types.uc_price}
module dependencies:
package dependencies: base-4.8.1.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:GHC.Generics
import  -/  base-4.8.1.0:Control.Concurrent eedef4ce4eb0a2874a44a6b90863cce8
import  -/  base-4.8.1.0:Control.Concurrent.MVar 42b17972c7194d81ab1db982ca1fc21e
import  -/  base-4.8.1.0:Data.Data 2f6089819dfd9efc73bd700d055adda0
import  -/  base-4.8.1.0:Data.Int be955cf3771a887475be7d5bb2fd7064
import  -/  base-4.8.1.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.1.0:Data.Typeable.Internal 78d9dba5b6ac20dad582d2fb5137df59
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Conc.Sync 9e3836b2f1d1d028a49b374ef552faad
import  -/  base-4.8.1.0:GHC.Enum d0db4d619cd8916cc7a23444816222af
import  -/  base-4.8.1.0:GHC.Float a2f1c8675ca4f780f3a8aa0b05d1a5eb
import  -/  base-4.8.1.0:GHC.IO.Handle.Types 10e039aec061d8ce17bd51dbcefbc854
import  -/  base-4.8.1.0:GHC.Int 1570a070c504d19d46ae3bb17ba33047
import  -/  base-4.8.1.0:GHC.MVar b4b3c5aff0a4a363f48f0cc3b89c1927
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Read cfaa50b414b9b02ef6fe4fe5600d9b95
import  -/  base-4.8.1.0:GHC.Real 4c3b525ecbd4d62bb287aec36d4c2f0d
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
9e88f2601841ce4438c5733660df1b4c
  $cr4A0 :: Data.Data.Constr
a550d656eba65c7b7979536c3867b236
  $cr4A1 :: Data.Data.Constr
9978b956e02789918cd32c61bf7fabd0
  $cr4A7 :: Data.Data.Constr
23d23967aa0f36a7933e0d80f110162e
  $cr4A8 :: Data.Data.Constr
bd59aa4073a9ef22cd9ae86756c0a59e
  $cr4AA :: Data.Data.Constr
a5733b76aaf1d3dadd81b33ec7a979ff
  $cr4AB :: Data.Data.Constr
9056cbd97b2563c1c97e50cf5defdb08
  $cr4AD :: Data.Data.Constr
39827c2ac8ac8d7987186e3bc8e6a352
  $cr4AE :: Data.Data.Constr
36ad7e2058c5f74d242577df8a4952ce
  $cr4Ab :: Data.Data.Constr
23f9374f6f0b7c9b10ea4343977b1148
  $cr4Ac :: Data.Data.Constr
55e410ab6c785e24d9c816b94fbb7f66
  $cr4Ag :: Data.Data.Constr
265dd405af33dc3aa562e780aa9f8226
  $cr4Ak :: Data.Data.Constr
4a5ea3317a9c36fb40bf011b48623c76
  $cr4Al :: Data.Data.Constr
9854b998b8c99cd1855bb6db093997fc
  $cr4Am :: Data.Data.Constr
7be958c3cdb2f8a3cf96eb7c3ccffe28
  $cr4An :: Data.Data.Constr
47fb319890aa9e71ca984ea0551c595e
  $cr4Ao :: Data.Data.Constr
bdd44cf79ad1812876e7e733578f3cf7
  $cr4Ap :: Data.Data.Constr
bc435f46783dcf94c86ea996390d9887
  $cr4Aq :: Data.Data.Constr
8141d641244165d635888febd57f092c
  $cr4At :: Data.Data.Constr
d9253be4084270f632bf6e8a385cd71d
  $cr4Au :: Data.Data.Constr
5b338bfb8a01f3f6b40dddffa9f89140
  $cr4Av :: Data.Data.Constr
00f872e1c6eda8bc722aa983f65e0010
  $cr4Ay :: Data.Data.Constr
6e72a13ac2c47f7d0bbeb9b89a070165
  $cr4Az :: Data.Data.Constr
bc83b6cd61323c746ba312b2c5cf3f34
  $cr4rF :: Data.Data.Constr
a346c92084668edc146d2dd395b619dc
  $cr4t8 :: Data.Data.Constr
ca8c923b5e8d5eeea787a8046bd50e92
  $cr4tH :: Data.Data.Constr
733dbe378020e6eeb5bfad4d72f74663
  $cr4u1 :: Data.Data.Constr
7cf8c90d00cc1e671abf46af3970f4ab
  $cr4u6 :: Data.Data.Constr
e4b7afd20bb77229123219a02f2e7d3d
  $cr4uD :: Data.Data.Constr
501b147cd416a2897dea282b7ff880b2
  $cr4uH :: Data.Data.Constr
f7d11023650573baeae7d8b5a586856e
  $cr4uS :: Data.Data.Constr
eed4f13acd1db7a8771f25cef9f22c74
  $cr4ug :: Data.Data.Constr
0690d527b8ccb1c3f6455c7b7327a24d
  $cr4v0 :: Data.Data.Constr
5f2b24d20cb62bc294fe5c9a0ecdfe2c
  $cr4vK :: Data.Data.Constr
f64e3e4762014356f696c1e8a06b7bcb
  $cr4vL :: Data.Data.Constr
3cb1cb5f59c9d479190944a1c44ac890
  $cr4vM :: Data.Data.Constr
1142509129733db0be7d8200c68429c6
  $cr4vO :: Data.Data.Constr
138617c0467801996abf30b4bf74ae77
  $cr4vP :: Data.Data.Constr
fbac57247e5a2f51a44c1016ea6686a9
  $cr4vQ :: Data.Data.Constr
a05427535b3dfd9d570c2d5b2851cc9f
  $cr4vb :: Data.Data.Constr
65e3ece739a56b35b96e62a2c5b780c5
  $cr4vk :: Data.Data.Constr
61cb4a25b6264b68b697de756da80e3a
  $cr4wS :: Data.Data.Constr
5b92e169ae89e7d4270c69db59ad53b3
  $cr4wY :: Data.Data.Constr
a3c8db0f6367023a1b1059522b1bb5b2
  $cr4wZ :: Data.Data.Constr
333e562033f9a214fdb0640e68d8d007
  $cr4xB :: Data.Data.Constr
59127c3cab8b4b484328441d081911dc
  $cr4xF :: Data.Data.Constr
8ada2ff49cd6af679b1dc4d60af3205d
  $cr4xH :: Data.Data.Constr
bd5009fd37a97f351700619af132db77
  $cr4xM :: Data.Data.Constr
54b3931735c97855e0978207b1c4c47b
  $cr4xN :: Data.Data.Constr
4592f336b993901f61e205ab08bf2959
  $cr4xQ :: Data.Data.Constr
4d2175c0f2152715970c25f562724ee2
  $cr4xU :: Data.Data.Constr
599e69c3493ba157eb8e4dd4a858ece4
  $cr4xV :: Data.Data.Constr
872bf6b35f9f7e9b0bf668aecd4dacf0
  $cr4xW :: Data.Data.Constr
8c657920ffcd8c8199cd7698e0b6ffd9
  $cr4xY :: Data.Data.Constr
86b3f1e6afbf507447a3c509f84afc62
  $cr4xa :: Data.Data.Constr
ca799a41d45bbe5f796c5f1f058d6b5b
  $cr4xd :: Data.Data.Constr
71c92730cf7da1c0a278d03c585c0bf1
  $cr4xj :: Data.Data.Constr
7effc303f2ba59a2c31ae82f24689027
  $cr4xo :: Data.Data.Constr
eed9487155042e4bde980c48ebcabda2
  $cr4xv :: Data.Data.Constr
73442aebf8ab2ebdd9f43411b2ef9c18
  $cr4xw :: Data.Data.Constr
87d336d2d4cc60a910c77ca7f9cb1819
  $cr4xx :: Data.Data.Constr
ef1aed2309a7684e157decd667ebb852
  $cr4xy :: Data.Data.Constr
95d7ccd1a50dc26f6e0b4611a7a0d367
  $cr4y7 :: Data.Data.Constr
7c50d4684252dca14b07e44996966bec
  $cr4y9 :: Data.Data.Constr
2e326d76f9b203ae62cb7a7195dd8971
  $cr4yA :: Data.Data.Constr
085191748db34de4508a37bf28380ebf
  $cr4yC :: Data.Data.Constr
fe1d581f027bf5c37922191c9e54d305
  $cr4yD :: Data.Data.Constr
6757d268ac6e7537aeae92bdeef76883
  $cr4yF :: Data.Data.Constr
6317626da76a71b91f4f0298fd6fb20b
  $cr4yL :: Data.Data.Constr
1b8fba083722230ed3d688c477bc7958
  $cr4yM :: Data.Data.Constr
6ff0646c7632d12d5e650ba896569f91
  $cr4yP :: Data.Data.Constr
32ab6ee6ba9c03a965ac655cc4285ef9
  $cr4yQ :: Data.Data.Constr
f5aff6cbd2871a4b196c83fa98bee381
  $cr4yT :: Data.Data.Constr
cc39630bc7373c281d9f436a74a33bbd
  $cr4yU :: Data.Data.Constr
60b01e070161986d3ea77b4d98600db3
  $cr4yV :: Data.Data.Constr
f443d23432a917edff8468b6dbf7f93e
  $cr4yY :: Data.Data.Constr
f94e3626707f0db72d53214d4f56c38c
  $cr4yb :: Data.Data.Constr
cdfbba2de970ad999d68043f54b0b3cd
  $cr4yj :: Data.Data.Constr
80ff9c657e732a86fad1a3cbe83ae3dd
  $cr4yk :: Data.Data.Constr
fe0ba443ab4b71346dda902203083b61
  $cr4yl :: Data.Data.Constr
e8c689b2caccb8094d2fe4a952ac4277
  $cr4yu :: Data.Data.Constr
11815d9a756fccc483909edae98efab2
  $cr4yw :: Data.Data.Constr
c8693ee9c4fa55119cab564ee4280797
  $cr4yx :: Data.Data.Constr
3a8497631dcae4ed40b8ba22e6e1f47c
  $cr4yy :: Data.Data.Constr
e696f8338ccb371d736e828624ecc4d7
  $cr4yz :: Data.Data.Constr
071cc0d195174a2b063ecee845115f3f
  $cr4z0 :: Data.Data.Constr
f577066f99e8ad904ef13d74d34abf8c
  $cr4z2 :: Data.Data.Constr
fdd2c28b55ab5c611a263b7229063df2
  $cr4z4 :: Data.Data.Constr
a7b2dcaaea99afdfd67887e4fbd2597e
  $cr4zA :: Data.Data.Constr
71671fba92f95255fd42abf46b4de7d6
  $cr4zB :: Data.Data.Constr
5d048a500601916bfd7141e74253994b
  $cr4zC :: Data.Data.Constr
f7feac4930022f9042cda696a731496f
  $cr4zF :: Data.Data.Constr
9a1bf16ce7516f6ac2fdf56b9b02f0dc
  $cr4zO :: Data.Data.Constr
843e023305e68874dc148aa092ed314f
  $cr4zU :: Data.Data.Constr
915c6723db532cf25677e8896e890343
  $cr4zX :: Data.Data.Constr
091dc1fe93ca8d112502b488423b7a62
  $cr4zY :: Data.Data.Constr
69c2292001d70e0e44495d96aabcec47
  $cr4zZ :: Data.Data.Constr
5761c68ac567cecd71ddd7ccd310d4b2
  $cr4za :: Data.Data.Constr
2b3ada0f0b5d96344b708f4a347a1f0b
  $cr4zb :: Data.Data.Constr
3fac96bc49d427093b97446bf89f098d
  $cr4zf :: Data.Data.Constr
58922aecfa29c1550ca99437443b086a
  $cr4zg :: Data.Data.Constr
0d22b3ca08645aad8f00ded05343bf70
  $cr4zh :: Data.Data.Constr
c42800ecfb8aa442b9d615656aca785d
  $cr4zk :: Data.Data.Constr
1b43b1af84b2e214d34a30cc0b13a9e5
  $cr4zn :: Data.Data.Constr
7dc37c74764deeef1b4904d9aa0e13f1
  $cr4zo :: Data.Data.Constr
b52301a38e2212312955186cf84ff6d1
  $cr4zq :: Data.Data.Constr
2ba4b61db980fca90c4348712518c1dd
  $cr4zu :: Data.Data.Constr
a602feff44c47076b22c3708081a6e00
  $cr4zv :: Data.Data.Constr
39191f7c48ae1b21edc3fe7f9352c6a1
  $cr4zw :: Data.Data.Constr
adca0f6b9cec2303d6f35efffe126ba8
  $cr4zx :: Data.Data.Constr
252c1dc197c48700635aae3b3b8f54b5
  $cr4zy :: Data.Data.Constr
04365f85cad3c9d049c777c164d951ea
  $cr4zz :: Data.Data.Constr
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData :: Data.Data.Data IB.Client.Types.BarData
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.BarData
                  IB.Client.Types.$fDataBarData17
                  IB.Client.Types.$fDataBarData_$cgfoldl
                  IB.Client.Types.$fDataBarData_$cgunfold
                  IB.Client.Types.$fDataBarData_$ctoConstr
                  IB.Client.Types.$fDataBarData_$cdataTypeOf
                  IB.Client.Types.$fDataBarData_$s$dmdataCast1
                  IB.Client.Types.$fDataBarData_$s$dmdataCast2
                  IB.Client.Types.$fDataBarData_$cgmapT
                  IB.Client.Types.$fDataBarData_$cgmapQl
                  IB.Client.Types.$fDataBarData_$cgmapQr
                  IB.Client.Types.$fDataBarData_$cgmapQ
                  IB.Client.Types.$fDataBarData_$cgmapQi
                  IB.Client.Types.$fDataBarData_$cgmapM
                  IB.Client.Types.$fDataBarData_$cgmapMp
                  IB.Client.Types.$fDataBarData_$cgmapMo -}
1e52ed3f16bc585472a88df02450db95
  $fDataBarData1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [GHC.Types.Char])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c [GHC.Types.Char])) -}
9ee7989bb9012efca8d431bfd37f3d03
  $fDataBarData10 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   IB.Client.Types.$fDataBarData11
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
307ca14f6b2a5bb04d7e1d2a2b1d1ea5
  $fDataBarData11 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 16781394633280494409
                   __word 2520638044472077920
                   IB.Client.Types.$fDataBarData12
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
9c82a0b80564b20d8b126dcbd3d38ee9
  $fDataBarData12 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 16781394633280494409
                   __word 2520638044472077920
                   IB.Client.Types.$fDataBarData_ww2
                   IB.Client.Types.$fDataBarData_ww3
                   IB.Client.Types.$fDataBarData13) -}
00898e25ffba0b0c0cdb3a6d66ddc0bb
  $fDataBarData13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Char"#) -}
cc5cd4857eb4cbb6a45fe31f5567a97b
  $fDataBarData14 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataBarData15) -}
ec6411ff233cc2271a7d7fced50b1620
  $fDataBarData15 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4v0
                   (GHC.Types.[] @ Data.Data.Constr)) -}
f1f3bccc5bc9c251cfe82f0b6f9ee307
  $fDataBarData16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BarData"#) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData17 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.BarData
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataBarData18
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.BarData>_N)) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData18 ::
    GHC.Prim.Proxy# IB.Client.Types.BarData
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.BarData ->
                 IB.Client.Types.$fDataBarData19) -}
615df036de9bebd6ea4281056dd3ee1f
  $fDataBarData19 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 13316901378977797987
                   __word 8331217490581242626
                   IB.Client.Types.$fDataBarData_wild1
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
e8def41c83e755dc1be86f167b064e7f
  $fDataBarData2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c [GHC.Types.Char])
  {- Arity: 2,
     Strictness: <C(S(SLLLL)),1*C1(U(1*U,1*U,A,A,A))><L,1*C1(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   f :: forall d. Data.Data.Data d => c (t d) ->
                 case $dTypeable1
                        `cast`
                      (Data.Typeable.Internal.NTCo:Typeable[0] <* -> *>_N <t>_N)
                        (GHC.Prim.proxy#
                           @ (* -> *)
                           @ t) of wild { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case dt of wild1 {
                   DEFAULT -> GHC.Base.Nothing @ (c [GHC.Types.Char])
                   __word 17730107610217102821
                   -> case dt1 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ (c [GHC.Types.Char])
                        __word 9866972337190828755
                        -> GHC.Base.Just
                             @ (c [GHC.Types.Char])
                             (f @ GHC.Types.Char Data.Data.$fDataChar)
                               `cast`
                             (<c>_R (Trans
                                         (UnivCo mkUnsafeCo nominal t GHC.Prim.Any)
                                         (UnivCo mkUnsafeCo nominal GHC.Prim.Any []) <GHC.Types.Char>_N)) } } }) -}
90101adb6275a6b796522751070a326a
  $fDataBarData3 :: [GHC.Types.Char] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: [GHC.Types.Char] -> Data.Data.listDataType) -}
a1ac6450c31dd348b79ff852859f6c96
  $fDataBarData4 :: [GHC.Types.Char] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [GHC.Types.Char] ->
                 case ds of wild {
                   [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr }) -}
1656d659997edd3d1f6816f441ba4610
  $fDataBarData5 ::
    GHC.Prim.Proxy# [GHC.Types.Char] -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# [GHC.Types.Char] ->
                 IB.Client.Types.$fDataBarData6) -}
8b5eece99f4e56fc77839d856487d5c0
  $fDataBarData6 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case IB.Client.Types.$fDataBarData_w1 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17730107610217102821
                        __word 9866972337190828755
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             IB.Client.Types.$fDataBarData7 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
01c1c5cb7339376501bff002d8cfe448
  $fDataBarData7 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   IB.Client.Types.$fDataBarData9
                   IB.Client.Types.$fDataBarData8) -}
55f5c6bacde5750c94357fcbb39799d3
  $fDataBarData8 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (IB.Client.Types.$fDataBarData_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
8c00656c30359a29d153ccba23b3f7b4
  $fDataBarData9 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 17730107610217102821
                   __word 9866972337190828755) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cdataTypeOf ::
    IB.Client.Types.BarData -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.BarData -> IB.Client.Types.$tr4uZ) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.BarData
    -> c IB.Client.Types.BarData
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.BarData ->
                 case w2 of ww { IB.Client.Types.BarData ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgfoldl
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.BarData -> m IB.Client.Types.BarData
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.BarData ->
                 case w2 of ww { IB.Client.Types.BarData ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgmapM
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.BarData -> m IB.Client.Types.BarData
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U)> -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.BarData -> m IB.Client.Types.BarData
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U)> -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.BarData -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   eta :: IB.Client.Types.BarData ->
                 IB.Client.Types.$fDataBarData_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   f
                   eta) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.BarData
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.BarData ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.BarData ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ->
                 IB.Client.Types.$w$cgmapQi
                   @ u
                   ww1
                   w1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.BarData
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.BarData ->
                 case w3 of ww { IB.Client.Types.BarData ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgmapQl
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.BarData
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.BarData ->
                 case w3 of ww { IB.Client.Types.BarData ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgmapQr
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.BarData -> IB.Client.Types.BarData
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.BarData ->
                 case w1 of ww { IB.Client.Types.BarData ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.BarData
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww2)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww3)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww4)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww5)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww6)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww7)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww8)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww9) }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.BarData
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold @ c w w1) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$ctoConstr ::
    IB.Client.Types.BarData -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 IB.Client.Types.$cr4v0 }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.BarData)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.BarData)) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fDataBarData_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.BarData)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.BarData)) -}
7a9f3fc2176b96efcdbdfacd2d801696
  $fDataBarData_$s$fData[] :: Data.Data.Data [GHC.Types.Char]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  IB.Client.Types.$fDataBarData5
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N <[GHC.Types.Char]>_N))
                  (Data.Data.$fData[]_$cgfoldl
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgunfold
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  IB.Client.Types.$fDataBarData4
                  IB.Client.Types.$fDataBarData3
                  IB.Client.Types.$fDataBarData2
                  IB.Client.Types.$fDataBarData1
                  (Data.Data.$fData[]_$cgmapT
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgmapQl
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgmapQr
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgmapQ
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgmapQi
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgmapM
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgmapMp
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar)
                  (Data.Data.$fData[]_$cgmapMo
                     @ GHC.Types.Char
                     IB.Client.Types.$fDataBarData5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Char]>_N))
                     Data.Data.$fDataChar) -}
4cf4cbf080d0daa72a4a1b694d182036
  $fDataBarData_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
88049a3a07e206decb3bf1c38fd8e471
  $fDataBarData_w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   IB.Client.Types.$fDataBarData10) -}
fcd43c7815fdff3648050680c4454682
  $fDataBarData_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 17730107610217102821
                   __word 9866972337190828755
                   IB.Client.Types.$fDataBarData_ww2
                   IB.Client.Types.$fDataBarData_ww3
                   IB.Client.Types.$fDataBarData_ww4) -}
da74bebb0ea5c20b53a5702ec12d2740
  $fDataBarData_wild1 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 13316901378977797987
                   __word 8331217490581242626
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataBarData16) -}
ee508aa392e736fd8324a28e81671474
  $fDataBarData_ww1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "IB.Client.Types"#) -}
1733afcbf12d7d2fb9b1e9ebad482b45
  $fDataBarData_ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
57dcf4afd9bebced4b60f066796260ef
  $fDataBarData_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
959f42865e56164a10c639de6fccb35e
  $fDataBarData_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "[]"#) -}
eebb1a84a1d8da4415addc920710660b
  $fDataBarData_ww5 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "ibapi_FYtdachWwYX1Bggz8sQPyH"#) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg :: Data.Data.Data IB.Client.Types.ComboLeg
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ComboLeg
                  IB.Client.Types.$fDataComboLeg4
                  IB.Client.Types.$fDataComboLeg_$cgfoldl
                  IB.Client.Types.$fDataComboLeg_$cgunfold
                  IB.Client.Types.$fDataComboLeg_$ctoConstr
                  IB.Client.Types.$fDataComboLeg_$cdataTypeOf
                  IB.Client.Types.$fDataComboLeg_$s$dmdataCast1
                  IB.Client.Types.$fDataComboLeg_$s$dmdataCast2
                  IB.Client.Types.$fDataComboLeg_$cgmapT
                  IB.Client.Types.$fDataComboLeg_$cgmapQl
                  IB.Client.Types.$fDataComboLeg_$cgmapQr
                  IB.Client.Types.$fDataComboLeg_$cgmapQ
                  IB.Client.Types.$fDataComboLeg_$cgmapQi
                  IB.Client.Types.$fDataComboLeg_$cgmapM
                  IB.Client.Types.$fDataComboLeg_$cgmapMp
                  IB.Client.Types.$fDataComboLeg_$cgmapMo -}
a6f1d1329f721160ebc192fc8b572c06
  $fDataComboLeg1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataComboLeg2) -}
152f5cd4654c2259a019fcb941448c90
  $fDataComboLeg2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4u6
                   (GHC.Types.[] @ Data.Data.Constr)) -}
2b46d00483130bba1b28c2fec2d7ae30
  $fDataComboLeg3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ComboLeg"#) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg4 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.ComboLeg
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataComboLeg5
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.ComboLeg>_N)) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg5 ::
    GHC.Prim.Proxy# IB.Client.Types.ComboLeg
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.ComboLeg ->
                 IB.Client.Types.$fDataComboLeg6) -}
0491d507652e6f379dc75c75e87a3786
  $fDataComboLeg6 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 10607820550737186161
                   __word 10962961264459415452
                   IB.Client.Types.$fDataComboLeg_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cdataTypeOf ::
    IB.Client.Types.ComboLeg -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.ComboLeg -> IB.Client.Types.$tr4u5) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.ComboLeg
    -> c IB.Client.Types.ComboLeg
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.ComboLeg ->
                 case w2 of ww { IB.Client.Types.ComboLeg ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.$w$cgfoldl1
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8 }) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ComboLeg -> m IB.Client.Types.ComboLeg
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.ComboLeg ->
                 case w2 of ww { IB.Client.Types.ComboLeg ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.$w$cgmapM1
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8 }) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ComboLeg -> m IB.Client.Types.ComboLeg
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U)> -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ComboLeg -> m IB.Client.Types.ComboLeg
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U)> -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ComboLeg -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   eta :: IB.Client.Types.ComboLeg ->
                 IB.Client.Types.$fDataComboLeg_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   f
                   eta) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ComboLeg
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.ComboLeg ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.ComboLeg ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 IB.Client.Types.$w$cgmapQi1
                   @ u
                   ww1
                   w1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10 } }) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ComboLeg
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ComboLeg ->
                 case w3 of ww { IB.Client.Types.ComboLeg ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.$w$cgmapQl1
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8 }) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ComboLeg
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ComboLeg ->
                 case w3 of ww { IB.Client.Types.ComboLeg ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.$w$cgmapQr1
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8 }) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.ComboLeg -> IB.Client.Types.ComboLeg
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.ComboLeg ->
                 case w1 of ww { IB.Client.Types.ComboLeg ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.ComboLeg
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww1)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww2)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww5)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww6)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww7)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww8) }) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.ComboLeg
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold1 @ c w w1) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$ctoConstr ::
    IB.Client.Types.ComboLeg -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 IB.Client.Types.$cr4u6 }) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.ComboLeg)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ComboLeg)) -}
002efe166b6bb952b605830233cda850
  $fDataComboLeg_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.ComboLeg)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ComboLeg)) -}
4bc59bf09559a85c82de55bb4fae31e8
  $fDataComboLeg_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 10607820550737186161
                   __word 10962961264459415452
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataComboLeg3) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract :: Data.Data.Data IB.Client.Types.Contract
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Contract
                  IB.Client.Types.$fDataContract12
                  IB.Client.Types.$fDataContract_$cgfoldl
                  IB.Client.Types.$fDataContract_$cgunfold
                  IB.Client.Types.$fDataContract_$ctoConstr
                  IB.Client.Types.$fDataContract_$cdataTypeOf
                  IB.Client.Types.$fDataContract_$s$dmdataCast1
                  IB.Client.Types.$fDataContract_$s$dmdataCast2
                  IB.Client.Types.$fDataContract_$cgmapT
                  IB.Client.Types.$fDataContract_$cgmapQl
                  IB.Client.Types.$fDataContract_$cgmapQr
                  IB.Client.Types.$fDataContract_$cgmapQ
                  IB.Client.Types.$fDataContract_$cgmapQi
                  IB.Client.Types.$fDataContract_$cgmapM
                  IB.Client.Types.$fDataContract_$cgmapMp
                  IB.Client.Types.$fDataContract_$cgmapMo -}
f0040cd1a8db723792c1a863980cb992
  $fDataContract1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [IB.Client.Types.ComboLeg])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c [IB.Client.Types.ComboLeg])) -}
732a2199ac5653d7be488ac553b807c3
  $fDataContract10 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4tH
                   (GHC.Types.[] @ Data.Data.Constr)) -}
c792785e4da07c21963f853148183545
  $fDataContract11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Contract"#) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract12 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.Contract
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataContract13
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.Contract>_N)) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract13 ::
    GHC.Prim.Proxy# IB.Client.Types.Contract
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.Contract ->
                 IB.Client.Types.$fDataContract14) -}
a3f22561c6d098f2fcf0580ee249569c
  $fDataContract14 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 1808232373958010576
                   __word 7206972189630294984
                   IB.Client.Types.$fDataContract_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
c6c6f3e3e4c3edffba0ceb46e57160ad
  $fDataContract2 :: [IB.Client.Types.ComboLeg] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: [IB.Client.Types.ComboLeg] -> Data.Data.listDataType) -}
0d2b6f7bfa2227754c5eebf21f069e03
  $fDataContract3 :: [IB.Client.Types.ComboLeg] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [IB.Client.Types.ComboLeg] ->
                 case ds of wild {
                   [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr }) -}
59766506d731ab72d2f9eb343ae3fc5a
  $fDataContract4 ::
    GHC.Prim.Proxy# [IB.Client.Types.ComboLeg]
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# [IB.Client.Types.ComboLeg] ->
                 IB.Client.Types.$fDataContract5) -}
4ac407758a7737c42c72d549dca2638d
  $fDataContract5 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case IB.Client.Types.$fDataContract_w1 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17730107610217102821
                        __word 9866972337190828755
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             IB.Client.Types.$fDataContract6 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
4db7d3810f986bce6082fca58dce7ec3
  $fDataContract6 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   IB.Client.Types.$fDataBarData9
                   IB.Client.Types.$fDataContract7) -}
d601702efbbd7940abeee5cbf1b4505a
  $fDataContract7 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (IB.Client.Types.$fDataContract_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
c59fe6f5c24a764ac2cee2e9abb5463b
  $fDataContract8 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   IB.Client.Types.$fDataComboLeg6
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
2e194a7f2a1082c2e0f33aa816aa3231
  $fDataContract9 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataContract10) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails ::
    Data.Data.Data IB.Client.Types.ContractDetails
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ContractDetails
                  IB.Client.Types.$fDataContractDetails11
                  IB.Client.Types.$fDataContractDetails_$cgfoldl
                  IB.Client.Types.$fDataContractDetails_$cgunfold
                  IB.Client.Types.$fDataContractDetails_$ctoConstr
                  IB.Client.Types.$fDataContractDetails_$cdataTypeOf
                  IB.Client.Types.$fDataContractDetails_$s$dmdataCast1
                  IB.Client.Types.$fDataContractDetails_$s$dmdataCast2
                  IB.Client.Types.$fDataContractDetails_$cgmapT
                  IB.Client.Types.$fDataContractDetails_$cgmapQl
                  IB.Client.Types.$fDataContractDetails_$cgmapQr
                  IB.Client.Types.$fDataContractDetails_$cgmapQ
                  IB.Client.Types.$fDataContractDetails_$cgmapQi
                  IB.Client.Types.$fDataContractDetails_$cgmapM
                  IB.Client.Types.$fDataContractDetails_$cgmapMp
                  IB.Client.Types.$fDataContractDetails_$cgmapMo -}
67cdf5ea013df7b6dd30a38f682d3cf8
  $fDataContractDetails1 :: g -> Data.Data.Qi u g
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ u @ g ds :: g[OneShot] ->
                 Data.Data.Qi
                   @ *
                   @ u
                   @ g
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Base.Nothing @ u)) -}
f87c737ce8f124471d2eab3875a4b816
  $fDataContractDetails10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ContractDetails"#) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails11 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.ContractDetails
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataContractDetails12
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.ContractDetails>_N)) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails12 ::
    GHC.Prim.Proxy# IB.Client.Types.ContractDetails
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.ContractDetails ->
                 IB.Client.Types.$fDataContractDetails13) -}
e49ec02d5a8a78fa8f6bfbf5af37c480
  $fDataContractDetails13 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 10045500601695472822
                   __word 4715422504747047998
                   IB.Client.Types.$fDataContractDetails_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
13ca13478d83ea0b359aecdbf5ca2c94
  $fDataContractDetails2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
2cb0c1a17e1d17ba5e8a7455518a2025
  $fDataContractDetails3 :: g -> [u] -> [u]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ u @ g ds :: g[OneShot] eta :: [u] -> eta) -}
6b1dc9fc0b24eccfbb93fdc9b63caf58
  $fDataContractDetails4 :: g -> r -> r
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ r @ g ds :: g[OneShot] eta :: r -> eta) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails5 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ContractDetails
    -> Data.Data.CONST r IB.Client.Types.ContractDetails
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ContractDetails ->
                 case w3 of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$wa
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails6 ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.ContractDetails
    -> Data.Data.ID IB.Client.Types.ContractDetails
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.ContractDetails ->
                 case w1 of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$wa1
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
9fac88cce81a8fc0a173a1e0c94cb0af
  $fDataContractDetails7 :: g -> g
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True) (\ @ g tpl :: g -> tpl) -}
6343b747183a907b139bfa36324e4c77
  $fDataContractDetails8 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep
                   IB.Client.Types.$fDataContractDetails9) -}
3aefb06f08e358951273d95f5785d4f7
  $fDataContractDetails9 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4t8
                   (GHC.Types.[] @ Data.Data.Constr)) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cdataTypeOf ::
    IB.Client.Types.ContractDetails -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 IB.Client.Types.$tr4t7) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.ContractDetails
    -> c IB.Client.Types.ContractDetails
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.ContractDetails ->
                 case w2 of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$w$cgfoldl4
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ContractDetails
    -> m IB.Client.Types.ContractDetails
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.ContractDetails ->
                 case w2 of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$w$cgmapM4
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ContractDetails
    -> m IB.Client.Types.ContractDetails
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ContractDetails
    -> m IB.Client.Types.ContractDetails
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ContractDetails -> [u]
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   w :: forall d. Data.Data.Data d => d -> u
                   w1 :: IB.Client.Types.ContractDetails ->
                 case w1 of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$w$cgmapQ
                   @ u
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ContractDetails
    -> u
  {- Arity: 3,
     Strictness: <L,U(U)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.ContractDetails ->
                 case w2 of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$w$cgmapQi4
                   @ u
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ContractDetails
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataContractDetails5
                  `cast`
                (forall r r'.
                 <r -> r' -> r>_R
                 ->_R <r>_R
                 ->_R <forall d. Data.Data.Data d => d -> r'>_R
                 ->_R <IB.Client.Types.ContractDetails>_R
                 ->_R Data.Data.NTCo:CONST[0]
                          <*>_N <r>_R <IB.Client.Types.ContractDetails>_P) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ContractDetails
    -> r
  {- Arity: 4,
     Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ContractDetails ->
                 case w3 of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$w$cgmapQr4
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.ContractDetails
    -> IB.Client.Types.ContractDetails
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataContractDetails6
                  `cast`
                (<forall b. Data.Data.Data b => b -> b>_R
                 ->_R <IB.Client.Types.ContractDetails>_R
                 ->_R Data.Data.NTCo:ID[0] <IB.Client.Types.ContractDetails>_R) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.ContractDetails
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold4 @ c w w1) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$ctoConstr ::
    IB.Client.Types.ContractDetails -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 IB.Client.Types.$cr4t8 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.ContractDetails)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ContractDetails)) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fDataContractDetails_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.ContractDetails)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ContractDetails)) -}
d400f2e88e7f114de1540400b19490cd
  $fDataContractDetails_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 10045500601695472822
                   __word 4715422504747047998
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataContractDetails10) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cdataTypeOf ::
    IB.Client.Types.Contract -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.Contract -> IB.Client.Types.$tr4tG) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.Contract
    -> c IB.Client.Types.Contract
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.Contract ->
                 case w2 of ww { IB.Client.Types.Contract ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cgfoldl3
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Contract -> m IB.Client.Types.Contract
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.Contract ->
                 case w2 of ww { IB.Client.Types.Contract ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cgmapM2
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Contract -> m IB.Client.Types.Contract
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Contract -> m IB.Client.Types.Contract
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Contract -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   eta :: IB.Client.Types.Contract ->
                 IB.Client.Types.$fDataContract_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   f
                   eta) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Contract
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.Contract ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.Contract ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 IB.Client.Types.$w$cgmapQi2
                   @ u
                   ww1
                   w1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20 } }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Contract
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.Contract ->
                 case w3 of ww { IB.Client.Types.Contract ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cgmapQl3
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Contract
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.Contract ->
                 case w3 of ww { IB.Client.Types.Contract ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cgmapQr3
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Contract -> IB.Client.Types.Contract
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.Contract ->
                 case w1 of ww { IB.Client.Types.Contract ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cgmapT
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.Contract
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold3 @ c w w1) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$ctoConstr ::
    IB.Client.Types.Contract -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 IB.Client.Types.$cr4tH }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.Contract)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Contract)) -}
caa528b01431966dcbe9dd33da29f1b8
  $fDataContract_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.Contract)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Contract)) -}
7dbcd7c99b0747c5cc3a1509a6fb1e66
  $fDataContract_$s$fData[] ::
    Data.Data.Data [IB.Client.Types.ComboLeg]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [IB.Client.Types.ComboLeg]
                  IB.Client.Types.$fDataContract4
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N <[IB.Client.Types.ComboLeg]>_N))
                  (Data.Data.$fData[]_$cgfoldl
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgunfold
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  IB.Client.Types.$fDataContract3
                  IB.Client.Types.$fDataContract2
                  IB.Client.Types.$fDataContract_$s$fData[]_$cdataCast1
                  IB.Client.Types.$fDataContract1
                  (Data.Data.$fData[]_$cgmapT
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgmapQl
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgmapQr
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgmapQ
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgmapQi
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgmapM
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgmapMp
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg)
                  (Data.Data.$fData[]_$cgmapMo
                     @ IB.Client.Types.ComboLeg
                     IB.Client.Types.$fDataContract4
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ComboLeg]>_N))
                     IB.Client.Types.$fDataComboLeg) -}
657b6793d44e4c4aca0ebc7a3902a10c
  $fDataContract_$s$fData[]_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c [IB.Client.Types.ComboLeg])
  {- Arity: 2,
     Strictness: <C(S(SLLLL)),1*C1(U(1*U,1*U,A,A,A))><L,1*C1(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   f :: forall d. Data.Data.Data d => c (t d) ->
                 case $dTypeable1
                        `cast`
                      (Data.Typeable.Internal.NTCo:Typeable[0] <* -> *>_N <t>_N)
                        (GHC.Prim.proxy#
                           @ (* -> *)
                           @ t) of wild { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case dt of wild1 {
                   DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.ComboLeg])
                   __word 17730107610217102821
                   -> case dt1 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.ComboLeg])
                        __word 9866972337190828755
                        -> GHC.Base.Just
                             @ (c [IB.Client.Types.ComboLeg])
                             (f @ IB.Client.Types.ComboLeg IB.Client.Types.$fDataComboLeg)
                               `cast`
                             (<c>_R (Trans
                                         (UnivCo mkUnsafeCo nominal t GHC.Prim.Any)
                                         (UnivCo mkUnsafeCo nominal GHC.Prim.Any []) <IB.Client.Types.ComboLeg>_N)) } } }) -}
a4cd7b17ea0231358d4da17e4c3b64af
  $fDataContract_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
9392b90af6860006d0e81e7f406ca3b4
  $fDataContract_w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   IB.Client.Types.$fDataContract8) -}
810e4114300f9104a4f529bf349dbab1
  $fDataContract_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 1808232373958010576
                   __word 7206972189630294984
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataContract11) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution :: Data.Data.Data IB.Client.Types.Execution
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Execution
                  IB.Client.Types.$fDataExecution4
                  IB.Client.Types.$fDataExecution_$cgfoldl
                  IB.Client.Types.$fDataExecution_$cgunfold
                  IB.Client.Types.$fDataExecution_$ctoConstr
                  IB.Client.Types.$fDataExecution_$cdataTypeOf
                  IB.Client.Types.$fDataExecution_$s$dmdataCast1
                  IB.Client.Types.$fDataExecution_$s$dmdataCast2
                  IB.Client.Types.$fDataExecution_$cgmapT
                  IB.Client.Types.$fDataExecution_$cgmapQl
                  IB.Client.Types.$fDataExecution_$cgmapQr
                  IB.Client.Types.$fDataExecution_$cgmapQ
                  IB.Client.Types.$fDataExecution_$cgmapQi
                  IB.Client.Types.$fDataExecution_$cgmapM
                  IB.Client.Types.$fDataExecution_$cgmapMp
                  IB.Client.Types.$fDataExecution_$cgmapMo -}
ea375518773e1aec9de6b5cd98ff5e65
  $fDataExecution1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataExecution2) -}
44fd31f11f2555a08f6edb1e18c70a13
  $fDataExecution2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vk
                   (GHC.Types.[] @ Data.Data.Constr)) -}
e111d1ae30fae2f9afcc63735b8067d3
  $fDataExecution3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Execution"#) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution4 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.Execution
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataExecution5
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.Execution>_N)) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution5 ::
    GHC.Prim.Proxy# IB.Client.Types.Execution
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.Execution ->
                 IB.Client.Types.$fDataExecution6) -}
bfdb8cf8359458117e495f27a296a501
  $fDataExecution6 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 13282217954035244544
                   __word 4824142302774955442
                   IB.Client.Types.$fDataExecution_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter ::
    Data.Data.Data IB.Client.Types.ExecutionFilter
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ExecutionFilter
                  IB.Client.Types.$fDataExecutionFilter4
                  IB.Client.Types.$fDataExecutionFilter_$cgfoldl
                  IB.Client.Types.$fDataExecutionFilter_$cgunfold
                  IB.Client.Types.$fDataExecutionFilter_$ctoConstr
                  IB.Client.Types.$fDataExecutionFilter_$cdataTypeOf
                  IB.Client.Types.$fDataExecutionFilter_$s$dmdataCast1
                  IB.Client.Types.$fDataExecutionFilter_$s$dmdataCast2
                  IB.Client.Types.$fDataExecutionFilter_$cgmapT
                  IB.Client.Types.$fDataExecutionFilter_$cgmapQl
                  IB.Client.Types.$fDataExecutionFilter_$cgmapQr
                  IB.Client.Types.$fDataExecutionFilter_$cgmapQ
                  IB.Client.Types.$fDataExecutionFilter_$cgmapQi
                  IB.Client.Types.$fDataExecutionFilter_$cgmapM
                  IB.Client.Types.$fDataExecutionFilter_$cgmapMp
                  IB.Client.Types.$fDataExecutionFilter_$cgmapMo -}
4a31902788b67f4a487f8f1fa07ab12e
  $fDataExecutionFilter1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep
                   IB.Client.Types.$fDataExecutionFilter2) -}
67814d311cf09d952ec8fc254fec8b14
  $fDataExecutionFilter2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vb
                   (GHC.Types.[] @ Data.Data.Constr)) -}
ea351d67d99f10cf0204deba8fb638c6
  $fDataExecutionFilter3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ExecutionFilter"#) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter4 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.ExecutionFilter
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataExecutionFilter5
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.ExecutionFilter>_N)) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter5 ::
    GHC.Prim.Proxy# IB.Client.Types.ExecutionFilter
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.ExecutionFilter ->
                 IB.Client.Types.$fDataExecutionFilter6) -}
e219203e191234ac57f2b2e696e0bf13
  $fDataExecutionFilter6 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 2630183702028955150
                   __word 4845242483257566454
                   IB.Client.Types.$fDataExecutionFilter_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cdataTypeOf ::
    IB.Client.Types.ExecutionFilter -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 IB.Client.Types.$tr4va) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.ExecutionFilter
    -> c IB.Client.Types.ExecutionFilter
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.ExecutionFilter ->
                 case w2 of ww { IB.Client.Types.ExecutionFilter ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 IB.Client.Types.$w$cgfoldl6
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 }) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ExecutionFilter
    -> m IB.Client.Types.ExecutionFilter
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.ExecutionFilter ->
                 case w2 of ww { IB.Client.Types.ExecutionFilter ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 IB.Client.Types.$w$cgmapM6
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 }) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ExecutionFilter
    -> m IB.Client.Types.ExecutionFilter
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U)> -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ExecutionFilter
    -> m IB.Client.Types.ExecutionFilter
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U)> -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ExecutionFilter -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   eta :: IB.Client.Types.ExecutionFilter ->
                 IB.Client.Types.$fDataExecutionFilter_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   f
                   eta) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ExecutionFilter
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.ExecutionFilter ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.ExecutionFilter ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgmapQi6
                   @ u
                   ww1
                   w1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ExecutionFilter
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ExecutionFilter ->
                 case w3 of ww { IB.Client.Types.ExecutionFilter ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 IB.Client.Types.$w$cgmapQl5
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 }) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ExecutionFilter
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ExecutionFilter ->
                 case w3 of ww { IB.Client.Types.ExecutionFilter ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 IB.Client.Types.$w$cgmapQr6
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 }) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.ExecutionFilter
    -> IB.Client.Types.ExecutionFilter
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.ExecutionFilter ->
                 case w1 of ww { IB.Client.Types.ExecutionFilter ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 IB.Client.Types.ExecutionFilter
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww1)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww5)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww6)
                   (w @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww7) }) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.ExecutionFilter
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold6 @ c w w1) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$ctoConstr ::
    IB.Client.Types.ExecutionFilter -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 IB.Client.Types.$cr4vb }) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.ExecutionFilter)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ExecutionFilter)) -}
c3b324c073ae953432909e17e7787685
  $fDataExecutionFilter_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.ExecutionFilter)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ExecutionFilter)) -}
3f6890b34627b823593730346507c1b4
  $fDataExecutionFilter_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 2630183702028955150
                   __word 4845242483257566454
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataExecutionFilter3) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cdataTypeOf ::
    IB.Client.Types.Execution -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.Execution -> IB.Client.Types.$tr4vj) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.Execution
    -> c IB.Client.Types.Execution
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.Execution ->
                 case w2 of ww { IB.Client.Types.Execution ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 IB.Client.Types.$w$cgfoldl5
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Execution -> m IB.Client.Types.Execution
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.Execution ->
                 case w2 of ww { IB.Client.Types.Execution ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 IB.Client.Types.$w$cgmapM5
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Execution -> m IB.Client.Types.Execution
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Execution -> m IB.Client.Types.Execution
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Execution -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   eta :: IB.Client.Types.Execution ->
                 IB.Client.Types.$fDataExecution_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   f
                   eta) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Execution
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.Execution ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.Execution ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cgmapQi5
                   @ u
                   ww1
                   w1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 } }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Execution
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.Execution ->
                 case w3 of ww { IB.Client.Types.Execution ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 IB.Client.Types.$w$cgmapQl4
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Execution
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.Execution ->
                 case w3 of ww { IB.Client.Types.Execution ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 IB.Client.Types.$w$cgmapQr5
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Execution -> IB.Client.Types.Execution
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.Execution ->
                 case w1 of ww { IB.Client.Types.Execution ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 IB.Client.Types.$w$cgmapT1
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.Execution
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold5 @ c w w1) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$ctoConstr ::
    IB.Client.Types.Execution -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 IB.Client.Types.$cr4vk }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.Execution)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Execution)) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fDataExecution_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.Execution)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Execution)) -}
680ee55acf2a63fc448af0ab7f3d770d
  $fDataExecution_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 13282217954035244544
                   __word 4824142302774955442
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataExecution3) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType :: Data.Data.Data IB.Client.Types.FaDataType
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.FaDataType
                  IB.Client.Types.$fDataFaDataType9
                  IB.Client.Types.$fDataFaDataType_$cgfoldl
                  IB.Client.Types.$fDataFaDataType_$cgunfold
                  IB.Client.Types.$fDataFaDataType_$ctoConstr
                  IB.Client.Types.$fDataFaDataType_$cdataTypeOf
                  IB.Client.Types.$fDataFaDataType_$s$dmdataCast1
                  IB.Client.Types.$fDataFaDataType_$s$dmdataCast2
                  IB.Client.Types.$fDataFaDataType_$cgmapT
                  IB.Client.Types.$fDataFaDataType_$cgmapQl
                  IB.Client.Types.$fDataFaDataType_$cgmapQr
                  IB.Client.Types.$fDataFaDataType_$cgmapQ
                  IB.Client.Types.$fDataFaDataType_$cgmapQi
                  IB.Client.Types.$fDataFaDataType_$cgmapM
                  IB.Client.Types.$fDataFaDataType_$cgmapMp
                  IB.Client.Types.$fDataFaDataType_$cgmapMo -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType1 :: (IB.Client.Types.FaDataType, GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.ALIASES, GHC.Types.False)) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType10 ::
    GHC.Prim.Proxy# IB.Client.Types.FaDataType
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.FaDataType ->
                 IB.Client.Types.$fDataFaDataType11) -}
b036ccdadedb57817f08ec0009450f65
  $fDataFaDataType11 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 2137993924176827968
                   __word 8697757844668626217
                   IB.Client.Types.$fDataFaDataType_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType2 :: (IB.Client.Types.FaDataType, GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.PROFILES, GHC.Types.False)) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType3 :: (IB.Client.Types.FaDataType, GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.GROUPS, GHC.Types.False)) -}
e59ff7d737f67a4110cfb3a9e2178042
  $fDataFaDataType4 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataFaDataType5) -}
00cc1f37ef707022fa689e41c47c5445
  $fDataFaDataType5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vO
                   IB.Client.Types.$fDataFaDataType6) -}
91a028e185feac148f0e8282d46f3441
  $fDataFaDataType6 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vP
                   IB.Client.Types.$fDataFaDataType7) -}
2a858570077770bab5fbc4cd2598bf74
  $fDataFaDataType7 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vQ
                   (GHC.Types.[] @ Data.Data.Constr)) -}
b0b48b638a0156a662d425cc60ec88f6
  $fDataFaDataType8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FaDataType"#) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType9 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.FaDataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataFaDataType10
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.FaDataType>_N)) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cdataTypeOf ::
    IB.Client.Types.FaDataType -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.FaDataType -> IB.Client.Types.$tr4vN) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.FaDataType
    -> c IB.Client.Types.FaDataType
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   z6 :: forall g. g -> c g
                   ds :: IB.Client.Types.FaDataType ->
                 case ds of wild {
                   IB.Client.Types.GROUPS
                   -> z6 @ IB.Client.Types.FaDataType IB.Client.Types.GROUPS
                   IB.Client.Types.PROFILES
                   -> z6 @ IB.Client.Types.FaDataType IB.Client.Types.PROFILES
                   IB.Client.Types.ALIASES
                   -> z6 @ IB.Client.Types.FaDataType IB.Client.Types.ALIASES }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.FaDataType -> m IB.Client.Types.FaDataType
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.FaDataType ->
                 IB.Client.Types.$w$cgmapM7 @ m w w2) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.FaDataType -> m IB.Client.Types.FaDataType
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.FaDataType ->
                 IB.Client.Types.$w$cgmapMo @ m w w2) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.FaDataType -> m IB.Client.Types.FaDataType
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.FaDataType ->
                 IB.Client.Types.$w$cgmapMp @ m w w2) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.FaDataType -> [u]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   x0 :: IB.Client.Types.FaDataType ->
                 case x0 of wild { DEFAULT -> GHC.Types.[] @ u }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.FaDataType
    -> u
  {- Arity: 3, Strictness: <B,A><B,A><B,1*U>b,
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   i :: GHC.Types.Int
                   f :: forall d. Data.Data.Data d => d -> u
                   x :: IB.Client.Types.FaDataType ->
                 case x of wild { DEFAULT -> Data.Maybe.fromJust1 @ u }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.FaDataType
    -> r
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A><S,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   o :: r -> r' -> r
                   r1 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   eta :: IB.Client.Types.FaDataType ->
                 case eta of wild { DEFAULT -> r1 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.FaDataType
    -> r
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A><S,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   o :: r' -> r -> r
                   r0 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   x0 :: IB.Client.Types.FaDataType ->
                 case x0 of wild { DEFAULT -> r0 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.FaDataType -> IB.Client.Types.FaDataType
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: forall b. Data.Data.Data b => b -> b
                   x0 :: IB.Client.Types.FaDataType ->
                 x0) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.FaDataType
  {- Arity: 3,
     Strictness: <L,A><C(S),1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 IB.Client.Types.$w$cgunfold7 @ c w1 ww1 ww5 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$ctoConstr ::
    IB.Client.Types.FaDataType -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.FaDataType ->
                 case ds of wild {
                   IB.Client.Types.GROUPS -> IB.Client.Types.$cr4vO
                   IB.Client.Types.PROFILES -> IB.Client.Types.$cr4vP
                   IB.Client.Types.ALIASES -> IB.Client.Types.$cr4vQ }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.FaDataType)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.FaDataType)) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fDataFaDataType_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.FaDataType)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.FaDataType)) -}
489f5b54389678829a554730eb142d03
  $fDataFaDataType_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 2137993924176827968
                   __word 8697757844668626217
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataFaDataType8) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage :: Data.Data.Data IB.Client.Types.IBMessage
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.IBMessage
                  IB.Client.Types.$fDataIBMessage51
                  IB.Client.Types.$fDataIBMessage_$cgfoldl
                  IB.Client.Types.$fDataIBMessage_$cgunfold
                  IB.Client.Types.$fDataIBMessage_$ctoConstr
                  IB.Client.Types.$fDataIBMessage_$cdataTypeOf
                  IB.Client.Types.$fDataIBMessage_$s$dmdataCast1
                  IB.Client.Types.$fDataIBMessage_$s$dmdataCast2
                  IB.Client.Types.$fDataIBMessage_$cgmapT
                  IB.Client.Types.$fDataIBMessage_$cgmapQl
                  IB.Client.Types.$fDataIBMessage_$cgmapQr
                  IB.Client.Types.$fDataIBMessage_$cgmapQ
                  IB.Client.Types.$fDataIBMessage_$cgmapQi
                  IB.Client.Types.$fDataIBMessage_$cgmapM
                  IB.Client.Types.$fDataIBMessage_$cgmapMp
                  IB.Client.Types.$fDataIBMessage_$cgmapMo -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage1 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.IBMessage
    -> Data.Data.CONST r IB.Client.Types.IBMessage
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   o :: r -> r' -> r
                   r1 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   eta :: IB.Client.Types.IBMessage ->
                 IB.Client.Types.$fDataIBMessage_$cgfoldl
                   @ (Data.Data.CONST r)
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: Data.Data.CONST r (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    o c `cast` (Data.Data.NTCo:CONST[0] <*>_N <r>_R <d -> b>_P)
                      (f @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.CONST r (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <b>_P))
                   (\ @ g1 ds :: g1[OneShot] -> r1)
                     `cast`
                   (forall g1.
                    <g1>_R ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <g1>_P))
                   eta) -}
1841f826ccdaa5b5781419215c96ac02
  $fDataIBMessage10 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xo
                   IB.Client.Types.$fDataIBMessage11) -}
8a1f1268175336ec6832e3417be01b82
  $fDataIBMessage11 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xv
                   IB.Client.Types.$fDataIBMessage12) -}
231f4ac9f34fe5ba50142c3f4c976637
  $fDataIBMessage12 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xw
                   IB.Client.Types.$fDataIBMessage13) -}
fec6895f7fe31e244e61dac05435d3f7
  $fDataIBMessage13 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xx
                   IB.Client.Types.$fDataIBMessage14) -}
a7f54cc183f2c07d56b1faa804b0ce88
  $fDataIBMessage14 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xy
                   IB.Client.Types.$fDataIBMessage15) -}
0147908618578b38de44cf9c3a4ee33b
  $fDataIBMessage15 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xB
                   IB.Client.Types.$fDataIBMessage16) -}
3f921bbfafdff8f62aa68e4465a11270
  $fDataIBMessage16 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xF
                   IB.Client.Types.$fDataIBMessage17) -}
58302742744c9a6153892a441a493496
  $fDataIBMessage17 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xH
                   IB.Client.Types.$fDataIBMessage18) -}
5d62ff84b471dde1730bb2d4e47c9d28
  $fDataIBMessage18 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xM
                   IB.Client.Types.$fDataIBMessage19) -}
f27bbc05703ba1e4b5da25f649eeba4b
  $fDataIBMessage19 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xN
                   IB.Client.Types.$fDataIBMessage20) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage2 ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.IBMessage
    -> Data.Data.ID IB.Client.Types.IBMessage
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ f :: forall b. Data.Data.Data b => b -> b
                   x0 :: IB.Client.Types.IBMessage ->
                 IB.Client.Types.$fDataIBMessage_$cgfoldl
                   @ Data.Data.ID
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      ds :: Data.Data.ID (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    ds `cast` (Data.Data.NTCo:ID[0] <d -> b>_R) (f @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.ID (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:ID[0] <b>_R))
                   IB.Client.Types.$fDataContractDetails7
                     `cast`
                   (forall g. <g>_R ->_R Sym (Data.Data.NTCo:ID[0] <g>_R))
                   x0) -}
5cb381933813c41377a14e73c4ec4872
  $fDataIBMessage20 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xQ
                   IB.Client.Types.$fDataIBMessage21) -}
07c3c6c0198089ef0b9bc1e9495032f8
  $fDataIBMessage21 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xU
                   IB.Client.Types.$fDataIBMessage22) -}
24fd6c58c6a7649384f050483308a027
  $fDataIBMessage22 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xV
                   IB.Client.Types.$fDataIBMessage23) -}
6f5dd69f32fdd80a98e23f00bf4f7ac1
  $fDataIBMessage23 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xW
                   IB.Client.Types.$fDataIBMessage24) -}
71c9913df4acb75ad0923848ebed3500
  $fDataIBMessage24 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xY
                   IB.Client.Types.$fDataIBMessage25) -}
f366c64a75a0e5e1096860763915e7aa
  $fDataIBMessage25 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4y7
                   IB.Client.Types.$fDataIBMessage26) -}
58a0853ad079d7e57b7cf129d8d7c4a4
  $fDataIBMessage26 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4y9
                   IB.Client.Types.$fDataIBMessage27) -}
2f8d13d32f83e7b305472e53f5b62563
  $fDataIBMessage27 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yb
                   IB.Client.Types.$fDataIBMessage28) -}
6d31fa5766ed13b4db50f1ebf48e0247
  $fDataIBMessage28 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yj
                   IB.Client.Types.$fDataIBMessage29) -}
875de13fe9c4317739167453499cb124
  $fDataIBMessage29 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yk
                   IB.Client.Types.$fDataIBMessage30) -}
7374811ff7af89daaed4364fb4f547d7
  $fDataIBMessage3 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataIBMessage4) -}
0e7ef1df62d8fa5515affeec2b9eb279
  $fDataIBMessage30 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yl
                   IB.Client.Types.$fDataIBMessage31) -}
5f1a95b9551365fdcfabc7647151d8ac
  $fDataIBMessage31 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yu
                   IB.Client.Types.$fDataIBMessage32) -}
10eac66ce3116ae84576e5c1a95e265e
  $fDataIBMessage32 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yw
                   IB.Client.Types.$fDataIBMessage33) -}
1f7d28a545b3b04d3afd13ecdae176fd
  $fDataIBMessage33 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yx
                   IB.Client.Types.$fDataIBMessage34) -}
8c902130d348af1e3cc21cdb82252af3
  $fDataIBMessage34 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yy
                   IB.Client.Types.$fDataIBMessage35) -}
02e0d96a954987dc4475bc203f5e453f
  $fDataIBMessage35 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yz
                   IB.Client.Types.$fDataIBMessage36) -}
8fe8316426047f00255536db436c954a
  $fDataIBMessage36 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yA
                   IB.Client.Types.$fDataIBMessage37) -}
884362ea6b459d59da5de58e26677806
  $fDataIBMessage37 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yC
                   IB.Client.Types.$fDataIBMessage38) -}
b1f04d288d9e2888b3480b9270e14701
  $fDataIBMessage38 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yD
                   IB.Client.Types.$fDataIBMessage39) -}
866473c29b80f290b98638b98b4fbdc4
  $fDataIBMessage39 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yF
                   IB.Client.Types.$fDataIBMessage40) -}
8a726142dd4663d7f58179f8ba78703b
  $fDataIBMessage4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4wS
                   IB.Client.Types.$fDataIBMessage5) -}
50077d76922e703ea91aabe8ad75d351
  $fDataIBMessage40 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yL
                   IB.Client.Types.$fDataIBMessage41) -}
8adb842f4dcd5dc8d157cdfb421907cb
  $fDataIBMessage41 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yM
                   IB.Client.Types.$fDataIBMessage42) -}
5a8248800e74d6e3a7b77696c189565e
  $fDataIBMessage42 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yP
                   IB.Client.Types.$fDataIBMessage43) -}
f71c6064e290e6442e8f3b142d16ed55
  $fDataIBMessage43 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yQ
                   IB.Client.Types.$fDataIBMessage44) -}
3aceb771304852e78e3f3e8560bfa02a
  $fDataIBMessage44 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yT
                   IB.Client.Types.$fDataIBMessage45) -}
c876b78c837c98d9455fa5b30631b8a8
  $fDataIBMessage45 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yU
                   IB.Client.Types.$fDataIBMessage46) -}
10cc66d5b0e0f5b84f964b5702e7a7f1
  $fDataIBMessage46 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yV
                   IB.Client.Types.$fDataIBMessage47) -}
bb0b264062084395e7746b740b150899
  $fDataIBMessage47 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4yY
                   IB.Client.Types.$fDataIBMessage48) -}
dd2609d5ea65e852901f283c2693dfc6
  $fDataIBMessage48 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4z0
                   IB.Client.Types.$fDataIBMessage49) -}
8cc9d75df7ff387b4cdf190d96bb16e8
  $fDataIBMessage49 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4z2
                   (GHC.Types.[] @ Data.Data.Constr)) -}
d2520000ecbd21fce9d92b7cbb645b94
  $fDataIBMessage5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4wY
                   IB.Client.Types.$fDataIBMessage6) -}
a2a20be6d70b44635dfc1902ccffc23b
  $fDataIBMessage50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IBMessage"#) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage51 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataIBMessage52
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.IBMessage>_N)) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage52 ::
    GHC.Prim.Proxy# IB.Client.Types.IBMessage
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.IBMessage ->
                 IB.Client.Types.$fDataIBMessage53) -}
c22a97bf40ca5341751439b99e389eeb
  $fDataIBMessage53 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 3777067496386414961
                   __word 8110025445435275837
                   IB.Client.Types.$fDataIBMessage_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
c598b78fe10350caef26275e04a7d9f9
  $fDataIBMessage6 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4wZ
                   IB.Client.Types.$fDataIBMessage7) -}
9a9d1c7a2e9d4adbe15f992b8603b322
  $fDataIBMessage7 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xa
                   IB.Client.Types.$fDataIBMessage8) -}
61026cd4b5b18d55f274d4dbb8663877
  $fDataIBMessage8 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xd
                   IB.Client.Types.$fDataIBMessage9) -}
ddb07eaa05c544ad574e63f0e98b5b6f
  $fDataIBMessage9 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4xj
                   IB.Client.Types.$fDataIBMessage10) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cdataTypeOf ::
    IB.Client.Types.IBMessage -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.IBMessage -> IB.Client.Types.$tr4wR) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.IBMessage
    -> c IB.Client.Types.IBMessage
  {- Arity: 3, Strictness: <L,C(C1(C1(U)))><L,1*C1(U)><S,1*U> -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.IBMessage -> m IB.Client.Types.IBMessage
  {- Arity: 3,
     Strictness: <L,U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonad :: GHC.Base.Monad m
                   f :: forall d. Data.Data.Data d => d -> m d
                   eta :: IB.Client.Types.IBMessage ->
                 IB.Client.Types.$fDataIBMessage_$cgfoldl
                   @ m
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: m (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    let {
                      lvl1279 :: m d = f @ d $dData1 x
                    } in
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ (d -> b)
                      @ b
                      c
                      (\ c' :: d -> b ->
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ d
                         @ b
                         lvl1279
                         (\ x' :: d -> GHC.Base.return @ m $dMonad @ b (c' x'))))
                   (\ @ g -> GHC.Base.return @ m $dMonad @ g)
                   eta) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.IBMessage -> m IB.Client.Types.IBMessage
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonadPlus :: GHC.Base.MonadPlus m
                   eta :: forall d. Data.Data.Data d => d -> m d
                   eta1 :: IB.Client.Types.IBMessage ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.IBMessage
                   = GHC.Base.mzero @ m $dMonadPlus @ IB.Client.Types.IBMessage
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.IBMessage, GHC.Types.Bool)
                   @ IB.Client.Types.IBMessage
                   (IB.Client.Types.$fDataIBMessage_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         $dData1 :: Data.Data.Data d
                         ds :: Data.Data.Mp m (d -> b)[OneShot]
                         y :: d[OneShot] ->
                       let {
                         lvl1280 :: m d = eta @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds `cast` (Data.Data.NTCo:Mp[0] <m>_R <d -> b>_N)
                         (\ ds1 :: (d -> b, GHC.Types.Bool) ->
                          case ds1 of wild { (,) h b1 ->
                          case b1 of wild1 {
                            GHC.Types.False
                            -> GHC.Base.mplus
                                 @ m
                                 $dMonadPlus
                                 @ (b, GHC.Types.Bool)
                                 (GHC.Base.>>=
                                    @ m
                                    $dMonad
                                    @ d
                                    @ (b, GHC.Types.Bool)
                                    lvl1280
                                    (\ y' :: d ->
                                     GHC.Base.return
                                       @ m
                                       $dMonad
                                       @ (b, GHC.Types.Bool)
                                       (h y', GHC.Types.True)))
                                 (GHC.Base.return
                                    @ m
                                    $dMonad
                                    @ (b, GHC.Types.Bool)
                                    (h y, GHC.Types.False))
                            GHC.Types.True
                            -> GHC.Base.return
                                 @ m
                                 $dMonad
                                 @ (b, GHC.Types.Bool)
                                 (h y, GHC.Types.True) } }))
                        `cast`
                      (forall d b.
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <b>_N))
                      (\ @ g g1 :: g[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.NTCo:Mp[0] <m>_R <IB.Client.Types.IBMessage>_N)
                   (\ ds :: (IB.Client.Types.IBMessage, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.IBMessage
                           x' } })) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.IBMessage -> m IB.Client.Types.IBMessage
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonadPlus :: GHC.Base.MonadPlus m
                   eta :: forall d. Data.Data.Data d => d -> m d
                   eta1 :: IB.Client.Types.IBMessage ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.IBMessage
                   = GHC.Base.mzero @ m $dMonadPlus @ IB.Client.Types.IBMessage
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.IBMessage, GHC.Types.Bool)
                   @ IB.Client.Types.IBMessage
                   (IB.Client.Types.$fDataIBMessage_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         $dData1 :: Data.Data.Data d
                         ds :: Data.Data.Mp m (d -> b)[OneShot]
                         y :: d[OneShot] ->
                       let {
                         lvl1280 :: m d = eta @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds `cast` (Data.Data.NTCo:Mp[0] <m>_R <d -> b>_N)
                         (\ ds1 :: (d -> b, GHC.Types.Bool) ->
                          case ds1 of wild { (,) h b1 ->
                          GHC.Base.mplus
                            @ m
                            $dMonadPlus
                            @ (b, GHC.Types.Bool)
                            (GHC.Base.>>=
                               @ m
                               $dMonad
                               @ d
                               @ (b, GHC.Types.Bool)
                               lvl1280
                               (\ y' :: d ->
                                GHC.Base.return
                                  @ m
                                  $dMonad
                                  @ (b, GHC.Types.Bool)
                                  (h y', GHC.Types.True)))
                            (GHC.Base.return @ m $dMonad @ (b, GHC.Types.Bool) (h y, b1)) }))
                        `cast`
                      (forall d b.
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <b>_N))
                      (\ @ g g1 :: g[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.NTCo:Mp[0] <m>_R <IB.Client.Types.IBMessage>_N)
                   (\ ds :: (IB.Client.Types.IBMessage, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.IBMessage
                           x' } })) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.IBMessage -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   x0 :: IB.Client.Types.IBMessage ->
                 (IB.Client.Types.$fDataIBMessage_$cgfoldl
                    @ (Data.Data.Qr [u])
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr [u] (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: [u] ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <d -> b>_P)
                       (GHC.Types.: @ u (f @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr [u] (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails3 @ u)
                      `cast`
                    (forall g.
                     <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <IB.Client.Types.IBMessage>_P)
                   (GHC.Types.[] @ u)) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.IBMessage
    -> u
  {- Arity: 3, Strictness: <L,U(U)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   i :: GHC.Types.Int
                   f :: forall d. Data.Data.Data d => d -> u
                   x :: IB.Client.Types.IBMessage ->
                 case IB.Client.Types.$fDataIBMessage_$cgfoldl
                        @ (Data.Data.Qi u)
                        (\ @ d
                           @ b
                           $dData1 :: Data.Data.Data d
                           ds :: Data.Data.Qi u (d -> b)[OneShot]
                           a43 :: d[OneShot] ->
                         case ds of wild { Data.Data.Qi i' q ->
                         Data.Data.Qi
                           @ *
                           @ u
                           @ b
                           (case i' of wild1 { GHC.Types.I# x1 ->
                            GHC.Types.I# (GHC.Prim.+# x1 1) })
                           (case i of wild1 { GHC.Types.I# x1 ->
                            case i' of wild2 { GHC.Types.I# y ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.==# x1 y) of wild3 {
                              GHC.Types.False -> q
                              GHC.Types.True -> GHC.Base.Just @ u (f @ d $dData1 a43) } } }) })
                        (IB.Client.Types.$fDataContractDetails1 @ u)
                        x of wild { Data.Data.Qi ds q ->
                 Data.Maybe.fromJust @ u q }) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.IBMessage
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*U><L,C(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataIBMessage1
                  `cast`
                (forall r r'.
                 <r -> r' -> r>_R
                 ->_R <r>_R
                 ->_R <forall d. Data.Data.Data d => d -> r'>_R
                 ->_R <IB.Client.Types.IBMessage>_R
                 ->_R Data.Data.NTCo:CONST[0]
                          <*>_N <r>_R <IB.Client.Types.IBMessage>_P) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.IBMessage
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   o :: r' -> r -> r
                   r0 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   x0 :: IB.Client.Types.IBMessage ->
                 (IB.Client.Types.$fDataIBMessage_$cgfoldl
                    @ (Data.Data.Qr r)
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr r (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: r ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <r>_R <d -> b>_P)
                       (o (f @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr r (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails4 @ r)
                      `cast`
                    (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.NTCo:Qr[0] <*>_N <r>_R <IB.Client.Types.IBMessage>_P)
                   r0) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.IBMessage -> IB.Client.Types.IBMessage
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataIBMessage2
                  `cast`
                (<forall b. Data.Data.Data b => b -> b>_R
                 ->_R <IB.Client.Types.IBMessage>_R
                 ->_R Data.Data.NTCo:ID[0] <IB.Client.Types.IBMessage>_R) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.IBMessage
  {- Arity: 3,
     Strictness: <L,C(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 IB.Client.Types.$w$cgunfold8 @ c w w1 ww1 ww5 }) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$ctoConstr ::
    IB.Client.Types.IBMessage -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   IB.Client.Types.TickPrice ds1 ds2 ds3 ds4 ds5
                   -> IB.Client.Types.$cr4wS
                   IB.Client.Types.TickSize ds1 ds2 ds3 ds4 -> IB.Client.Types.$cr4wY
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> IB.Client.Types.$cr4wZ
                   IB.Client.Types.Err ds1 ds2 -> IB.Client.Types.$cr4xa
                   IB.Client.Types.OpenOrder ds1 ds2 ds3 ds4 ds5
                   -> IB.Client.Types.$cr4xd
                   IB.Client.Types.AcctValue ds1 ds2 ds3 ds4 -> IB.Client.Types.$cr4xj
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> IB.Client.Types.$cr4xo
                   IB.Client.Types.AcctUpdateTime ds1 -> IB.Client.Types.$cr4xv
                   IB.Client.Types.NextValidId ds1 -> IB.Client.Types.$cr4xw
                   IB.Client.Types.ContractData ds1 -> IB.Client.Types.$cr4xx
                   IB.Client.Types.ExecutionData ds1 ds2 ds3 -> IB.Client.Types.$cr4xy
                   IB.Client.Types.MarketDepth ds1 ds2 ds3 ds4 ds5 ds6
                   -> IB.Client.Types.$cr4xB
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7
                   -> IB.Client.Types.$cr4xF
                   IB.Client.Types.NewsBulletins ds1 ds2 ds3 ds4
                   -> IB.Client.Types.$cr4xH
                   IB.Client.Types.ManagedAccts ds1 -> IB.Client.Types.$cr4xM
                   IB.Client.Types.ReceiveFA ds1 ds2 -> IB.Client.Types.$cr4xN
                   IB.Client.Types.HistoricalData ds1 ds2 ds3 ds4
                   -> IB.Client.Types.$cr4xQ
                   IB.Client.Types.BondContractData ds1 -> IB.Client.Types.$cr4xU
                   IB.Client.Types.ScannerParameters ds1 -> IB.Client.Types.$cr4xV
                   IB.Client.Types.ScannerData ds1 ds2 -> IB.Client.Types.$cr4xW
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> IB.Client.Types.$cr4xY
                   IB.Client.Types.TickGeneric ds1 ds2 ds3 -> IB.Client.Types.$cr4y7
                   IB.Client.Types.TickString ds1 ds2 ds3 -> IB.Client.Types.$cr4y9
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> IB.Client.Types.$cr4yb
                   IB.Client.Types.UnusedMsg1 -> IB.Client.Types.$cr4yj
                   IB.Client.Types.CurrentTime ds1 -> IB.Client.Types.$cr4yk
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> IB.Client.Types.$cr4yl
                   IB.Client.Types.FundamentalData ds1 ds2 -> IB.Client.Types.$cr4yu
                   IB.Client.Types.ContractDataEnd ds1 -> IB.Client.Types.$cr4yw
                   IB.Client.Types.OpenOrderEnd -> IB.Client.Types.$cr4yx
                   IB.Client.Types.AcctDownloadEnd ds1 -> IB.Client.Types.$cr4yy
                   IB.Client.Types.ExecutionDataEnd ds1 -> IB.Client.Types.$cr4yz
                   IB.Client.Types.DeltaNeutralValidation ds1 ds2
                   -> IB.Client.Types.$cr4yA
                   IB.Client.Types.TickSnapshotEnd ds1 -> IB.Client.Types.$cr4yC
                   IB.Client.Types.MarketDataType ds1 ds2 -> IB.Client.Types.$cr4yD
                   IB.Client.Types.CommissionReport ds1 ds2 ds3 ds4 ds5 ds6
                   -> IB.Client.Types.$cr4yF
                   IB.Client.Types.UnusedMsg2 -> IB.Client.Types.$cr4yL
                   IB.Client.Types.PositionData ds1 ds2 ds3 ds4
                   -> IB.Client.Types.$cr4yM
                   IB.Client.Types.PositionEnd -> IB.Client.Types.$cr4yP
                   IB.Client.Types.AccountSummary ds1 ds2 ds3 ds4 ds5
                   -> IB.Client.Types.$cr4yQ
                   IB.Client.Types.AccountSummaryEnd ds1 -> IB.Client.Types.$cr4yT
                   IB.Client.Types.VerifyMessageAPI ds1 -> IB.Client.Types.$cr4yU
                   IB.Client.Types.VerifyCompleted ds1 ds2 -> IB.Client.Types.$cr4yV
                   IB.Client.Types.DisplayGroupList ds1 ds2 -> IB.Client.Types.$cr4yY
                   IB.Client.Types.DisplayGroupUpdated ds1 ds2
                   -> IB.Client.Types.$cr4z0
                   IB.Client.Types.IBUnknown -> IB.Client.Types.$cr4z2 }) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.IBMessage)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.IBMessage)) -}
c3159178f505ab80d8d762e3ddc31b28
  $fDataIBMessage_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.IBMessage)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.IBMessage)) -}
a757b8268a66a507cf2f3d5717f07561
  $fDataIBMessage_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 3777067496386414961
                   __word 8110025445435275837
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataIBMessage50) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder :: Data.Data.Data IB.Client.Types.Order
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Order
                  IB.Client.Types.$fDataOrder6
                  IB.Client.Types.$fDataOrder_$cgfoldl
                  IB.Client.Types.$fDataOrder_$cgunfold
                  IB.Client.Types.$fDataOrder_$ctoConstr
                  IB.Client.Types.$fDataOrder_$cdataTypeOf
                  IB.Client.Types.$fDataOrder_$s$dmdataCast1
                  IB.Client.Types.$fDataOrder_$s$dmdataCast2
                  IB.Client.Types.$fDataOrder_$cgmapT
                  IB.Client.Types.$fDataOrder_$cgmapQl
                  IB.Client.Types.$fDataOrder_$cgmapQr
                  IB.Client.Types.$fDataOrder_$cgmapQ
                  IB.Client.Types.$fDataOrder_$cgmapQi
                  IB.Client.Types.$fDataOrder_$cgmapM
                  IB.Client.Types.$fDataOrder_$cgmapMp
                  IB.Client.Types.$fDataOrder_$cgmapMo -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder1 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Order
    -> Data.Data.CONST r IB.Client.Types.Order
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.Order ->
                 case w3 of ww { IB.Client.Types.Order ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                 IB.Client.Types.$wa2
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89 }) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder2 ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Order -> Data.Data.ID IB.Client.Types.Order
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.Order ->
                 case w1 of ww { IB.Client.Types.Order ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                 IB.Client.Types.$wa3
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89 }) -}
6ca4b81da8a273bac9b9e63132c00d93
  $fDataOrder3 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataOrder4) -}
3cbb0260b72dc82349a7183aff075644
  $fDataOrder4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4rF
                   (GHC.Types.[] @ Data.Data.Constr)) -}
bf1b91f63258da39f8ef2ae595ae05cf
  $fDataOrder5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Order"#) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder6 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.Order
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataOrder7
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.Order>_N)) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder7 ::
    GHC.Prim.Proxy# IB.Client.Types.Order
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.Order ->
                 IB.Client.Types.$fDataOrder8) -}
902d36d78b69dee0135a3218a5a59727
  $fDataOrder8 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 16162290937259147819
                   __word 11074432185782089338
                   IB.Client.Types.$fDataOrder_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState :: Data.Data.Data IB.Client.Types.OrderState
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.OrderState
                  IB.Client.Types.$fDataOrderState4
                  IB.Client.Types.$fDataOrderState_$cgfoldl
                  IB.Client.Types.$fDataOrderState_$cgunfold
                  IB.Client.Types.$fDataOrderState_$ctoConstr
                  IB.Client.Types.$fDataOrderState_$cdataTypeOf
                  IB.Client.Types.$fDataOrderState_$s$dmdataCast1
                  IB.Client.Types.$fDataOrderState_$s$dmdataCast2
                  IB.Client.Types.$fDataOrderState_$cgmapT
                  IB.Client.Types.$fDataOrderState_$cgmapQl
                  IB.Client.Types.$fDataOrderState_$cgmapQr
                  IB.Client.Types.$fDataOrderState_$cgmapQ
                  IB.Client.Types.$fDataOrderState_$cgmapQi
                  IB.Client.Types.$fDataOrderState_$cgmapM
                  IB.Client.Types.$fDataOrderState_$cgmapMp
                  IB.Client.Types.$fDataOrderState_$cgmapMo -}
eccdb8fd6db51df9958c66d274830f31
  $fDataOrderState1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataOrderState2) -}
a67107e779d77f02eeb477622ea52735
  $fDataOrderState2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4uH
                   (GHC.Types.[] @ Data.Data.Constr)) -}
414836f37ec3aa2d011b6182ea06b6c4
  $fDataOrderState3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OrderState"#) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState4 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.OrderState
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataOrderState5
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.OrderState>_N)) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState5 ::
    GHC.Prim.Proxy# IB.Client.Types.OrderState
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.OrderState ->
                 IB.Client.Types.$fDataOrderState6) -}
c958094a0bd9cbba6185779011645f58
  $fDataOrderState6 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 278596056635594588
                   __word 15947261747344836303
                   IB.Client.Types.$fDataOrderState_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cdataTypeOf ::
    IB.Client.Types.OrderState -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.OrderState -> IB.Client.Types.$tr4uG) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.OrderState
    -> c IB.Client.Types.OrderState
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.OrderState ->
                 case w2 of ww { IB.Client.Types.OrderState ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgfoldl8
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.OrderState -> m IB.Client.Types.OrderState
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.OrderState ->
                 case w2 of ww { IB.Client.Types.OrderState ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgmapM9
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.OrderState -> m IB.Client.Types.OrderState
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U)> -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.OrderState -> m IB.Client.Types.OrderState
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U)> -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.OrderState -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   eta :: IB.Client.Types.OrderState ->
                 IB.Client.Types.$fDataOrderState_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   f
                   eta) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.OrderState
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.OrderState ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.OrderState ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ->
                 IB.Client.Types.$w$cgmapQi8
                   @ u
                   ww1
                   w1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.OrderState
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.OrderState ->
                 case w3 of ww { IB.Client.Types.OrderState ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgmapQl6
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.OrderState
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.OrderState ->
                 case w3 of ww { IB.Client.Types.OrderState ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cgmapQr8
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.OrderState -> IB.Client.Types.OrderState
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.OrderState ->
                 case w1 of ww { IB.Client.Types.OrderState ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.OrderState
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww5)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww6)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww7)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww8)
                   (w @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww9) }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.OrderState
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold10 @ c w w1) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$ctoConstr ::
    IB.Client.Types.OrderState -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 IB.Client.Types.$cr4uH }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.OrderState)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.OrderState)) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fDataOrderState_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.OrderState)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.OrderState)) -}
f1ea6eacf3012c8e36610aad3c7ca91b
  $fDataOrderState_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 278596056635594588
                   __word 15947261747344836303
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataOrderState3) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cdataTypeOf ::
    IB.Client.Types.Order -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.Order -> IB.Client.Types.$tr4oX) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.Order
    -> c IB.Client.Types.Order
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.Order ->
                 case w2 of ww { IB.Client.Types.Order ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                 IB.Client.Types.$w$cgfoldl7
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89 }) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Order -> m IB.Client.Types.Order
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.Order ->
                 case w2 of ww { IB.Client.Types.Order ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                 IB.Client.Types.$w$cgmapM8
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89 }) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Order -> m IB.Client.Types.Order
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Order -> m IB.Client.Types.Order
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Order -> [u]
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   w :: forall d. Data.Data.Data d => d -> u
                   w1 :: IB.Client.Types.Order ->
                 case w1 of ww { IB.Client.Types.Order ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                 IB.Client.Types.$w$cgmapQ1
                   @ u
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89 }) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Order
    -> u
  {- Arity: 3,
     Strictness: <L,U(U)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.Order ->
                 case w2 of ww { IB.Client.Types.Order ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                 IB.Client.Types.$w$cgmapQi7
                   @ u
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89 }) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Order
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataOrder1
                  `cast`
                (forall r r'.
                 <r -> r' -> r>_R
                 ->_R <r>_R
                 ->_R <forall d. Data.Data.Data d => d -> r'>_R
                 ->_R <IB.Client.Types.Order>_R
                 ->_R Data.Data.NTCo:CONST[0]
                          <*>_N <r>_R <IB.Client.Types.Order>_P) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Order
    -> r
  {- Arity: 4,
     Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.Order ->
                 case w3 of ww { IB.Client.Types.Order ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                 IB.Client.Types.$w$cgmapQr7
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89 }) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Order -> IB.Client.Types.Order
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataOrder2
                  `cast`
                (<forall b. Data.Data.Data b => b -> b>_R
                 ->_R <IB.Client.Types.Order>_R
                 ->_R Data.Data.NTCo:ID[0] <IB.Client.Types.Order>_R) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.Order
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold9 @ c w w1) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$ctoConstr :: IB.Client.Types.Order -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 IB.Client.Types.$cr4rF }) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.Order)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Order)) -}
2cd8217c2494d18a13975b77e7704072
  $fDataOrder_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.Order)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Order)) -}
c6e925ee5562a6d961a79486e108fffe
  $fDataOrder_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 16162290937259147819
                   __word 11074432185782089338
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataOrder5) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin :: Data.Data.Data IB.Client.Types.Origin
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Origin
                  IB.Client.Types.$fDataOrigin9
                  IB.Client.Types.$fDataOrigin_$cgfoldl
                  IB.Client.Types.$fDataOrigin_$cgunfold
                  IB.Client.Types.$fDataOrigin_$ctoConstr
                  IB.Client.Types.$fDataOrigin_$cdataTypeOf
                  IB.Client.Types.$fDataOrigin_$s$dmdataCast1
                  IB.Client.Types.$fDataOrigin_$s$dmdataCast2
                  IB.Client.Types.$fDataOrigin_$cgmapT
                  IB.Client.Types.$fDataOrigin_$cgmapQl
                  IB.Client.Types.$fDataOrigin_$cgmapQr
                  IB.Client.Types.$fDataOrigin_$cgmapQ
                  IB.Client.Types.$fDataOrigin_$cgmapQi
                  IB.Client.Types.$fDataOrigin_$cgmapM
                  IB.Client.Types.$fDataOrigin_$cgmapMp
                  IB.Client.Types.$fDataOrigin_$cgmapMo -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin1 :: (IB.Client.Types.Origin, GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.UNKNOWN, GHC.Types.False)) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin10 ::
    GHC.Prim.Proxy# IB.Client.Types.Origin
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.Origin ->
                 IB.Client.Types.$fDataOrigin11) -}
47744c484f90ac168fec8c047366816b
  $fDataOrigin11 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 778721838492405202
                   __word 15598286720105639440
                   IB.Client.Types.$fDataOrigin_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin2 :: (IB.Client.Types.Origin, GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.FIRM, GHC.Types.False)) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin3 :: (IB.Client.Types.Origin, GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.CUSTOMER, GHC.Types.False)) -}
b40dc97fa0a39c124586ec0e2c006f4e
  $fDataOrigin4 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataOrigin5) -}
17f5705533e7fc2f35be96643435714a
  $fDataOrigin5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vK
                   IB.Client.Types.$fDataOrigin6) -}
9ff65958acd68ddaf41549f947b4014e
  $fDataOrigin6 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vL
                   IB.Client.Types.$fDataOrigin7) -}
31df25337f1a3896b0621372ae9dc88c
  $fDataOrigin7 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4vM
                   (GHC.Types.[] @ Data.Data.Constr)) -}
6c3da08c9efad6a6660e4fdf3cd53f83
  $fDataOrigin8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Origin"#) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin9 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.Origin
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataOrigin10
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.Origin>_N)) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cdataTypeOf ::
    IB.Client.Types.Origin -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.Origin -> IB.Client.Types.$tr4vJ) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.Origin
    -> c IB.Client.Types.Origin
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   z6 :: forall g. g -> c g
                   ds :: IB.Client.Types.Origin ->
                 case ds of wild {
                   IB.Client.Types.CUSTOMER
                   -> z6 @ IB.Client.Types.Origin IB.Client.Types.CUSTOMER
                   IB.Client.Types.FIRM
                   -> z6 @ IB.Client.Types.Origin IB.Client.Types.FIRM
                   IB.Client.Types.UNKNOWN
                   -> z6 @ IB.Client.Types.Origin IB.Client.Types.UNKNOWN }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Origin -> m IB.Client.Types.Origin
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.Origin ->
                 IB.Client.Types.$w$cgmapM10 @ m w w2) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Origin -> m IB.Client.Types.Origin
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.Origin ->
                 IB.Client.Types.$w$cgmapMo1 @ m w w2) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Origin -> m IB.Client.Types.Origin
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.Origin ->
                 IB.Client.Types.$w$cgmapMp1 @ m w w2) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Origin -> [u]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   x0 :: IB.Client.Types.Origin ->
                 case x0 of wild { DEFAULT -> GHC.Types.[] @ u }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Origin
    -> u
  {- Arity: 3, Strictness: <B,A><B,A><B,1*U>b,
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   i :: GHC.Types.Int
                   f :: forall d. Data.Data.Data d => d -> u
                   x :: IB.Client.Types.Origin ->
                 case x of wild { DEFAULT -> Data.Maybe.fromJust1 @ u }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Origin
    -> r
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A><S,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   o :: r -> r' -> r
                   r1 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   eta :: IB.Client.Types.Origin ->
                 case eta of wild { DEFAULT -> r1 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Origin
    -> r
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A><S,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   o :: r' -> r -> r
                   r0 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   x0 :: IB.Client.Types.Origin ->
                 case x0 of wild { DEFAULT -> r0 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Origin -> IB.Client.Types.Origin
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ f :: forall b. Data.Data.Data b => b -> b
                   x0 :: IB.Client.Types.Origin ->
                 x0) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.Origin
  {- Arity: 3,
     Strictness: <L,A><C(S),1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 IB.Client.Types.$w$cgunfold11 @ c w1 ww1 ww5 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$ctoConstr ::
    IB.Client.Types.Origin -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Origin ->
                 case ds of wild {
                   IB.Client.Types.CUSTOMER -> IB.Client.Types.$cr4vK
                   IB.Client.Types.FIRM -> IB.Client.Types.$cr4vL
                   IB.Client.Types.UNKNOWN -> IB.Client.Types.$cr4vM }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.Origin)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Origin)) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fDataOrigin_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.Origin)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Origin)) -}
25a0c2b6dc92b50af83775a678e8c7e4
  $fDataOrigin_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 778721838492405202
                   __word 15598286720105639440
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataOrigin8) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest :: Data.Data.Data IB.Client.Types.Request
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Request
                  IB.Client.Types.$fDataRequest53
                  IB.Client.Types.$fDataRequest_$cgfoldl
                  IB.Client.Types.$fDataRequest_$cgunfold
                  IB.Client.Types.$fDataRequest_$ctoConstr
                  IB.Client.Types.$fDataRequest_$cdataTypeOf
                  IB.Client.Types.$fDataRequest_$s$dmdataCast1
                  IB.Client.Types.$fDataRequest_$s$dmdataCast2
                  IB.Client.Types.$fDataRequest_$cgmapT
                  IB.Client.Types.$fDataRequest_$cgmapQl
                  IB.Client.Types.$fDataRequest_$cgmapQr
                  IB.Client.Types.$fDataRequest_$cgmapQ
                  IB.Client.Types.$fDataRequest_$cgmapQi
                  IB.Client.Types.$fDataRequest_$cgmapM
                  IB.Client.Types.$fDataRequest_$cgmapMp
                  IB.Client.Types.$fDataRequest_$cgmapMo -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest1 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Request
    -> Data.Data.CONST r IB.Client.Types.Request
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   o :: r -> r' -> r
                   r1 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   eta :: IB.Client.Types.Request ->
                 IB.Client.Types.$fDataRequest_$cgfoldl
                   @ (Data.Data.CONST r)
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: Data.Data.CONST r (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    o c `cast` (Data.Data.NTCo:CONST[0] <*>_N <r>_R <d -> b>_P)
                      (f @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.CONST r (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <b>_P))
                   (\ @ g1 ds :: g1[OneShot] -> r1)
                     `cast`
                   (forall g1.
                    <g1>_R ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <g1>_P))
                   eta) -}
491fafc586b08ad273cb026bad566434
  $fDataRequest10 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zk
                   IB.Client.Types.$fDataRequest11) -}
0726118a36c3474b04c08823f504b301
  $fDataRequest11 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zn
                   IB.Client.Types.$fDataRequest12) -}
ac162f8c2d3b9061133515eb1ab7e1fe
  $fDataRequest12 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zo
                   IB.Client.Types.$fDataRequest13) -}
2bad48ee1d263f0bace078f317e29f0d
  $fDataRequest13 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zq
                   IB.Client.Types.$fDataRequest14) -}
8646970c58bce80005ceefa7e4995963
  $fDataRequest14 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zu
                   IB.Client.Types.$fDataRequest15) -}
a3652ec09e41abc1317220e4dc66b349
  $fDataRequest15 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zv
                   IB.Client.Types.$fDataRequest16) -}
3ca00a40a1a1167849a22288fdd97b5e
  $fDataRequest16 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zw
                   IB.Client.Types.$fDataRequest17) -}
b16b105196ae1792c4a565a533b7a6fd
  $fDataRequest17 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zx
                   IB.Client.Types.$fDataRequest18) -}
be4db4d5a6f44076bab4d0c7019a32ac
  $fDataRequest18 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zy
                   IB.Client.Types.$fDataRequest19) -}
8b5566d199d7e62dc581b5df1423cef9
  $fDataRequest19 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zz
                   IB.Client.Types.$fDataRequest20) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest2 ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Request -> Data.Data.ID IB.Client.Types.Request
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ f :: forall b. Data.Data.Data b => b -> b
                   x0 :: IB.Client.Types.Request ->
                 IB.Client.Types.$fDataRequest_$cgfoldl
                   @ Data.Data.ID
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      ds :: Data.Data.ID (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    ds `cast` (Data.Data.NTCo:ID[0] <d -> b>_R) (f @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.ID (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:ID[0] <b>_R))
                   IB.Client.Types.$fDataContractDetails7
                     `cast`
                   (forall g. <g>_R ->_R Sym (Data.Data.NTCo:ID[0] <g>_R))
                   x0) -}
d12a21b12a2d63a703103c336b7a88bd
  $fDataRequest20 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zA
                   IB.Client.Types.$fDataRequest21) -}
ffb23227aa460da3d4eee69eee1666c0
  $fDataRequest21 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zB
                   IB.Client.Types.$fDataRequest22) -}
ab16764bb2b2f7848ab26a0f99e3b273
  $fDataRequest22 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zC
                   IB.Client.Types.$fDataRequest23) -}
0a4d428a7c9275046beec65730c5af35
  $fDataRequest23 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zF
                   IB.Client.Types.$fDataRequest24) -}
d7ee51868e55115af119d2c99fd2934c
  $fDataRequest24 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zO
                   IB.Client.Types.$fDataRequest25) -}
398b59c50a2b229f1a438b434467eec0
  $fDataRequest25 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zU
                   IB.Client.Types.$fDataRequest26) -}
8050becc2551c4888a3ac0ee3a2aef58
  $fDataRequest26 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zX
                   IB.Client.Types.$fDataRequest27) -}
390a1b97ade80857720eb3206bdcfda1
  $fDataRequest27 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zY
                   IB.Client.Types.$fDataRequest28) -}
e19379b8d6daf7590e340b6b7b32ef5d
  $fDataRequest28 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zZ
                   IB.Client.Types.$fDataRequest29) -}
322ccc87679f70a980405eac14c8232e
  $fDataRequest29 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4A0
                   IB.Client.Types.$fDataRequest30) -}
83c2e7563e0ade97231b3c9e294892e3
  $fDataRequest3 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataRequest4) -}
864a179b22fc77e0e964bcc334358512
  $fDataRequest30 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4A1
                   IB.Client.Types.$fDataRequest31) -}
cce2fa723a813d719d5686d63ccccbe8
  $fDataRequest31 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4A7
                   IB.Client.Types.$fDataRequest32) -}
93b5bd4e06af6fd30aaf16fd64866ad4
  $fDataRequest32 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4A8
                   IB.Client.Types.$fDataRequest33) -}
e47bf0154220d9c08cd93009a686c50c
  $fDataRequest33 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Ab
                   IB.Client.Types.$fDataRequest34) -}
ec2983e667d1d83c995cf673c3a66cf3
  $fDataRequest34 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Ac
                   IB.Client.Types.$fDataRequest35) -}
c93c51715f7ce60b108c63d5c319bd52
  $fDataRequest35 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Ag
                   IB.Client.Types.$fDataRequest36) -}
d344b06d5d1d4e4b2b3f45872a6849c3
  $fDataRequest36 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Ak
                   IB.Client.Types.$fDataRequest37) -}
8f6a980155b681f4e1cf0dd4c74ab89c
  $fDataRequest37 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Al
                   IB.Client.Types.$fDataRequest38) -}
c9198ef852b0f296e47c90e9acc929b4
  $fDataRequest38 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Am
                   IB.Client.Types.$fDataRequest39) -}
20f4048cce336723b486144c7406aacb
  $fDataRequest39 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4An
                   IB.Client.Types.$fDataRequest40) -}
76d19896bd9994b26671894fbab0e1e1
  $fDataRequest4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4z4
                   IB.Client.Types.$fDataRequest5) -}
9e2565e2c538d320a3b23503817cbabd
  $fDataRequest40 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Ao
                   IB.Client.Types.$fDataRequest41) -}
a5c41dc75dc6bf49884a82437871eb98
  $fDataRequest41 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Ap
                   IB.Client.Types.$fDataRequest42) -}
ebea6fa62fba1da8b77717f18318ae5c
  $fDataRequest42 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Aq
                   IB.Client.Types.$fDataRequest43) -}
52231a8e54139cbd552b8f4782d6d74c
  $fDataRequest43 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4At
                   IB.Client.Types.$fDataRequest44) -}
d12b61ca15d8579dda47751664ff1eb0
  $fDataRequest44 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Au
                   IB.Client.Types.$fDataRequest45) -}
2fecd891a9e8cdbebc2c2fc3a7a9f1a6
  $fDataRequest45 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Av
                   IB.Client.Types.$fDataRequest46) -}
4e74c5b0f390e92fb2c2680e1c3a0e2e
  $fDataRequest46 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Ay
                   IB.Client.Types.$fDataRequest47) -}
ee10f16353e5e5913e9ddd280b6f4ddc
  $fDataRequest47 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4Az
                   IB.Client.Types.$fDataRequest48) -}
c2c0e294b2370bc7d30d6b4a1fcacbab
  $fDataRequest48 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4AA
                   IB.Client.Types.$fDataRequest49) -}
d0e9f4be0ef662d727628e55c425a063
  $fDataRequest49 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4AB
                   IB.Client.Types.$fDataRequest50) -}
9f0161977e01c66d63c0c125b333ffd7
  $fDataRequest5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4za
                   IB.Client.Types.$fDataRequest6) -}
9a97c902161e1acc9a80666a51c04415
  $fDataRequest50 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4AD
                   IB.Client.Types.$fDataRequest51) -}
6063eae81f2bab5c4bc98ae0c38869a9
  $fDataRequest51 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4AE
                   (GHC.Types.[] @ Data.Data.Constr)) -}
07fb3c17c6748f4fc6c97ea1c06bf676
  $fDataRequest52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Request"#) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest53 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.Request
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataRequest54
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.Request>_N)) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest54 ::
    GHC.Prim.Proxy# IB.Client.Types.Request
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.Request ->
                 IB.Client.Types.$fDataRequest55) -}
d4656d594fb2bc6955e5665ec75471df
  $fDataRequest55 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 9782473315901605187
                   __word 5662663584911798467
                   IB.Client.Types.$fDataRequest_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
8c5e8ee5389f3e824d4ee45bc085772c
  $fDataRequest6 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zb
                   IB.Client.Types.$fDataRequest7) -}
231193c5478ac02ae5f64388f3242e02
  $fDataRequest7 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zf
                   IB.Client.Types.$fDataRequest8) -}
bc34ad6a4adb523e61acac4bf2d3d478
  $fDataRequest8 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zg
                   IB.Client.Types.$fDataRequest9) -}
6412ee3a8dc386c5ce0cff909e1f70bb
  $fDataRequest9 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4zh
                   IB.Client.Types.$fDataRequest10) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cdataTypeOf ::
    IB.Client.Types.Request -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.Request -> IB.Client.Types.$tr4z3) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.Request
    -> c IB.Client.Types.Request
  {- Arity: 3, Strictness: <L,C(C1(C1(U)))><L,1*C1(U)><S,1*U> -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Request -> m IB.Client.Types.Request
  {- Arity: 3,
     Strictness: <L,U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonad :: GHC.Base.Monad m
                   f :: forall d. Data.Data.Data d => d -> m d
                   eta :: IB.Client.Types.Request ->
                 IB.Client.Types.$fDataRequest_$cgfoldl
                   @ m
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: m (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    let {
                      lvl1279 :: m d = f @ d $dData1 x
                    } in
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ (d -> b)
                      @ b
                      c
                      (\ c' :: d -> b ->
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ d
                         @ b
                         lvl1279
                         (\ x' :: d -> GHC.Base.return @ m $dMonad @ b (c' x'))))
                   (\ @ g -> GHC.Base.return @ m $dMonad @ g)
                   eta) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Request -> m IB.Client.Types.Request
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonadPlus :: GHC.Base.MonadPlus m
                   eta :: forall d. Data.Data.Data d => d -> m d
                   eta1 :: IB.Client.Types.Request ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.Request
                   = GHC.Base.mzero @ m $dMonadPlus @ IB.Client.Types.Request
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.Request, GHC.Types.Bool)
                   @ IB.Client.Types.Request
                   (IB.Client.Types.$fDataRequest_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         $dData1 :: Data.Data.Data d
                         ds :: Data.Data.Mp m (d -> b)[OneShot]
                         y :: d[OneShot] ->
                       let {
                         lvl1280 :: m d = eta @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds `cast` (Data.Data.NTCo:Mp[0] <m>_R <d -> b>_N)
                         (\ ds1 :: (d -> b, GHC.Types.Bool) ->
                          case ds1 of wild { (,) h b1 ->
                          case b1 of wild1 {
                            GHC.Types.False
                            -> GHC.Base.mplus
                                 @ m
                                 $dMonadPlus
                                 @ (b, GHC.Types.Bool)
                                 (GHC.Base.>>=
                                    @ m
                                    $dMonad
                                    @ d
                                    @ (b, GHC.Types.Bool)
                                    lvl1280
                                    (\ y' :: d ->
                                     GHC.Base.return
                                       @ m
                                       $dMonad
                                       @ (b, GHC.Types.Bool)
                                       (h y', GHC.Types.True)))
                                 (GHC.Base.return
                                    @ m
                                    $dMonad
                                    @ (b, GHC.Types.Bool)
                                    (h y, GHC.Types.False))
                            GHC.Types.True
                            -> GHC.Base.return
                                 @ m
                                 $dMonad
                                 @ (b, GHC.Types.Bool)
                                 (h y, GHC.Types.True) } }))
                        `cast`
                      (forall d b.
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <b>_N))
                      (\ @ g g1 :: g[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.NTCo:Mp[0] <m>_R <IB.Client.Types.Request>_N)
                   (\ ds :: (IB.Client.Types.Request, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.Request
                           x' } })) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Request -> m IB.Client.Types.Request
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonadPlus :: GHC.Base.MonadPlus m
                   eta :: forall d. Data.Data.Data d => d -> m d
                   eta1 :: IB.Client.Types.Request ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.Request
                   = GHC.Base.mzero @ m $dMonadPlus @ IB.Client.Types.Request
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.Request, GHC.Types.Bool)
                   @ IB.Client.Types.Request
                   (IB.Client.Types.$fDataRequest_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         $dData1 :: Data.Data.Data d
                         ds :: Data.Data.Mp m (d -> b)[OneShot]
                         y :: d[OneShot] ->
                       let {
                         lvl1280 :: m d = eta @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds `cast` (Data.Data.NTCo:Mp[0] <m>_R <d -> b>_N)
                         (\ ds1 :: (d -> b, GHC.Types.Bool) ->
                          case ds1 of wild { (,) h b1 ->
                          GHC.Base.mplus
                            @ m
                            $dMonadPlus
                            @ (b, GHC.Types.Bool)
                            (GHC.Base.>>=
                               @ m
                               $dMonad
                               @ d
                               @ (b, GHC.Types.Bool)
                               lvl1280
                               (\ y' :: d ->
                                GHC.Base.return
                                  @ m
                                  $dMonad
                                  @ (b, GHC.Types.Bool)
                                  (h y', GHC.Types.True)))
                            (GHC.Base.return @ m $dMonad @ (b, GHC.Types.Bool) (h y, b1)) }))
                        `cast`
                      (forall d b.
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <b>_N))
                      (\ @ g g1 :: g[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.NTCo:Mp[0] <m>_R <IB.Client.Types.Request>_N)
                   (\ ds :: (IB.Client.Types.Request, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.Request
                           x' } })) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Request -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   x0 :: IB.Client.Types.Request ->
                 (IB.Client.Types.$fDataRequest_$cgfoldl
                    @ (Data.Data.Qr [u])
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr [u] (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: [u] ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <d -> b>_P)
                       (GHC.Types.: @ u (f @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr [u] (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails3 @ u)
                      `cast`
                    (forall g.
                     <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <IB.Client.Types.Request>_P)
                   (GHC.Types.[] @ u)) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Request
    -> u
  {- Arity: 3, Strictness: <L,U(U)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   i :: GHC.Types.Int
                   f :: forall d. Data.Data.Data d => d -> u
                   x :: IB.Client.Types.Request ->
                 case IB.Client.Types.$fDataRequest_$cgfoldl
                        @ (Data.Data.Qi u)
                        (\ @ d
                           @ b
                           $dData1 :: Data.Data.Data d
                           ds :: Data.Data.Qi u (d -> b)[OneShot]
                           a43 :: d[OneShot] ->
                         case ds of wild { Data.Data.Qi i' q ->
                         Data.Data.Qi
                           @ *
                           @ u
                           @ b
                           (case i' of wild1 { GHC.Types.I# x1 ->
                            GHC.Types.I# (GHC.Prim.+# x1 1) })
                           (case i of wild1 { GHC.Types.I# x1 ->
                            case i' of wild2 { GHC.Types.I# y ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.==# x1 y) of wild3 {
                              GHC.Types.False -> q
                              GHC.Types.True -> GHC.Base.Just @ u (f @ d $dData1 a43) } } }) })
                        (IB.Client.Types.$fDataContractDetails1 @ u)
                        x of wild { Data.Data.Qi ds q ->
                 Data.Maybe.fromJust @ u q }) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Request
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*U><L,C(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataRequest1
                  `cast`
                (forall r r'.
                 <r -> r' -> r>_R
                 ->_R <r>_R
                 ->_R <forall d. Data.Data.Data d => d -> r'>_R
                 ->_R <IB.Client.Types.Request>_R
                 ->_R Data.Data.NTCo:CONST[0]
                          <*>_N <r>_R <IB.Client.Types.Request>_P) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Request
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   o :: r' -> r -> r
                   r0 :: r
                   f :: forall d. Data.Data.Data d => d -> r'
                   x0 :: IB.Client.Types.Request ->
                 (IB.Client.Types.$fDataRequest_$cgfoldl
                    @ (Data.Data.Qr r)
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr r (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: r ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <r>_R <d -> b>_P)
                       (o (f @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr r (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails4 @ r)
                      `cast`
                    (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.NTCo:Qr[0] <*>_N <r>_R <IB.Client.Types.Request>_P)
                   r0) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Request -> IB.Client.Types.Request
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataRequest2
                  `cast`
                (<forall b. Data.Data.Data b => b -> b>_R
                 ->_R <IB.Client.Types.Request>_R
                 ->_R Data.Data.NTCo:ID[0] <IB.Client.Types.Request>_R) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.Request
  {- Arity: 3,
     Strictness: <L,C(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 IB.Client.Types.$w$cgunfold12 @ c w w1 ww1 ww5 }) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$ctoConstr ::
    IB.Client.Types.Request -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   IB.Client.Types.MktDataReq ds1 ds2 ds3 ds4 ds5
                   -> IB.Client.Types.$cr4z4
                   IB.Client.Types.CancelMktData ds1 -> IB.Client.Types.$cr4za
                   IB.Client.Types.PlaceOrder ds1 ds2 ds3 -> IB.Client.Types.$cr4zb
                   IB.Client.Types.CancelOrder ds1 -> IB.Client.Types.$cr4zf
                   IB.Client.Types.OpenOrdersReq -> IB.Client.Types.$cr4zg
                   IB.Client.Types.AccountUpdatesReq ds1 ds2 -> IB.Client.Types.$cr4zh
                   IB.Client.Types.ExecutionsReq ds1 ds2 -> IB.Client.Types.$cr4zk
                   IB.Client.Types.IdsReq ds1 -> IB.Client.Types.$cr4zn
                   IB.Client.Types.ContractDetailsReq ds1 ds2
                   -> IB.Client.Types.$cr4zo
                   IB.Client.Types.MktDepthReq ds1 ds2 ds3 ds4
                   -> IB.Client.Types.$cr4zq
                   IB.Client.Types.CancelMktDepth ds1 -> IB.Client.Types.$cr4zu
                   IB.Client.Types.NewsBulletinsReq ds1 -> IB.Client.Types.$cr4zv
                   IB.Client.Types.CancelNewsBulletins -> IB.Client.Types.$cr4zw
                   IB.Client.Types.SetServerLogLevel ds1 -> IB.Client.Types.$cr4zx
                   IB.Client.Types.AutoOpenOrdersReq ds1 -> IB.Client.Types.$cr4zy
                   IB.Client.Types.AllOpenOrdersReq -> IB.Client.Types.$cr4zz
                   IB.Client.Types.ManagedAcctsReq -> IB.Client.Types.$cr4zA
                   IB.Client.Types.FAReq ds1 -> IB.Client.Types.$cr4zB
                   IB.Client.Types.FAReplaceReq ds1 ds2 -> IB.Client.Types.$cr4zC
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> IB.Client.Types.$cr4zF
                   IB.Client.Types.ExerciseOptionsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> IB.Client.Types.$cr4zO
                   IB.Client.Types.ScannerSubscriptionReq ds1 ds2 ds3
                   -> IB.Client.Types.$cr4zU
                   IB.Client.Types.CancelScannerSubscription ds1
                   -> IB.Client.Types.$cr4zX
                   IB.Client.Types.ScannerParametersReq -> IB.Client.Types.$cr4zY
                   IB.Client.Types.CancelHistoricalData ds1 -> IB.Client.Types.$cr4zZ
                   IB.Client.Types.CurrentTimeReq -> IB.Client.Types.$cr4A0
                   IB.Client.Types.RealTimeBarsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> IB.Client.Types.$cr4A1
                   IB.Client.Types.CancelRealTimeBars ds1 -> IB.Client.Types.$cr4A7
                   IB.Client.Types.FundamentalDataReq ds1 ds2 ds3
                   -> IB.Client.Types.$cr4A8
                   IB.Client.Types.CancelFundamentalData ds1 -> IB.Client.Types.$cr4Ab
                   IB.Client.Types.ImpliedVolatilityReq ds1 ds2 ds3 ds4
                   -> IB.Client.Types.$cr4Ac
                   IB.Client.Types.CalcOptionPriceReq ds1 ds2 ds3 ds4
                   -> IB.Client.Types.$cr4Ag
                   IB.Client.Types.CancelCalcImpliedVolatility ds1
                   -> IB.Client.Types.$cr4Ak
                   IB.Client.Types.CancelCalcOptionPrice ds1 -> IB.Client.Types.$cr4Al
                   IB.Client.Types.GlobalCancelReq -> IB.Client.Types.$cr4Am
                   IB.Client.Types.MarketDataTypeReq ds1 -> IB.Client.Types.$cr4An
                   IB.Client.Types.UnusedReq -> IB.Client.Types.$cr4Ao
                   IB.Client.Types.PositionsReq -> IB.Client.Types.$cr4Ap
                   IB.Client.Types.AccountSummaryReq ds1 ds2 ds3
                   -> IB.Client.Types.$cr4Aq
                   IB.Client.Types.CancelAccountSummary ds1 -> IB.Client.Types.$cr4At
                   IB.Client.Types.CancelPositions -> IB.Client.Types.$cr4Au
                   IB.Client.Types.VerifyReq ds1 ds2 -> IB.Client.Types.$cr4Av
                   IB.Client.Types.VerifyMessage ds1 -> IB.Client.Types.$cr4Ay
                   IB.Client.Types.QueryDisplayGroups ds1 -> IB.Client.Types.$cr4Az
                   IB.Client.Types.SubscribeToGroupEvents ds1 ds2
                   -> IB.Client.Types.$cr4AA
                   IB.Client.Types.UpdateDisplayGroup ds1 ds2
                   -> IB.Client.Types.$cr4AB
                   IB.Client.Types.UnsubscribeFromGroupEvents ds1
                   -> IB.Client.Types.$cr4AD
                   IB.Client.Types.StartApi -> IB.Client.Types.$cr4AE }) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.Request)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Request)) -}
fc280c903efa72a25e79a60326413a98
  $fDataRequest_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.Request)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.Request)) -}
a098fa41d3495ca0b4a6995ed9fe10e2
  $fDataRequest_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 9782473315901605187
                   __word 5662663584911798467
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataRequest52) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData :: Data.Data.Data IB.Client.Types.ScanData
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ScanData
                  IB.Client.Types.$fDataScanData4
                  IB.Client.Types.$fDataScanData_$cgfoldl
                  IB.Client.Types.$fDataScanData_$cgunfold
                  IB.Client.Types.$fDataScanData_$ctoConstr
                  IB.Client.Types.$fDataScanData_$cdataTypeOf
                  IB.Client.Types.$fDataScanData_$s$dmdataCast1
                  IB.Client.Types.$fDataScanData_$s$dmdataCast2
                  IB.Client.Types.$fDataScanData_$cgmapT
                  IB.Client.Types.$fDataScanData_$cgmapQl
                  IB.Client.Types.$fDataScanData_$cgmapQr
                  IB.Client.Types.$fDataScanData_$cgmapQ
                  IB.Client.Types.$fDataScanData_$cgmapQi
                  IB.Client.Types.$fDataScanData_$cgmapM
                  IB.Client.Types.$fDataScanData_$cgmapMp
                  IB.Client.Types.$fDataScanData_$cgmapMo -}
192d31ee9147c865c54ca95e1a174bac
  $fDataScanData1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataScanData2) -}
e87a08ce9a0e05a774db47b9e4c4bac0
  $fDataScanData2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4uS
                   (GHC.Types.[] @ Data.Data.Constr)) -}
ea23302563fc3f9a518fd906e76fbfa7
  $fDataScanData3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ScanData"#) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData4 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.ScanData
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataScanData5
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.ScanData>_N)) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData5 ::
    GHC.Prim.Proxy# IB.Client.Types.ScanData
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.ScanData ->
                 IB.Client.Types.$fDataScanData6) -}
f13a5660bfab15810b3e4c045a783c98
  $fDataScanData6 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8139754054060746233
                   __word 7636513050373581892
                   IB.Client.Types.$fDataScanData_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cdataTypeOf ::
    IB.Client.Types.ScanData -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.ScanData -> IB.Client.Types.$tr4uR) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.ScanData
    -> c IB.Client.Types.ScanData
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.ScanData ->
                 case w2 of ww { IB.Client.Types.ScanData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 IB.Client.Types.$w$cgfoldl9 @ c w w1 ww1 ww2 ww3 ww4 ww5 ww6 }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ScanData -> m IB.Client.Types.ScanData
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.ScanData ->
                 case w2 of ww { IB.Client.Types.ScanData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 IB.Client.Types.$w$cgmapM11 @ m w w1 ww1 ww2 ww3 ww4 ww5 ww6 }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ScanData -> m IB.Client.Types.ScanData
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U)> -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ScanData -> m IB.Client.Types.ScanData
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U)> -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ScanData -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   eta :: IB.Client.Types.ScanData ->
                 IB.Client.Types.$fDataScanData_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   f
                   eta) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ScanData
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.ScanData ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.ScanData ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.$w$cgmapQi9
                   @ u
                   ww1
                   w1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8 } }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ScanData
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ScanData ->
                 case w3 of ww { IB.Client.Types.ScanData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 IB.Client.Types.$w$cgmapQl7
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ScanData
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ScanData ->
                 case w3 of ww { IB.Client.Types.ScanData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 IB.Client.Types.$w$cgmapQr9
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.ScanData -> IB.Client.Types.ScanData
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.ScanData ->
                 case w1 of ww { IB.Client.Types.ScanData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 IB.Client.Types.ScanData
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww1)
                   (w @ IB.Client.Types.ContractDetails
                      IB.Client.Types.$fDataContractDetails
                      ww2)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww5)
                   (w @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww6) }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.ScanData
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold13 @ c w w1) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$ctoConstr ::
    IB.Client.Types.ScanData -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScanData ->
                 case ds of wild { IB.Client.Types.ScanData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 IB.Client.Types.$cr4uS }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.ScanData)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ScanData)) -}
50caed14fc43fe28260a3dbedf7b8938
  $fDataScanData_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.ScanData)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ScanData)) -}
03926cc57c4b99c93ff8b37108cb1101
  $fDataScanData_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8139754054060746233
                   __word 7636513050373581892
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataScanData3) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription ::
    Data.Data.Data IB.Client.Types.ScannerSubscription
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ScannerSubscription
                  IB.Client.Types.$fDataScannerSubscription6
                  IB.Client.Types.$fDataScannerSubscription_$cgfoldl
                  IB.Client.Types.$fDataScannerSubscription_$cgunfold
                  IB.Client.Types.$fDataScannerSubscription_$ctoConstr
                  IB.Client.Types.$fDataScannerSubscription_$cdataTypeOf
                  IB.Client.Types.$fDataScannerSubscription_$s$dmdataCast1
                  IB.Client.Types.$fDataScannerSubscription_$s$dmdataCast2
                  IB.Client.Types.$fDataScannerSubscription_$cgmapT
                  IB.Client.Types.$fDataScannerSubscription_$cgmapQl
                  IB.Client.Types.$fDataScannerSubscription_$cgmapQr
                  IB.Client.Types.$fDataScannerSubscription_$cgmapQ
                  IB.Client.Types.$fDataScannerSubscription_$cgmapQi
                  IB.Client.Types.$fDataScannerSubscription_$cgmapM
                  IB.Client.Types.$fDataScannerSubscription_$cgmapMp
                  IB.Client.Types.$fDataScannerSubscription_$cgmapMo -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription1 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ScannerSubscription
    -> Data.Data.CONST r IB.Client.Types.ScannerSubscription
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ScannerSubscription ->
                 case w3 of ww { IB.Client.Types.ScannerSubscription ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 IB.Client.Types.$wa4
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 }) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription2 ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.ScannerSubscription
    -> Data.Data.ID IB.Client.Types.ScannerSubscription
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.ScannerSubscription ->
                 case w1 of ww { IB.Client.Types.ScannerSubscription ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 IB.Client.Types.$wa5
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 }) -}
86c57f266be2645e187c4045de9da35d
  $fDataScannerSubscription3 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep
                   IB.Client.Types.$fDataScannerSubscription4) -}
5e8ec330d9bc6edd086411d65eafd8cc
  $fDataScannerSubscription4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4ug
                   (GHC.Types.[] @ Data.Data.Constr)) -}
4c03034f21c164967512732d3837e3a6
  $fDataScannerSubscription5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ScannerSubscription"#) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription6 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.ScannerSubscription
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataScannerSubscription7
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.ScannerSubscription>_N)) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription7 ::
    GHC.Prim.Proxy# IB.Client.Types.ScannerSubscription
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.ScannerSubscription ->
                 IB.Client.Types.$fDataScannerSubscription8) -}
67d3b9d19f8ce3b62b8898292c6141fe
  $fDataScannerSubscription8 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 11556449336424948323
                   __word 12009544509048338934
                   IB.Client.Types.$fDataScannerSubscription_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cdataTypeOf ::
    IB.Client.Types.ScannerSubscription -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 IB.Client.Types.$tr4uf) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.ScannerSubscription
    -> c IB.Client.Types.ScannerSubscription
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.ScannerSubscription ->
                 case w2 of ww { IB.Client.Types.ScannerSubscription ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 IB.Client.Types.$w$cgfoldl10
                   @ c
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 }) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ScannerSubscription
    -> m IB.Client.Types.ScannerSubscription
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.ScannerSubscription ->
                 case w2 of ww { IB.Client.Types.ScannerSubscription ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 IB.Client.Types.$w$cgmapM12
                   @ m
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 }) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ScannerSubscription
    -> m IB.Client.Types.ScannerSubscription
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.ScannerSubscription
    -> m IB.Client.Types.ScannerSubscription
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ScannerSubscription -> [u]
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   w :: forall d. Data.Data.Data d => d -> u
                   w1 :: IB.Client.Types.ScannerSubscription ->
                 case w1 of ww { IB.Client.Types.ScannerSubscription ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 IB.Client.Types.$w$cgmapQ2
                   @ u
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 }) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.ScannerSubscription
    -> u
  {- Arity: 3,
     Strictness: <L,U(U)><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.ScannerSubscription ->
                 case w2 of ww { IB.Client.Types.ScannerSubscription ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 IB.Client.Types.$w$cgmapQi10
                   @ u
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 }) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ScannerSubscription
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataScannerSubscription1
                  `cast`
                (forall r r'.
                 <r -> r' -> r>_R
                 ->_R <r>_R
                 ->_R <forall d. Data.Data.Data d => d -> r'>_R
                 ->_R <IB.Client.Types.ScannerSubscription>_R
                 ->_R Data.Data.NTCo:CONST[0]
                          <*>_N <r>_R <IB.Client.Types.ScannerSubscription>_P) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.ScannerSubscription
    -> r
  {- Arity: 4,
     Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.ScannerSubscription ->
                 case w3 of ww { IB.Client.Types.ScannerSubscription ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                 IB.Client.Types.$w$cgmapQr10
                   @ r
                   @ r'
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21 }) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.ScannerSubscription
    -> IB.Client.Types.ScannerSubscription
  {- Arity: 2,
     Strictness: <L,C(C1(U))><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataScannerSubscription2
                  `cast`
                (<forall b. Data.Data.Data b => b -> b>_R
                 ->_R <IB.Client.Types.ScannerSubscription>_R
                 ->_R Data.Data.NTCo:ID[0]
                          <IB.Client.Types.ScannerSubscription>_R) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.ScannerSubscription
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold14 @ c w w1) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$ctoConstr ::
    IB.Client.Types.ScannerSubscription -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 IB.Client.Types.$cr4ug }) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.ScannerSubscription)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ScannerSubscription)) -}
367c05871f196c1198c7c33cc84e551f
  $fDataScannerSubscription_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.ScannerSubscription)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.ScannerSubscription)) -}
cd318601018389ee9144fad7ca989daf
  $fDataScannerSubscription_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 11556449336424948323
                   __word 12009544509048338934
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataScannerSubscription5) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue :: Data.Data.Data IB.Client.Types.TagValue
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.TagValue
                  IB.Client.Types.$fDataTagValue5
                  IB.Client.Types.$fDataTagValue_$cgfoldl
                  IB.Client.Types.$fDataTagValue_$cgunfold
                  IB.Client.Types.$fDataTagValue_$ctoConstr
                  IB.Client.Types.$fDataTagValue_$cdataTypeOf
                  IB.Client.Types.$fDataTagValue_$s$dmdataCast1
                  IB.Client.Types.$fDataTagValue_$s$dmdataCast2
                  IB.Client.Types.$fDataTagValue_$cgmapT
                  IB.Client.Types.$fDataTagValue_$cgmapQl
                  IB.Client.Types.$fDataTagValue_$cgmapQr
                  IB.Client.Types.$fDataTagValue_$cgmapQ
                  IB.Client.Types.$fDataTagValue_$cgmapQi
                  IB.Client.Types.$fDataTagValue_$cgmapM
                  IB.Client.Types.$fDataTagValue_$cgmapMp
                  IB.Client.Types.$fDataTagValue_$cgmapMo -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue1 ::
    (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.TagValue,
     GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.TagValue, GHC.Types.False)) -}
0fa6b88642de3e07f839fe9af6fc199d
  $fDataTagValue2 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataTagValue3) -}
f13f048e32fdde8682766d3f3eef4b76
  $fDataTagValue3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4uD
                   (GHC.Types.[] @ Data.Data.Constr)) -}
a9746b2d1f3db05509b2c6efeb09b189
  $fDataTagValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TagValue"#) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue5 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.TagValue
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataTagValue6
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.TagValue>_N)) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue6 ::
    GHC.Prim.Proxy# IB.Client.Types.TagValue
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.TagValue ->
                 IB.Client.Types.$fDataTagValue7) -}
04472da80893c4b48a5b949b63e33803
  $fDataTagValue7 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 12796904425481288460
                   __word 16615695108170486944
                   IB.Client.Types.$fDataTagValue_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cdataTypeOf ::
    IB.Client.Types.TagValue -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.TagValue -> IB.Client.Types.$tr4uC) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.TagValue
    -> c IB.Client.Types.TagValue
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.TagValue ->
                 case w2 of ww { IB.Client.Types.TagValue ww1 ww2 ->
                 IB.Client.Types.$w$cgfoldl11 @ c w w1 ww1 ww2 }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.TagValue -> m IB.Client.Types.TagValue
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.TagValue ->
                 case w2 of ww { IB.Client.Types.TagValue ww1 ww2 ->
                 IB.Client.Types.$w$cgmapM13 @ m w w1 ww1 ww2 }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.TagValue -> m IB.Client.Types.TagValue
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U)>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonadPlus :: GHC.Base.MonadPlus m
                   eta :: forall d. Data.Data.Data d => d -> m d
                   eta1 :: IB.Client.Types.TagValue ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.TagValue
                   = GHC.Base.mzero @ m $dMonadPlus @ IB.Client.Types.TagValue
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.TagValue, GHC.Types.Bool)
                   @ IB.Client.Types.TagValue
                   (case eta1 of wild { IB.Client.Types.TagValue a43 a44 ->
                    let {
                      a45 :: forall d b.
                             Data.Data.Data d =>
                             Data.Data.Mp m (d -> b) -> d -> m (b, GHC.Types.Bool)
                        {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                      = \ @ d
                          @ b
                          $dData1 :: Data.Data.Data d
                          ds :: Data.Data.Mp m (d -> b)[OneShot]
                          y :: d[OneShot] ->
                        let {
                          lvl1280 :: m d = eta @ d $dData1 y
                        } in
                        GHC.Base.>>=
                          @ m
                          $dMonad
                          @ (d -> b, GHC.Types.Bool)
                          @ (b, GHC.Types.Bool)
                          ds `cast` (Data.Data.NTCo:Mp[0] <m>_R <d -> b>_N)
                          (\ ds1 :: (d -> b, GHC.Types.Bool) ->
                           case ds1 of wild1 { (,) h b1 ->
                           case b1 of wild2 {
                             GHC.Types.False
                             -> GHC.Base.mplus
                                  @ m
                                  $dMonadPlus
                                  @ (b, GHC.Types.Bool)
                                  (GHC.Base.>>=
                                     @ m
                                     $dMonad
                                     @ d
                                     @ (b, GHC.Types.Bool)
                                     lvl1280
                                     (\ y' :: d ->
                                      GHC.Base.return
                                        @ m
                                        $dMonad
                                        @ (b, GHC.Types.Bool)
                                        (h y', GHC.Types.True)))
                                  (GHC.Base.return
                                     @ m
                                     $dMonad
                                     @ (b, GHC.Types.Bool)
                                     (h y, GHC.Types.False))
                             GHC.Types.True
                             -> GHC.Base.return
                                  @ m
                                  $dMonad
                                  @ (b, GHC.Types.Bool)
                                  (h y, GHC.Types.True) } })
                    } in
                    a45
                      @ GHC.Base.String
                      @ IB.Client.Types.TagValue
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (a45
                         @ GHC.Base.String
                         @ (GHC.Base.String -> IB.Client.Types.TagValue)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (GHC.Base.return
                            @ m
                            $dMonad
                            @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.TagValue,
                               GHC.Types.Bool)
                            IB.Client.Types.$fDataTagValue1)
                           `cast`
                         (Sym (Data.Data.NTCo:Mp[0]
                                   <m>_R
                                   <GHC.Base.String
                                    -> GHC.Base.String -> IB.Client.Types.TagValue>_N))
                         a43)
                        `cast`
                      (Sym (Data.Data.NTCo:Mp[0]
                                <m>_R <GHC.Base.String -> IB.Client.Types.TagValue>_N))
                      a44 })
                   (\ ds :: (IB.Client.Types.TagValue, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.TagValue
                           x' } })) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.TagValue -> m IB.Client.Types.TagValue
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U)>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonadPlus :: GHC.Base.MonadPlus m
                   eta :: forall d. Data.Data.Data d => d -> m d
                   eta1 :: IB.Client.Types.TagValue ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.TagValue
                   = GHC.Base.mzero @ m $dMonadPlus @ IB.Client.Types.TagValue
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.TagValue, GHC.Types.Bool)
                   @ IB.Client.Types.TagValue
                   (case eta1 of wild { IB.Client.Types.TagValue a43 a44 ->
                    let {
                      a45 :: forall d b.
                             Data.Data.Data d =>
                             Data.Data.Mp m (d -> b) -> d -> m (b, GHC.Types.Bool)
                        {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                      = \ @ d
                          @ b
                          $dData1 :: Data.Data.Data d
                          ds :: Data.Data.Mp m (d -> b)[OneShot]
                          y :: d[OneShot] ->
                        let {
                          lvl1280 :: m d = eta @ d $dData1 y
                        } in
                        GHC.Base.>>=
                          @ m
                          $dMonad
                          @ (d -> b, GHC.Types.Bool)
                          @ (b, GHC.Types.Bool)
                          ds `cast` (Data.Data.NTCo:Mp[0] <m>_R <d -> b>_N)
                          (\ ds1 :: (d -> b, GHC.Types.Bool) ->
                           case ds1 of wild1 { (,) h b1 ->
                           GHC.Base.mplus
                             @ m
                             $dMonadPlus
                             @ (b, GHC.Types.Bool)
                             (GHC.Base.>>=
                                @ m
                                $dMonad
                                @ d
                                @ (b, GHC.Types.Bool)
                                lvl1280
                                (\ y' :: d ->
                                 GHC.Base.return
                                   @ m
                                   $dMonad
                                   @ (b, GHC.Types.Bool)
                                   (h y', GHC.Types.True)))
                             (GHC.Base.return @ m $dMonad @ (b, GHC.Types.Bool) (h y, b1)) })
                    } in
                    a45
                      @ GHC.Base.String
                      @ IB.Client.Types.TagValue
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (a45
                         @ GHC.Base.String
                         @ (GHC.Base.String -> IB.Client.Types.TagValue)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (GHC.Base.return
                            @ m
                            $dMonad
                            @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.TagValue,
                               GHC.Types.Bool)
                            IB.Client.Types.$fDataTagValue1)
                           `cast`
                         (Sym (Data.Data.NTCo:Mp[0]
                                   <m>_R
                                   <GHC.Base.String
                                    -> GHC.Base.String -> IB.Client.Types.TagValue>_N))
                         a43)
                        `cast`
                      (Sym (Data.Data.NTCo:Mp[0]
                                <m>_R <GHC.Base.String -> IB.Client.Types.TagValue>_N))
                      a44 })
                   (\ ds :: (IB.Client.Types.TagValue, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.TagValue
                           x' } })) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.TagValue -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   f :: forall d. Data.Data.Data d => d -> u
                   x0 :: IB.Client.Types.TagValue ->
                 case x0 of wild { IB.Client.Types.TagValue a43 a44 ->
                 GHC.Types.:
                   @ u
                   (f @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] a43)
                   (GHC.Types.:
                      @ u
                      (f @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] a44)
                      (GHC.Types.[] @ u)) }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.TagValue
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.TagValue ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.TagValue ww3 ww4 ->
                 IB.Client.Types.$w$cgmapQi11 @ u ww1 w1 ww3 ww4 } }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.TagValue
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.TagValue ->
                 case w3 of ww { IB.Client.Types.TagValue ww1 ww2 ->
                 IB.Client.Types.$w$cgmapQl8 @ r @ r' w w1 w2 ww1 ww2 }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.TagValue
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.TagValue ->
                 case w3 of ww { IB.Client.Types.TagValue ww1 ww2 ->
                 IB.Client.Types.$w$cgmapQr11 @ r @ r' w w1 w2 ww1 ww2 }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.TagValue -> IB.Client.Types.TagValue
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ f :: forall b. Data.Data.Data b => b -> b
                   x0 :: IB.Client.Types.TagValue ->
                 case x0 of wild { IB.Client.Types.TagValue a43 a44 ->
                 IB.Client.Types.TagValue
                   (f @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] a43)
                   (f @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      a44) }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.TagValue
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   k :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   z6 :: forall r. r -> c r
                   ds :: Data.Data.Constr ->
                 k @ GHC.Base.String
                   @ IB.Client.Types.TagValue
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (k @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.TagValue)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (z6
                         @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.TagValue)
                         IB.Client.Types.TagValue))) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$ctoConstr ::
    IB.Client.Types.TagValue -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.TagValue ->
                 case ds of wild { IB.Client.Types.TagValue ds1 ds2 ->
                 IB.Client.Types.$cr4uD }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.TagValue)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.TagValue)) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fDataTagValue_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.TagValue)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.TagValue)) -}
6bddc11121878745ca8344d67d61a373
  $fDataTagValue_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 12796904425481288460
                   __word 16615695108170486944
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataTagValue4) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp :: Data.Data.Data IB.Client.Types.UnderComp
  DFunId[0]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.UnderComp
                  IB.Client.Types.$fDataUnderComp5
                  IB.Client.Types.$fDataUnderComp_$cgfoldl
                  IB.Client.Types.$fDataUnderComp_$cgunfold
                  IB.Client.Types.$fDataUnderComp_$ctoConstr
                  IB.Client.Types.$fDataUnderComp_$cdataTypeOf
                  IB.Client.Types.$fDataUnderComp_$s$dmdataCast1
                  IB.Client.Types.$fDataUnderComp_$s$dmdataCast2
                  IB.Client.Types.$fDataUnderComp_$cgmapT
                  IB.Client.Types.$fDataUnderComp_$cgmapQl
                  IB.Client.Types.$fDataUnderComp_$cgmapQr
                  IB.Client.Types.$fDataUnderComp_$cgmapQ
                  IB.Client.Types.$fDataUnderComp_$cgmapQi
                  IB.Client.Types.$fDataUnderComp_$cgmapM
                  IB.Client.Types.$fDataUnderComp_$cgmapMp
                  IB.Client.Types.$fDataUnderComp_$cgmapMo -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp1 ::
    (GHC.Types.Int
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> IB.Client.Types.UnderComp,
     GHC.Types.Bool)
  {- HasNoCafRefs,
     Unfolding: ((IB.Client.Types.UnderComp, GHC.Types.False)) -}
7f06c4cf22b867c0c20758ed865175af
  $fDataUnderComp2 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep IB.Client.Types.$fDataUnderComp3) -}
11ce6836afc5f13e7642b467ac80e3e4
  $fDataUnderComp3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   IB.Client.Types.$cr4u1
                   (GHC.Types.[] @ Data.Data.Constr)) -}
cf0f49a1002fc8218266b0fe25f7c012
  $fDataUnderComp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UnderComp"#) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp5 ::
    Data.Typeable.Internal.Typeable IB.Client.Types.UnderComp
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fDataUnderComp6
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <IB.Client.Types.UnderComp>_N)) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp6 ::
    GHC.Prim.Proxy# IB.Client.Types.UnderComp
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# IB.Client.Types.UnderComp ->
                 IB.Client.Types.$fDataUnderComp7) -}
db7ffa5cf2b7828fa6ae4eeaaf61adb2
  $fDataUnderComp7 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 6963726279292529957
                   __word 13991630848118603658
                   IB.Client.Types.$fDataUnderComp_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cdataTypeOf ::
    IB.Client.Types.UnderComp -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: IB.Client.Types.UnderComp -> IB.Client.Types.$tr4u0) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.UnderComp
    -> c IB.Client.Types.UnderComp
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   w2 :: IB.Client.Types.UnderComp ->
                 case w2 of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 IB.Client.Types.$w$cgfoldl2 @ c w w1 ww1 ww2 ww3 }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.UnderComp -> m IB.Client.Types.UnderComp
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   w2 :: IB.Client.Types.UnderComp ->
                 case w2 of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 IB.Client.Types.$w$cgmapM3 @ m w w1 ww1 ww2 ww3 }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.UnderComp -> m IB.Client.Types.UnderComp
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U)> -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.UnderComp -> m IB.Client.Types.UnderComp
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U,U,U)>,
     Unfolding: (\ @ (m :: * -> *)
                   $dMonadPlus :: GHC.Base.MonadPlus m
                   eta :: forall d. Data.Data.Data d => d -> m d
                   eta1 :: IB.Client.Types.UnderComp ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.UnderComp
                   = GHC.Base.mzero @ m $dMonadPlus @ IB.Client.Types.UnderComp
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.UnderComp, GHC.Types.Bool)
                   @ IB.Client.Types.UnderComp
                   (case eta1 of wild { IB.Client.Types.UnderComp a43 a44 a45 ->
                    let {
                      a46 :: forall d b.
                             Data.Data.Data d =>
                             Data.Data.Mp m (d -> b) -> d -> m (b, GHC.Types.Bool)
                        {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                      = \ @ d
                          @ b
                          $dData1 :: Data.Data.Data d
                          ds :: Data.Data.Mp m (d -> b)[OneShot]
                          y :: d[OneShot] ->
                        let {
                          lvl1280 :: m d = eta @ d $dData1 y
                        } in
                        GHC.Base.>>=
                          @ m
                          $dMonad
                          @ (d -> b, GHC.Types.Bool)
                          @ (b, GHC.Types.Bool)
                          ds `cast` (Data.Data.NTCo:Mp[0] <m>_R <d -> b>_N)
                          (\ ds1 :: (d -> b, GHC.Types.Bool) ->
                           case ds1 of wild1 { (,) h b1 ->
                           GHC.Base.mplus
                             @ m
                             $dMonadPlus
                             @ (b, GHC.Types.Bool)
                             (GHC.Base.>>=
                                @ m
                                $dMonad
                                @ d
                                @ (b, GHC.Types.Bool)
                                lvl1280
                                (\ y' :: d ->
                                 GHC.Base.return
                                   @ m
                                   $dMonad
                                   @ (b, GHC.Types.Bool)
                                   (h y', GHC.Types.True)))
                             (GHC.Base.return @ m $dMonad @ (b, GHC.Types.Bool) (h y, b1)) })
                    } in
                    a46
                      @ GHC.Types.Double
                      @ IB.Client.Types.UnderComp
                      Data.Data.$fDataDouble
                      (a46
                         @ GHC.Types.Double
                         @ (GHC.Types.Double -> IB.Client.Types.UnderComp)
                         Data.Data.$fDataDouble
                         (a46
                            @ GHC.Types.Int
                            @ (GHC.Types.Double
                               -> GHC.Types.Double -> IB.Client.Types.UnderComp)
                            Data.Data.$fDataInt
                            (GHC.Base.return
                               @ m
                               $dMonad
                               @ (GHC.Types.Int
                                  -> GHC.Types.Double
                                  -> GHC.Types.Double
                                  -> IB.Client.Types.UnderComp,
                                  GHC.Types.Bool)
                               IB.Client.Types.$fDataUnderComp1)
                              `cast`
                            (Sym (Data.Data.NTCo:Mp[0]
                                      <m>_R
                                      <GHC.Types.Int
                                       -> GHC.Types.Double
                                       -> GHC.Types.Double
                                       -> IB.Client.Types.UnderComp>_N))
                            a43)
                           `cast`
                         (Sym (Data.Data.NTCo:Mp[0]
                                   <m>_R
                                   <GHC.Types.Double
                                    -> GHC.Types.Double -> IB.Client.Types.UnderComp>_N))
                         a44)
                        `cast`
                      (Sym (Data.Data.NTCo:Mp[0]
                                <m>_R <GHC.Types.Double -> IB.Client.Types.UnderComp>_N))
                      a45 })
                   (\ ds :: (IB.Client.Types.UnderComp, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.UnderComp
                           x' } })) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.UnderComp -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U)>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   w :: forall d. Data.Data.Data d => d -> u
                   w1 :: IB.Client.Types.UnderComp ->
                 case w1 of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 GHC.Types.:
                   @ u
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww1)
                   (GHC.Types.:
                      @ u
                      (w @ GHC.Types.Double Data.Data.$fDataDouble ww2)
                      (GHC.Types.:
                         @ u
                         (w @ GHC.Types.Double Data.Data.$fDataDouble ww3)
                         (GHC.Types.[] @ u))) }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.UnderComp
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   w2 :: IB.Client.Types.UnderComp ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { IB.Client.Types.UnderComp ww3 ww4 ww5 ->
                 IB.Client.Types.$w$cgmapQi3 @ u ww1 w1 ww3 ww4 ww5 } }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.UnderComp
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.UnderComp ->
                 case w3 of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 IB.Client.Types.$w$cgmapQl2 @ r @ r' w w1 w2 ww1 ww2 ww3 }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.UnderComp
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   w3 :: IB.Client.Types.UnderComp ->
                 case w3 of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 IB.Client.Types.$w$cgmapQr2 @ r @ r' w w1 w2 ww1 ww2 ww3 }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.UnderComp -> IB.Client.Types.UnderComp
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: forall b. Data.Data.Data b => b -> b
                   w1 :: IB.Client.Types.UnderComp ->
                 case w1 of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 IB.Client.Types.UnderComp
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww1)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww2)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww3) }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c IB.Client.Types.UnderComp
  {- Arity: 3, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r
                   w2 :: Data.Data.Constr ->
                 IB.Client.Types.$w$cgunfold2 @ c w w1) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$ctoConstr ::
    IB.Client.Types.UnderComp -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.UnderComp ->
                 case ds of wild { IB.Client.Types.UnderComp ds1 ds2 ds3 ->
                 IB.Client.Types.$cr4u1 }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$s$dmdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c IB.Client.Types.UnderComp)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d. Data.Data.Data d => c (t d) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.UnderComp)) -}
a21e71e5f5ea67fadee2024d47af45da
  $fDataUnderComp_$s$dmdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c IB.Client.Types.UnderComp)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c IB.Client.Types.UnderComp)) -}
ef40b4a585a447a749c5bfb44637add6
  $fDataUnderComp_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 6963726279292529957
                   __word 13991630848118603658
                   IB.Client.Types.$fDataBarData_ww5
                   IB.Client.Types.$fDataBarData_ww1
                   IB.Client.Types.$fDataUnderComp4) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType :: GHC.Enum.Enum IB.Client.Types.FaDataType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.FaDataType
                  IB.Client.Types.$fEnumFaDataType_$csucc
                  IB.Client.Types.$fEnumFaDataType_$cpred
                  IB.Client.Types.$fEnumFaDataType_$ctoEnum
                  IB.Client.Types.$fEnumFaDataType_$cfromEnum
                  IB.Client.Types.$fEnumFaDataType_$cenumFrom
                  IB.Client.Types.$fEnumFaDataType_$cenumFromThen
                  IB.Client.Types.$fEnumFaDataType_$cenumFromTo
                  IB.Client.Types.$fEnumFaDataType_$cenumFromThenTo -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType1 :: GHC.Prim.Int# -> IB.Client.Types.FaDataType
  {- Arity: 1, Strictness: <L,U>b -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType2 :: [IB.Client.Types.FaDataType]
  {- Unfolding: (IB.Client.Types.$fEnumFaDataType_go3 2) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType3 :: [IB.Client.Types.FaDataType]
  {- Unfolding: (IB.Client.Types.$fEnumFaDataType_go4 1) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType4 :: [IB.Client.Types.FaDataType]
  {- Unfolding: (IB.Client.Types.$fEnumFaDataType_go5 0) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType5 :: IB.Client.Types.FaDataType
  {- Strictness: b -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType6 :: IB.Client.Types.FaDataType
  {- Strictness: b -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$cenumFrom ::
    IB.Client.Types.FaDataType -> [IB.Client.Types.FaDataType]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.FaDataType ->
                 case a43 of wild {
                   IB.Client.Types.GROUPS -> IB.Client.Types.$fEnumFaDataType4
                   IB.Client.Types.PROFILES -> IB.Client.Types.$fEnumFaDataType3
                   IB.Client.Types.ALIASES -> IB.Client.Types.$fEnumFaDataType2 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$cenumFromThen ::
    IB.Client.Types.FaDataType
    -> IB.Client.Types.FaDataType -> [IB.Client.Types.FaDataType]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.FaDataType
                   b :: IB.Client.Types.FaDataType ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [IB.Client.Types.FaDataType]
                                    IB.Client.Types.$fEnumFaDataType_c1
                                    (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [IB.Client.Types.FaDataType]
                                    IB.Client.Types.$fEnumFaDataType_c1
                                    (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 2 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       IB.Client.Types.GROUPS -> $j1 0
                       IB.Client.Types.PROFILES -> $j1 1
                       IB.Client.Types.ALIASES -> $j1 2 }
                 } in
                 case a43 of wild {
                   IB.Client.Types.GROUPS -> $j 0
                   IB.Client.Types.PROFILES -> $j 1
                   IB.Client.Types.ALIASES -> $j 2 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$cenumFromThenTo ::
    IB.Client.Types.FaDataType
    -> IB.Client.Types.FaDataType
    -> IB.Client.Types.FaDataType
    -> [IB.Client.Types.FaDataType]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: IB.Client.Types.FaDataType
                   x2 :: IB.Client.Types.FaDataType
                   y :: IB.Client.Types.FaDataType ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           IB.Client.Types.GROUPS
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.FaDataType]
                                     IB.Client.Types.$fEnumFaDataType_c
                                     (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.FaDataType]
                                     IB.Client.Types.$fEnumFaDataType_c
                                     (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                     x4
                                     x5
                                     0 }
                           IB.Client.Types.PROFILES
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.FaDataType]
                                     IB.Client.Types.$fEnumFaDataType_c
                                     (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.FaDataType]
                                     IB.Client.Types.$fEnumFaDataType_c
                                     (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                     x4
                                     x5
                                     1 }
                           IB.Client.Types.ALIASES
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.FaDataType]
                                     IB.Client.Types.$fEnumFaDataType_c
                                     (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                     x4
                                     x5
                                     2
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.FaDataType]
                                     IB.Client.Types.$fEnumFaDataType_c
                                     (GHC.Types.[] @ IB.Client.Types.FaDataType)
                                     x4
                                     x5
                                     2 } }
                     } in
                     case x2 of wild {
                       IB.Client.Types.GROUPS -> $j1 0
                       IB.Client.Types.PROFILES -> $j1 1
                       IB.Client.Types.ALIASES -> $j1 2 }
                 } in
                 case x1 of wild {
                   IB.Client.Types.GROUPS -> $j 0
                   IB.Client.Types.PROFILES -> $j 1
                   IB.Client.Types.ALIASES -> $j 2 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$cenumFromTo ::
    IB.Client.Types.FaDataType
    -> IB.Client.Types.FaDataType -> [IB.Client.Types.FaDataType]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: IB.Client.Types.FaDataType
                   y :: IB.Client.Types.FaDataType ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       IB.Client.Types.GROUPS
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumFaDataType_go2 x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.FaDataType }
                       IB.Client.Types.PROFILES
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumFaDataType_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.FaDataType }
                       IB.Client.Types.ALIASES
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumFaDataType_go x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.FaDataType } }
                 } in
                 case x of wild {
                   IB.Client.Types.GROUPS -> $j 0
                   IB.Client.Types.PROFILES -> $j 1
                   IB.Client.Types.ALIASES -> $j 2 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$cfromEnum ::
    IB.Client.Types.FaDataType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.FaDataType ->
                 case a43 of wild {
                   IB.Client.Types.GROUPS -> GHC.Types.I# 0
                   IB.Client.Types.PROFILES -> GHC.Types.I# 1
                   IB.Client.Types.ALIASES -> GHC.Types.I# 2 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$cpred ::
    IB.Client.Types.FaDataType -> IB.Client.Types.FaDataType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.FaDataType ->
                 case a43 of wild {
                   IB.Client.Types.GROUPS -> IB.Client.Types.$fEnumFaDataType5
                   IB.Client.Types.PROFILES -> IB.Client.Types.GROUPS
                   IB.Client.Types.ALIASES -> IB.Client.Types.PROFILES }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$csucc ::
    IB.Client.Types.FaDataType -> IB.Client.Types.FaDataType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.FaDataType ->
                 case a43 of wild {
                   IB.Client.Types.GROUPS -> IB.Client.Types.PROFILES
                   IB.Client.Types.PROFILES -> IB.Client.Types.ALIASES
                   IB.Client.Types.ALIASES -> IB.Client.Types.$fEnumFaDataType6 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_$ctoEnum ::
    GHC.Types.Int -> IB.Client.Types.FaDataType
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 IB.Client.Types.$w$ctoEnum ww1 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_c ::
    GHC.Types.Int
    -> [IB.Client.Types.FaDataType] -> [IB.Client.Types.FaDataType]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.FaDataType] ->
                 GHC.Types.:
                   @ IB.Client.Types.FaDataType
                   (IB.Client.Types.$fEnumFaDataType_$ctoEnum x)
                   ys) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_c1 ::
    GHC.Types.Int
    -> [IB.Client.Types.FaDataType] -> [IB.Client.Types.FaDataType]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.FaDataType] ->
                 GHC.Types.:
                   @ IB.Client.Types.FaDataType
                   (case x of wild { GHC.Types.I# a43 ->
                    GHC.Prim.tagToEnum# @ IB.Client.Types.FaDataType a43 })
                   ys) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_go ::
    GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
  {- Arity: 1, Strictness: <L,U> -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_go1 ::
    GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
  {- Arity: 1, Strictness: <L,U> -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_go2 ::
    GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
  {- Arity: 1, Strictness: <L,U> -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_go3 ::
    GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_go4 ::
    GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEnumFaDataType_go5 ::
    GHC.Prim.Int# -> [IB.Client.Types.FaDataType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin :: GHC.Enum.Enum IB.Client.Types.NewsBulletin
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.NewsBulletin
                  IB.Client.Types.$fEnumNewsBulletin_$csucc
                  IB.Client.Types.$fEnumNewsBulletin_$cpred
                  IB.Client.Types.$fEnumNewsBulletin_$ctoEnum
                  IB.Client.Types.$fEnumNewsBulletin_$cfromEnum
                  IB.Client.Types.$fEnumNewsBulletin_$cenumFrom
                  IB.Client.Types.$fEnumNewsBulletin_$cenumFromThen
                  IB.Client.Types.$fEnumNewsBulletin_$cenumFromTo
                  IB.Client.Types.$fEnumNewsBulletin_$cenumFromThenTo -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin1 ::
    GHC.Prim.Int# -> IB.Client.Types.NewsBulletin
  {- Arity: 1, Strictness: <L,U>b -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin2 :: [IB.Client.Types.NewsBulletin]
  {- Unfolding: (IB.Client.Types.$fEnumNewsBulletin_go3 2) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin3 :: [IB.Client.Types.NewsBulletin]
  {- Unfolding: (IB.Client.Types.$fEnumNewsBulletin_go4 1) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin4 :: [IB.Client.Types.NewsBulletin]
  {- Unfolding: (IB.Client.Types.$fEnumNewsBulletin_go5 0) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin5 :: IB.Client.Types.NewsBulletin
  {- Strictness: b -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin6 :: IB.Client.Types.NewsBulletin
  {- Strictness: b -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$cenumFrom ::
    IB.Client.Types.NewsBulletin -> [IB.Client.Types.NewsBulletin]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.NewsBulletin ->
                 case a43 of wild {
                   IB.Client.Types.NEWS_MSG -> IB.Client.Types.$fEnumNewsBulletin4
                   IB.Client.Types.EXCHANGE_AVAIL_MSG
                   -> IB.Client.Types.$fEnumNewsBulletin3
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                   -> IB.Client.Types.$fEnumNewsBulletin2 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$cenumFromThen ::
    IB.Client.Types.NewsBulletin
    -> IB.Client.Types.NewsBulletin -> [IB.Client.Types.NewsBulletin]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.NewsBulletin
                   b :: IB.Client.Types.NewsBulletin ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [IB.Client.Types.NewsBulletin]
                                    IB.Client.Types.$fEnumNewsBulletin_c1
                                    (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [IB.Client.Types.NewsBulletin]
                                    IB.Client.Types.$fEnumNewsBulletin_c1
                                    (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 2 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       IB.Client.Types.NEWS_MSG -> $j1 0
                       IB.Client.Types.EXCHANGE_AVAIL_MSG -> $j1 1
                       IB.Client.Types.EXCHANGE_UNAVAIL_MSG -> $j1 2 }
                 } in
                 case a43 of wild {
                   IB.Client.Types.NEWS_MSG -> $j 0
                   IB.Client.Types.EXCHANGE_AVAIL_MSG -> $j 1
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG -> $j 2 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$cenumFromThenTo ::
    IB.Client.Types.NewsBulletin
    -> IB.Client.Types.NewsBulletin
    -> IB.Client.Types.NewsBulletin
    -> [IB.Client.Types.NewsBulletin]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: IB.Client.Types.NewsBulletin
                   x2 :: IB.Client.Types.NewsBulletin
                   y :: IB.Client.Types.NewsBulletin ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           IB.Client.Types.NEWS_MSG
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.NewsBulletin]
                                     IB.Client.Types.$fEnumNewsBulletin_c
                                     (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.NewsBulletin]
                                     IB.Client.Types.$fEnumNewsBulletin_c
                                     (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                     x4
                                     x5
                                     0 }
                           IB.Client.Types.EXCHANGE_AVAIL_MSG
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.NewsBulletin]
                                     IB.Client.Types.$fEnumNewsBulletin_c
                                     (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.NewsBulletin]
                                     IB.Client.Types.$fEnumNewsBulletin_c
                                     (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                     x4
                                     x5
                                     1 }
                           IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.NewsBulletin]
                                     IB.Client.Types.$fEnumNewsBulletin_c
                                     (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                     x4
                                     x5
                                     2
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.NewsBulletin]
                                     IB.Client.Types.$fEnumNewsBulletin_c
                                     (GHC.Types.[] @ IB.Client.Types.NewsBulletin)
                                     x4
                                     x5
                                     2 } }
                     } in
                     case x2 of wild {
                       IB.Client.Types.NEWS_MSG -> $j1 0
                       IB.Client.Types.EXCHANGE_AVAIL_MSG -> $j1 1
                       IB.Client.Types.EXCHANGE_UNAVAIL_MSG -> $j1 2 }
                 } in
                 case x1 of wild {
                   IB.Client.Types.NEWS_MSG -> $j 0
                   IB.Client.Types.EXCHANGE_AVAIL_MSG -> $j 1
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG -> $j 2 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$cenumFromTo ::
    IB.Client.Types.NewsBulletin
    -> IB.Client.Types.NewsBulletin -> [IB.Client.Types.NewsBulletin]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: IB.Client.Types.NewsBulletin
                   y :: IB.Client.Types.NewsBulletin ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       IB.Client.Types.NEWS_MSG
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumNewsBulletin_go2 x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.NewsBulletin }
                       IB.Client.Types.EXCHANGE_AVAIL_MSG
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumNewsBulletin_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.NewsBulletin }
                       IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumNewsBulletin_go x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.NewsBulletin } }
                 } in
                 case x of wild {
                   IB.Client.Types.NEWS_MSG -> $j 0
                   IB.Client.Types.EXCHANGE_AVAIL_MSG -> $j 1
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG -> $j 2 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$cfromEnum ::
    IB.Client.Types.NewsBulletin -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.NewsBulletin ->
                 case a43 of wild {
                   IB.Client.Types.NEWS_MSG -> GHC.Types.I# 0
                   IB.Client.Types.EXCHANGE_AVAIL_MSG -> GHC.Types.I# 1
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG -> GHC.Types.I# 2 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$cpred ::
    IB.Client.Types.NewsBulletin -> IB.Client.Types.NewsBulletin
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.NewsBulletin ->
                 case a43 of wild {
                   IB.Client.Types.NEWS_MSG -> IB.Client.Types.$fEnumNewsBulletin5
                   IB.Client.Types.EXCHANGE_AVAIL_MSG -> IB.Client.Types.NEWS_MSG
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                   -> IB.Client.Types.EXCHANGE_AVAIL_MSG }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$csucc ::
    IB.Client.Types.NewsBulletin -> IB.Client.Types.NewsBulletin
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.NewsBulletin ->
                 case a43 of wild {
                   IB.Client.Types.NEWS_MSG -> IB.Client.Types.EXCHANGE_AVAIL_MSG
                   IB.Client.Types.EXCHANGE_AVAIL_MSG
                   -> IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                   -> IB.Client.Types.$fEnumNewsBulletin6 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_$ctoEnum ::
    GHC.Types.Int -> IB.Client.Types.NewsBulletin
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 IB.Client.Types.$w$ctoEnum1 ww1 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_c ::
    GHC.Types.Int
    -> [IB.Client.Types.NewsBulletin] -> [IB.Client.Types.NewsBulletin]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.NewsBulletin] ->
                 GHC.Types.:
                   @ IB.Client.Types.NewsBulletin
                   (IB.Client.Types.$fEnumNewsBulletin_$ctoEnum x)
                   ys) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_c1 ::
    GHC.Types.Int
    -> [IB.Client.Types.NewsBulletin] -> [IB.Client.Types.NewsBulletin]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.NewsBulletin] ->
                 GHC.Types.:
                   @ IB.Client.Types.NewsBulletin
                   (case x of wild { GHC.Types.I# a43 ->
                    GHC.Prim.tagToEnum# @ IB.Client.Types.NewsBulletin a43 })
                   ys) -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_go ::
    GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
  {- Arity: 1, Strictness: <L,U> -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_go1 ::
    GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
  {- Arity: 1, Strictness: <L,U> -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_go2 ::
    GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
  {- Arity: 1, Strictness: <L,U> -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_go3 ::
    GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_go4 ::
    GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
b28d7eb203762c305be42fe6a07d96f9
  $fEnumNewsBulletin_go5 ::
    GHC.Prim.Int# -> [IB.Client.Types.NewsBulletin]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin :: GHC.Enum.Enum IB.Client.Types.Origin
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Origin
                  IB.Client.Types.$fEnumOrigin_$csucc
                  IB.Client.Types.$fEnumOrigin_$cpred
                  IB.Client.Types.$fEnumOrigin_$ctoEnum
                  IB.Client.Types.$fEnumOrigin_$cfromEnum
                  IB.Client.Types.$fEnumOrigin_$cenumFrom
                  IB.Client.Types.$fEnumOrigin_$cenumFromThen
                  IB.Client.Types.$fEnumOrigin_$cenumFromTo
                  IB.Client.Types.$fEnumOrigin_$cenumFromThenTo -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin1 :: GHC.Prim.Int# -> IB.Client.Types.Origin
  {- Arity: 1, Strictness: <L,U>b -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin2 :: [IB.Client.Types.Origin]
  {- Unfolding: (IB.Client.Types.$fEnumOrigin_go3 2) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin3 :: [IB.Client.Types.Origin]
  {- Unfolding: (IB.Client.Types.$fEnumOrigin_go4 1) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin4 :: [IB.Client.Types.Origin]
  {- Unfolding: (IB.Client.Types.$fEnumOrigin_go5 0) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin5 :: IB.Client.Types.Origin
  {- Strictness: b -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin6 :: IB.Client.Types.Origin
  {- Strictness: b -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$cenumFrom ::
    IB.Client.Types.Origin -> [IB.Client.Types.Origin]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.Origin ->
                 case a43 of wild {
                   IB.Client.Types.CUSTOMER -> IB.Client.Types.$fEnumOrigin4
                   IB.Client.Types.FIRM -> IB.Client.Types.$fEnumOrigin3
                   IB.Client.Types.UNKNOWN -> IB.Client.Types.$fEnumOrigin2 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$cenumFromThen ::
    IB.Client.Types.Origin
    -> IB.Client.Types.Origin -> [IB.Client.Types.Origin]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.Origin
                   b :: IB.Client.Types.Origin ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [IB.Client.Types.Origin]
                                    IB.Client.Types.$fEnumOrigin_c1
                                    (GHC.Types.[] @ IB.Client.Types.Origin)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [IB.Client.Types.Origin]
                                    IB.Client.Types.$fEnumOrigin_c1
                                    (GHC.Types.[] @ IB.Client.Types.Origin)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 2 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       IB.Client.Types.CUSTOMER -> $j1 0
                       IB.Client.Types.FIRM -> $j1 1
                       IB.Client.Types.UNKNOWN -> $j1 2 }
                 } in
                 case a43 of wild {
                   IB.Client.Types.CUSTOMER -> $j 0
                   IB.Client.Types.FIRM -> $j 1
                   IB.Client.Types.UNKNOWN -> $j 2 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$cenumFromThenTo ::
    IB.Client.Types.Origin
    -> IB.Client.Types.Origin
    -> IB.Client.Types.Origin
    -> [IB.Client.Types.Origin]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: IB.Client.Types.Origin
                   x2 :: IB.Client.Types.Origin
                   y :: IB.Client.Types.Origin ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           IB.Client.Types.CUSTOMER
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.Origin]
                                     IB.Client.Types.$fEnumOrigin_c
                                     (GHC.Types.[] @ IB.Client.Types.Origin)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.Origin]
                                     IB.Client.Types.$fEnumOrigin_c
                                     (GHC.Types.[] @ IB.Client.Types.Origin)
                                     x4
                                     x5
                                     0 }
                           IB.Client.Types.FIRM
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.Origin]
                                     IB.Client.Types.$fEnumOrigin_c
                                     (GHC.Types.[] @ IB.Client.Types.Origin)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.Origin]
                                     IB.Client.Types.$fEnumOrigin_c
                                     (GHC.Types.[] @ IB.Client.Types.Origin)
                                     x4
                                     x5
                                     1 }
                           IB.Client.Types.UNKNOWN
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [IB.Client.Types.Origin]
                                     IB.Client.Types.$fEnumOrigin_c
                                     (GHC.Types.[] @ IB.Client.Types.Origin)
                                     x4
                                     x5
                                     2
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [IB.Client.Types.Origin]
                                     IB.Client.Types.$fEnumOrigin_c
                                     (GHC.Types.[] @ IB.Client.Types.Origin)
                                     x4
                                     x5
                                     2 } }
                     } in
                     case x2 of wild {
                       IB.Client.Types.CUSTOMER -> $j1 0
                       IB.Client.Types.FIRM -> $j1 1
                       IB.Client.Types.UNKNOWN -> $j1 2 }
                 } in
                 case x1 of wild {
                   IB.Client.Types.CUSTOMER -> $j 0
                   IB.Client.Types.FIRM -> $j 1
                   IB.Client.Types.UNKNOWN -> $j 2 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$cenumFromTo ::
    IB.Client.Types.Origin
    -> IB.Client.Types.Origin -> [IB.Client.Types.Origin]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: IB.Client.Types.Origin
                   y :: IB.Client.Types.Origin ->
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       IB.Client.Types.CUSTOMER
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumOrigin_go2 x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.Origin }
                       IB.Client.Types.FIRM
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumOrigin_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.Origin }
                       IB.Client.Types.UNKNOWN
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False -> IB.Client.Types.$fEnumOrigin_go x1
                            GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.Origin } }
                 } in
                 case x of wild {
                   IB.Client.Types.CUSTOMER -> $j 0
                   IB.Client.Types.FIRM -> $j 1
                   IB.Client.Types.UNKNOWN -> $j 2 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$cfromEnum :: IB.Client.Types.Origin -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.Origin ->
                 case a43 of wild {
                   IB.Client.Types.CUSTOMER -> GHC.Types.I# 0
                   IB.Client.Types.FIRM -> GHC.Types.I# 1
                   IB.Client.Types.UNKNOWN -> GHC.Types.I# 2 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$cpred ::
    IB.Client.Types.Origin -> IB.Client.Types.Origin
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.Origin ->
                 case a43 of wild {
                   IB.Client.Types.CUSTOMER -> IB.Client.Types.$fEnumOrigin5
                   IB.Client.Types.FIRM -> IB.Client.Types.CUSTOMER
                   IB.Client.Types.UNKNOWN -> IB.Client.Types.FIRM }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$csucc ::
    IB.Client.Types.Origin -> IB.Client.Types.Origin
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.Origin ->
                 case a43 of wild {
                   IB.Client.Types.CUSTOMER -> IB.Client.Types.FIRM
                   IB.Client.Types.FIRM -> IB.Client.Types.UNKNOWN
                   IB.Client.Types.UNKNOWN -> IB.Client.Types.$fEnumOrigin6 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_$ctoEnum :: GHC.Types.Int -> IB.Client.Types.Origin
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 IB.Client.Types.$w$ctoEnum2 ww1 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_c ::
    GHC.Types.Int
    -> [IB.Client.Types.Origin] -> [IB.Client.Types.Origin]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.Origin] ->
                 GHC.Types.:
                   @ IB.Client.Types.Origin
                   (IB.Client.Types.$fEnumOrigin_$ctoEnum x)
                   ys) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_c1 ::
    GHC.Types.Int
    -> [IB.Client.Types.Origin] -> [IB.Client.Types.Origin]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.Origin] ->
                 GHC.Types.:
                   @ IB.Client.Types.Origin
                   (case x of wild { GHC.Types.I# a43 ->
                    GHC.Prim.tagToEnum# @ IB.Client.Types.Origin a43 })
                   ys) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_go :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
  {- Arity: 1, Strictness: <L,U> -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_go1 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
  {- Arity: 1, Strictness: <L,U> -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_go2 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
  {- Arity: 1, Strictness: <L,U> -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_go3 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_go4 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEnumOrigin_go5 :: GHC.Prim.Int# -> [IB.Client.Types.Origin]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType :: GHC.Enum.Enum IB.Client.Types.TickType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.TickType
                  IB.Client.Types.$fEnumTickType_$csucc
                  IB.Client.Types.$fEnumTickType_$cpred
                  IB.Client.Types.$fEnumTickType_$ctoEnum
                  IB.Client.Types.$fEnumTickType_$cfromEnum
                  IB.Client.Types.$fEnumTickType_$cenumFrom
                  IB.Client.Types.$fEnumTickType_$cenumFromThen
                  IB.Client.Types.$fEnumTickType_$cenumFromTo
                  IB.Client.Types.$fEnumTickType_$cenumFromThenTo -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType1 :: GHC.Prim.Int# -> IB.Client.Types.TickType
  {- Arity: 1, Strictness: <L,U>b -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType2 :: IB.Client.Types.TickType
  {- Strictness: b -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType3 :: IB.Client.Types.TickType
  {- Strictness: b -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$cenumFrom ::
    IB.Client.Types.TickType -> [IB.Client.Types.TickType]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.TickType ->
                 case a43 of x1 { DEFAULT ->
                 let {
                   x0 :: GHC.Prim.Int#
                   = GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># x0 34) of wild {
                   GHC.Types.False -> IB.Client.Types.$fEnumTickType_go x0
                   GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.TickType } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$cenumFromThen ::
    IB.Client.Types.TickType
    -> IB.Client.Types.TickType -> [IB.Client.Types.TickType]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a43 :: IB.Client.Types.TickType
                   b :: IB.Client.Types.TickType ->
                 case a43 of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 let {
                   a# :: GHC.Prim.Int#
                   = GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1
                 } in
                 let {
                   b# :: GHC.Prim.Int#
                   = GHC.Prim.dataToTag# @ IB.Client.Types.TickType x2
                 } in
                 let {
                   $j :: GHC.Prim.Int# -> [IB.Client.Types.TickType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ y :: GHC.Prim.Int#[OneShot] ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# b# a#) of wild {
                       GHC.Types.False
                       -> GHC.Enum.efdtIntDnFB
                            @ [IB.Client.Types.TickType]
                            IB.Client.Types.$fEnumTickType_c1
                            (GHC.Types.[] @ IB.Client.Types.TickType)
                            a#
                            b#
                            y
                       GHC.Types.True
                       -> GHC.Enum.efdtIntUpFB
                            @ [IB.Client.Types.TickType]
                            IB.Client.Types.$fEnumTickType_c1
                            (GHC.Types.[] @ IB.Client.Types.TickType)
                            a#
                            b#
                            y }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># a# b#) of wild {
                   GHC.Types.False -> $j 34 GHC.Types.True -> $j 0 } } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$cenumFromThenTo ::
    IB.Client.Types.TickType
    -> IB.Client.Types.TickType
    -> IB.Client.Types.TickType
    -> [IB.Client.Types.TickType]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: IB.Client.Types.TickType
                   x2 :: IB.Client.Types.TickType
                   y :: IB.Client.Types.TickType ->
                 case x1 of x4 { DEFAULT ->
                 case x2 of x5 { DEFAULT ->
                 case y of x6 { DEFAULT ->
                 let {
                   x7 :: GHC.Prim.Int#
                   = GHC.Prim.dataToTag# @ IB.Client.Types.TickType x4
                 } in
                 let {
                   x8 :: GHC.Prim.Int#
                   = GHC.Prim.dataToTag# @ IB.Client.Types.TickType x5
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# x8 x7) of wild {
                   GHC.Types.False
                   -> GHC.Enum.efdtIntDnFB
                        @ [IB.Client.Types.TickType]
                        IB.Client.Types.$fEnumTickType_c
                        (GHC.Types.[] @ IB.Client.Types.TickType)
                        x7
                        x8
                        (GHC.Prim.dataToTag# @ IB.Client.Types.TickType x6)
                   GHC.Types.True
                   -> GHC.Enum.efdtIntUpFB
                        @ [IB.Client.Types.TickType]
                        IB.Client.Types.$fEnumTickType_c
                        (GHC.Types.[] @ IB.Client.Types.TickType)
                        x7
                        x8
                        (GHC.Prim.dataToTag# @ IB.Client.Types.TickType x6) } } } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$cenumFromTo ::
    IB.Client.Types.TickType
    -> IB.Client.Types.TickType -> [IB.Client.Types.TickType]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: IB.Client.Types.TickType
                   y :: IB.Client.Types.TickType ->
                 case x of x1 { DEFAULT ->
                 case y of x2 { DEFAULT ->
                 let {
                   x0 :: GHC.Prim.Int#
                   = GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1
                 } in
                 let {
                   y1 :: GHC.Prim.Int#
                   = GHC.Prim.dataToTag# @ IB.Client.Types.TickType x2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># x0 y1) of wild {
                   GHC.Types.False
                   -> letrec {
                        go9 :: GHC.Prim.Int# -> [IB.Client.Types.TickType]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x3 :: GHC.Prim.Int# ->
                          GHC.Types.:
                            @ IB.Client.Types.TickType
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# x3 0) of wild1 {
                               GHC.Types.False -> IB.Client.Types.$fEnumTickType1 x3
                               GHC.Types.True
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.<=# x3 34) of wild2 {
                                    GHC.Types.False -> IB.Client.Types.$fEnumTickType1 x3
                                    GHC.Types.True
                                    -> GHC.Prim.tagToEnum# @ IB.Client.Types.TickType x3 } })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x3 y1) of wild1 {
                               GHC.Types.False -> go9 (GHC.Prim.+# x3 1)
                               GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.TickType })
                      } in
                      go9 x0
                   GHC.Types.True -> GHC.Types.[] @ IB.Client.Types.TickType } } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$cfromEnum ::
    IB.Client.Types.TickType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.TickType ->
                 case a43 of x1 { DEFAULT ->
                 GHC.Types.I#
                   (GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1) }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$cpred ::
    IB.Client.Types.TickType -> IB.Client.Types.TickType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.TickType ->
                 case a43 of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1 of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ IB.Client.Types.TickType
                        (GHC.Prim.+# wild (-1))
                   0 -> IB.Client.Types.$fEnumTickType2 } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$csucc ::
    IB.Client.Types.TickType -> IB.Client.Types.TickType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a43 :: IB.Client.Types.TickType ->
                 case a43 of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1 of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ IB.Client.Types.TickType
                        (GHC.Prim.+# wild 1)
                   34 -> IB.Client.Types.$fEnumTickType3 } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_$ctoEnum ::
    GHC.Types.Int -> IB.Client.Types.TickType
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 IB.Client.Types.$w$ctoEnum3 ww1 }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_c ::
    GHC.Types.Int
    -> [IB.Client.Types.TickType] -> [IB.Client.Types.TickType]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.TickType] ->
                 GHC.Types.:
                   @ IB.Client.Types.TickType
                   (IB.Client.Types.$fEnumTickType_$ctoEnum x)
                   ys) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_c1 ::
    GHC.Types.Int
    -> [IB.Client.Types.TickType] -> [IB.Client.Types.TickType]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int ys :: [IB.Client.Types.TickType] ->
                 GHC.Types.:
                   @ IB.Client.Types.TickType
                   (case x of wild { GHC.Types.I# a43 ->
                    GHC.Prim.tagToEnum# @ IB.Client.Types.TickType a43 })
                   ys) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEnumTickType_go :: GHC.Prim.Int# -> [IB.Client.Types.TickType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEqFaDataType :: GHC.Classes.Eq IB.Client.Types.FaDataType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.FaDataType
                  IB.Client.Types.$fEqFaDataType_$c==
                  IB.Client.Types.$fEqFaDataType_$c/= -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEqFaDataType_$c/= ::
    IB.Client.Types.FaDataType
    -> IB.Client.Types.FaDataType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a43 :: IB.Client.Types.FaDataType
                   b :: IB.Client.Types.FaDataType ->
                 case a43 of wild {
                   IB.Client.Types.GROUPS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        IB.Client.Types.GROUPS -> GHC.Types.False }
                   IB.Client.Types.PROFILES
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        IB.Client.Types.PROFILES -> GHC.Types.False }
                   IB.Client.Types.ALIASES
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        IB.Client.Types.ALIASES -> GHC.Types.False } }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fEqFaDataType_$c== ::
    IB.Client.Types.FaDataType
    -> IB.Client.Types.FaDataType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: IB.Client.Types.FaDataType
                   ds1 :: IB.Client.Types.FaDataType ->
                 case ds of wild {
                   IB.Client.Types.GROUPS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        IB.Client.Types.GROUPS -> GHC.Types.True }
                   IB.Client.Types.PROFILES
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        IB.Client.Types.PROFILES -> GHC.Types.True }
                   IB.Client.Types.ALIASES
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        IB.Client.Types.ALIASES -> GHC.Types.True } }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEqOrigin :: GHC.Classes.Eq IB.Client.Types.Origin
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Origin
                  IB.Client.Types.$fEqOrigin_$c==
                  IB.Client.Types.$fEqOrigin_$c/= -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEqOrigin_$c/= ::
    IB.Client.Types.Origin -> IB.Client.Types.Origin -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a43 :: IB.Client.Types.Origin b :: IB.Client.Types.Origin ->
                 case a43 of wild {
                   IB.Client.Types.CUSTOMER
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        IB.Client.Types.CUSTOMER -> GHC.Types.False }
                   IB.Client.Types.FIRM
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True IB.Client.Types.FIRM -> GHC.Types.False }
                   IB.Client.Types.UNKNOWN
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        IB.Client.Types.UNKNOWN -> GHC.Types.False } }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fEqOrigin_$c== ::
    IB.Client.Types.Origin -> IB.Client.Types.Origin -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: IB.Client.Types.Origin ds1 :: IB.Client.Types.Origin ->
                 case ds of wild {
                   IB.Client.Types.CUSTOMER
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        IB.Client.Types.CUSTOMER -> GHC.Types.True }
                   IB.Client.Types.FIRM
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False IB.Client.Types.FIRM -> GHC.Types.True }
                   IB.Client.Types.UNKNOWN
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        IB.Client.Types.UNKNOWN -> GHC.Types.True } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEqTickType :: GHC.Classes.Eq IB.Client.Types.TickType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.TickType
                  IB.Client.Types.$fEqTickType_$c==
                  IB.Client.Types.$fEqTickType_$c/= -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEqTickType_$c/= ::
    IB.Client.Types.TickType
    -> IB.Client.Types.TickType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a43 :: IB.Client.Types.TickType b :: IB.Client.Types.TickType ->
                 case a43 of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1)
                           (GHC.Prim.dataToTag# @ IB.Client.Types.TickType x2)) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fEqTickType_$c== ::
    IB.Client.Types.TickType
    -> IB.Client.Types.TickType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a43 :: IB.Client.Types.TickType b :: IB.Client.Types.TickType ->
                 case a43 of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==#
                      (GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1)
                      (GHC.Prim.dataToTag# @ IB.Client.Types.TickType x2)) } }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fEqUnderComp :: GHC.Classes.Eq IB.Client.Types.UnderComp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.UnderComp
                  IB.Client.Types.$fEqUnderComp_$c==
                  IB.Client.Types.$fEqUnderComp_$c/= -}
a21e71e5f5ea67fadee2024d47af45da
  $fEqUnderComp_$c/= ::
    IB.Client.Types.UnderComp
    -> IB.Client.Types.UnderComp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U),1*U(U),1*U(U))><S(SLL),1*U(1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ a43 :: IB.Client.Types.UnderComp
                   b :: IB.Client.Types.UnderComp ->
                 case IB.Client.Types.$fEqUnderComp_$c== a43 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
a21e71e5f5ea67fadee2024d47af45da
  $fEqUnderComp_$c== ::
    IB.Client.Types.UnderComp
    -> IB.Client.Types.UnderComp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U),1*U(U),1*U(U))><S(SLL),1*U(1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: IB.Client.Types.UnderComp
                   w1 :: IB.Client.Types.UnderComp ->
                 case w of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Types.I# ww5 ->
                 case w1 of ww6 { IB.Client.Types.UnderComp ww7 ww8 ww9 ->
                 case ww7 of ww10 { GHC.Types.I# ww11 ->
                 IB.Client.Types.$w$c== ww5 ww2 ww3 ww11 ww8 ww9 } } } }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType :: GHC.Read.Read IB.Client.Types.FaDataType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.FaDataType
                  IB.Client.Types.$fReadFaDataType_$s$dmreadsPrec
                  IB.Client.Types.$fReadFaDataType_$sreadListDefault
                  IB.Client.Types.$fReadFaDataType_$creadPrec
                  IB.Client.Types.$fReadFaDataType_$creadListPrec -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([IB.Client.Types.FaDataType] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [IB.Client.Types.FaDataType]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ IB.Client.Types.FaDataType
                   IB.Client.Types.$fReadFaDataType2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <IB.Client.Types.FaDataType>_R))
                   @ b
                   eta1) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType10 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       IB.Client.Types.FaDataType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadFaDataType12,
                  IB.Client.Types.$fReadFaDataType11
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.FaDataType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.FaDataType>_R))))) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType11 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.FaDataType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.FaDataType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.PROFILES) -}
dd85b5bcfa58940b85b4d3aacc1d25f2
  $fReadFaDataType12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PROFILES"#) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType13 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       IB.Client.Types.FaDataType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadFaDataType15,
                  IB.Client.Types.$fReadFaDataType14
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.FaDataType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.FaDataType>_R))))) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType14 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.FaDataType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.FaDataType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.GROUPS) -}
1e45ec580844dc0da74032a8339abe52
  $fReadFaDataType15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GROUPS"#) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP IB.Client.Types.FaDataType
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ IB.Client.Types.FaDataType
                   IB.Client.Types.$fReadFaDataType3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <IB.Client.Types.FaDataType>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <IB.Client.Types.FaDataType>_R)))) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.FaDataType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: IB.Client.Types.FaDataType
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ IB.Client.Types.FaDataType
                   IB.Client.Types.$fReadFaDataType4
                   eta
                   @ b
                   eta1) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        IB.Client.Types.FaDataType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        IB.Client.Types.FaDataType)
                   IB.Client.Types.$fReadFaDataType13
                   IB.Client.Types.$fReadFaDataType5) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        IB.Client.Types.FaDataType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        IB.Client.Types.FaDataType)
                   IB.Client.Types.$fReadFaDataType10
                   IB.Client.Types.$fReadFaDataType6) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        IB.Client.Types.FaDataType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        IB.Client.Types.FaDataType)
                   IB.Client.Types.$fReadFaDataType7
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           IB.Client.Types.FaDataType))) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType7 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       IB.Client.Types.FaDataType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadFaDataType9,
                  IB.Client.Types.$fReadFaDataType8
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.FaDataType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.FaDataType>_R))))) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType8 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.FaDataType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.FaDataType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.ALIASES) -}
20949262ef01bae3e1a355fea89a6d38
  $fReadFaDataType9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ALIASES"#) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [IB.Client.Types.FaDataType]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadFaDataType1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[IB.Client.Types.FaDataType]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[IB.Client.Types.FaDataType]>_R))) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.FaDataType
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadFaDataType2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <IB.Client.Types.FaDataType>_R)) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS IB.Client.Types.FaDataType
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ IB.Client.Types.FaDataType
                   IB.Client.Types.$fReadFaDataType_$creadPrec
                   eta) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fReadFaDataType_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [IB.Client.Types.FaDataType]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [IB.Client.Types.FaDataType]
                   ((IB.Client.Types.$fReadFaDataType_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[IB.Client.Types.FaDataType]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[IB.Client.Types.FaDataType]>_R)
                      @ [IB.Client.Types.FaDataType]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [IB.Client.Types.FaDataType]))) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin :: GHC.Read.Read IB.Client.Types.NewsBulletin
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.NewsBulletin
                  IB.Client.Types.$fReadNewsBulletin_$s$dmreadsPrec
                  IB.Client.Types.$fReadNewsBulletin_$sreadListDefault
                  IB.Client.Types.$fReadNewsBulletin_$creadPrec
                  IB.Client.Types.$fReadNewsBulletin_$creadListPrec -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([IB.Client.Types.NewsBulletin]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [IB.Client.Types.NewsBulletin]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ IB.Client.Types.NewsBulletin
                   IB.Client.Types.$fReadNewsBulletin2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <IB.Client.Types.NewsBulletin>_R))
                   @ b
                   eta1) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin10 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       IB.Client.Types.NewsBulletin)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadNewsBulletin12,
                  IB.Client.Types.$fReadNewsBulletin11
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.NewsBulletin>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.NewsBulletin>_R))))) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin11 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.NewsBulletin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.NewsBulletin
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.EXCHANGE_AVAIL_MSG) -}
10fab2845e5beb7abedef30c22f3e430
  $fReadNewsBulletin12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EXCHANGE_AVAIL_MSG"#) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin13 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       IB.Client.Types.NewsBulletin)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadNewsBulletin15,
                  IB.Client.Types.$fReadNewsBulletin14
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.NewsBulletin>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.NewsBulletin>_R))))) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin14 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.NewsBulletin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.NewsBulletin
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.NEWS_MSG) -}
17f9f6a66a92c8295a78ef9a62aedbd2
  $fReadNewsBulletin15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NEWS_MSG"#) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP IB.Client.Types.NewsBulletin
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ IB.Client.Types.NewsBulletin
                   IB.Client.Types.$fReadNewsBulletin3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <IB.Client.Types.NewsBulletin>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <IB.Client.Types.NewsBulletin>_R)))) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.NewsBulletin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: IB.Client.Types.NewsBulletin
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ IB.Client.Types.NewsBulletin
                   IB.Client.Types.$fReadNewsBulletin4
                   eta
                   @ b
                   eta1) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        IB.Client.Types.NewsBulletin)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        IB.Client.Types.NewsBulletin)
                   IB.Client.Types.$fReadNewsBulletin13
                   IB.Client.Types.$fReadNewsBulletin5) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        IB.Client.Types.NewsBulletin)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        IB.Client.Types.NewsBulletin)
                   IB.Client.Types.$fReadNewsBulletin10
                   IB.Client.Types.$fReadNewsBulletin6) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        IB.Client.Types.NewsBulletin)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        IB.Client.Types.NewsBulletin)
                   IB.Client.Types.$fReadNewsBulletin7
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           IB.Client.Types.NewsBulletin))) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin7 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       IB.Client.Types.NewsBulletin)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadNewsBulletin9,
                  IB.Client.Types.$fReadNewsBulletin8
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.NewsBulletin>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.NewsBulletin>_R))))) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin8 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.NewsBulletin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.NewsBulletin
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.EXCHANGE_UNAVAIL_MSG) -}
09827a7363a56c5c30ba404088cb5e41
  $fReadNewsBulletin9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "EXCHANGE_UNAVAIL_MSG"#) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [IB.Client.Types.NewsBulletin]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadNewsBulletin1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[IB.Client.Types.NewsBulletin]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[IB.Client.Types.NewsBulletin]>_R))) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      IB.Client.Types.NewsBulletin
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadNewsBulletin2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <IB.Client.Types.NewsBulletin>_R)) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS IB.Client.Types.NewsBulletin
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ IB.Client.Types.NewsBulletin
                   IB.Client.Types.$fReadNewsBulletin_$creadPrec
                   eta) -}
b28d7eb203762c305be42fe6a07d96f9
  $fReadNewsBulletin_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [IB.Client.Types.NewsBulletin]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [IB.Client.Types.NewsBulletin]
                   ((IB.Client.Types.$fReadNewsBulletin_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[IB.Client.Types.NewsBulletin]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[IB.Client.Types.NewsBulletin]>_R)
                      @ [IB.Client.Types.NewsBulletin]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [IB.Client.Types.NewsBulletin]))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin :: GHC.Read.Read IB.Client.Types.Origin
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Origin
                  IB.Client.Types.$fReadOrigin_$s$dmreadsPrec
                  IB.Client.Types.$fReadOrigin_$sreadListDefault
                  IB.Client.Types.$fReadOrigin_$creadPrec
                  IB.Client.Types.$fReadOrigin_$creadListPrec -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([IB.Client.Types.Origin] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [IB.Client.Types.Origin]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ IB.Client.Types.Origin
                   IB.Client.Types.$fReadOrigin2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <IB.Client.Types.Origin>_R))
                   @ b
                   eta1) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin10 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadOrigin12,
                  IB.Client.Types.$fReadOrigin11
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.Origin>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.Origin>_R))))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin11 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.Origin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.Origin
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.FIRM) -}
a5fbe792f2bd410d4c73052607585751
  $fReadOrigin12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FIRM"#) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin13 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadOrigin15,
                  IB.Client.Types.$fReadOrigin14
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.Origin>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.Origin>_R))))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin14 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.Origin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.Origin
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.CUSTOMER) -}
82914839a0ff279834e3a26513f06aee
  $fReadOrigin15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CUSTOMER"#) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP IB.Client.Types.Origin
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ IB.Client.Types.Origin
                   IB.Client.Types.$fReadOrigin3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <IB.Client.Types.Origin>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <IB.Client.Types.Origin>_R)))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.Origin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: IB.Client.Types.Origin
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ IB.Client.Types.Origin
                   IB.Client.Types.$fReadOrigin4
                   eta
                   @ b
                   eta1) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)
                   IB.Client.Types.$fReadOrigin13
                   IB.Client.Types.$fReadOrigin5) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)
                   IB.Client.Types.$fReadOrigin10
                   IB.Client.Types.$fReadOrigin6) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)
                   IB.Client.Types.$fReadOrigin7
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           IB.Client.Types.Origin))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin7 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadOrigin9,
                  IB.Client.Types.$fReadOrigin8
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.Origin>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.Origin>_R))))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin8 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.Origin -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.Origin
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.UNKNOWN) -}
13f40f3f2c9b8aeceb6b655ec787cc89
  $fReadOrigin9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UNKNOWN"#) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [IB.Client.Types.Origin]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadOrigin1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[IB.Client.Types.Origin]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[IB.Client.Types.Origin]>_R))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.Origin
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadOrigin2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <IB.Client.Types.Origin>_R)) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS IB.Client.Types.Origin
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ IB.Client.Types.Origin
                   IB.Client.Types.$fReadOrigin_$creadPrec
                   eta) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fReadOrigin_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [IB.Client.Types.Origin]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [IB.Client.Types.Origin]
                   ((IB.Client.Types.$fReadOrigin_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[IB.Client.Types.Origin]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[IB.Client.Types.Origin]>_R)
                      @ [IB.Client.Types.Origin]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [IB.Client.Types.Origin]))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType :: GHC.Read.Read IB.Client.Types.TickType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.TickType
                  IB.Client.Types.$fReadTickType_$s$dmreadsPrec
                  IB.Client.Types.$fReadTickType_$sreadListDefault
                  IB.Client.Types.$fReadTickType_$creadPrec
                  IB.Client.Types.$fReadTickType_$creadListPrec -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([IB.Client.Types.TickType] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [IB.Client.Types.TickType]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ IB.Client.Types.TickType
                   IB.Client.Types.$fReadTickType2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <IB.Client.Types.TickType>_R))
                   @ b
                   eta1) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType10 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType123
                   IB.Client.Types.$fReadTickType11) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType100 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPEN) -}
2f21d14f6a7e2e6d7a43efdfb6083f00
  $fReadTickType101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPEN"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType102 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType104,
                  IB.Client.Types.$fReadTickType103
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType103 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.MODEL_OPTION) -}
56f7175dc26d43b47af5296d0121607b
  $fReadTickType104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MODEL_OPTION"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType105 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType107,
                  IB.Client.Types.$fReadTickType106
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType106 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.LAST_OPTION_COMPUTATION) -}
e657b25aece121c43708377f90fd2b2b
  $fReadTickType107 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "LAST_OPTION_COMPUTATION"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType108 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType110,
                  IB.Client.Types.$fReadTickType109
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType109 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.ASK_OPTION_COMPUTATION) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType11 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType120
                   IB.Client.Types.$fReadTickType12) -}
3ec4ff78503462be7ae01d7ec9c6384f
  $fReadTickType110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ASK_OPTION_COMPUTATION"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType111 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType113,
                  IB.Client.Types.$fReadTickType112
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType112 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.BID_OPTION_COMPUTATION) -}
85d3cf9c7d0eb76fd0422b9dc9d94a16
  $fReadTickType113 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "BID_OPTION_COMPUTATION"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType114 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType116,
                  IB.Client.Types.$fReadTickType115
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType115 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.CLOSE) -}
2ec70bda449bb629cac4fa50051ffbd2
  $fReadTickType116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CLOSE"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType117 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType119,
                  IB.Client.Types.$fReadTickType118
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType118 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.VOLUME) -}
37e8495514468e5c43d848339a93b660
  $fReadTickType119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "VOLUME"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType12 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType117
                   IB.Client.Types.$fReadTickType13) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType120 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType122,
                  IB.Client.Types.$fReadTickType121
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType121 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.LOW) -}
574c04227d48fd6201fe9b94480ac244
  $fReadTickType122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LOW"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType123 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType125,
                  IB.Client.Types.$fReadTickType124
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType124 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.HIGH) -}
27232909d043a37ba7d5ac41e4b0e925
  $fReadTickType125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HIGH"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType126 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType128,
                  IB.Client.Types.$fReadTickType127
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType127 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.LAST_SIZE) -}
be6e6ce44956104141bf977f27bb2740
  $fReadTickType128 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LAST_SIZE"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType129 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType131,
                  IB.Client.Types.$fReadTickType130
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType13 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType114
                   IB.Client.Types.$fReadTickType14) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType130 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.LAST) -}
1b5fed831f1f6a31d7202ef21f875e72
  $fReadTickType131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LAST"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType132 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType134,
                  IB.Client.Types.$fReadTickType133
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType133 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.ASK_SIZE) -}
c7917c76177a33c0464d86ff2d955d1a
  $fReadTickType134 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ASK_SIZE"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType135 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType137,
                  IB.Client.Types.$fReadTickType136
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType136 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.ASK) -}
9db03d946921797e69bfe523df62c28a
  $fReadTickType137 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ASK"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType138 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType140,
                  IB.Client.Types.$fReadTickType139
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType139 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.BID) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType14 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType111
                   IB.Client.Types.$fReadTickType15) -}
6fe3efd56370b0f34620b29fb1443f03
  $fReadTickType140 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BID"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType141 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType143,
                  IB.Client.Types.$fReadTickType142
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType142 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.BID_SIZE) -}
fc2aa10a0a74ea0a469aacad59c2d9be
  $fReadTickType143 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BID_SIZE"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType15 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType108
                   IB.Client.Types.$fReadTickType16) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType16 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType105
                   IB.Client.Types.$fReadTickType17) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType17 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType102
                   IB.Client.Types.$fReadTickType18) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType18 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType99
                   IB.Client.Types.$fReadTickType19) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType19 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType96
                   IB.Client.Types.$fReadTickType20) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP IB.Client.Types.TickType
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ IB.Client.Types.TickType
                   IB.Client.Types.$fReadTickType3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <IB.Client.Types.TickType>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <IB.Client.Types.TickType>_R)))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType20 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType93
                   IB.Client.Types.$fReadTickType21) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType21 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType90
                   IB.Client.Types.$fReadTickType22) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType22 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType87
                   IB.Client.Types.$fReadTickType23) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType23 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType84
                   IB.Client.Types.$fReadTickType24) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType24 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType81
                   IB.Client.Types.$fReadTickType25) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType25 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType78
                   IB.Client.Types.$fReadTickType26) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType26 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType75
                   IB.Client.Types.$fReadTickType27) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType27 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType72
                   IB.Client.Types.$fReadTickType28) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType28 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType69
                   IB.Client.Types.$fReadTickType29) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType29 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType66
                   IB.Client.Types.$fReadTickType30) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: IB.Client.Types.TickType
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ IB.Client.Types.TickType
                   IB.Client.Types.$fReadTickType4
                   eta
                   @ b
                   eta1) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType30 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType63
                   IB.Client.Types.$fReadTickType31) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType31 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType60
                   IB.Client.Types.$fReadTickType32) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType32 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType57
                   IB.Client.Types.$fReadTickType33) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType33 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType54
                   IB.Client.Types.$fReadTickType34) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType34 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType51
                   IB.Client.Types.$fReadTickType35) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType35 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType48
                   IB.Client.Types.$fReadTickType36) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType36 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType45
                   IB.Client.Types.$fReadTickType37) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType37 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType42
                   IB.Client.Types.$fReadTickType38) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType38 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType39
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           IB.Client.Types.TickType))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType39 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType41,
                  IB.Client.Types.$fReadTickType40
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType141
                   IB.Client.Types.$fReadTickType5) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType40 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.AUCTION_VOLUME) -}
e2dc3ab7dad00823019eb2b92ea51d0f
  $fReadTickType41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AUCTION_VOLUME"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType42 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType44,
                  IB.Client.Types.$fReadTickType43
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType43 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.ASK_EXCH) -}
f15f88b9949bb38b51ddff1142b965e0
  $fReadTickType44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ASK_EXCH"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType45 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType47,
                  IB.Client.Types.$fReadTickType46
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType46 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.BID_EXCH) -}
b30087994d813ab96aa4f6ca6d6fd875
  $fReadTickType47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BID_EXCH"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType48 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType50,
                  IB.Client.Types.$fReadTickType49
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType49 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.INDEX_FUTURE_PREMIUM) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType138
                   IB.Client.Types.$fReadTickType6) -}
533e53dd9b7841cf54fbdc3dacb6feff
  $fReadTickType50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "INDEX_FUTURE_PREMIUM"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType51 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType53,
                  IB.Client.Types.$fReadTickType52
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType52 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_PUT_VOLUME) -}
258b3100622c3d3a676834b3f1ead74a
  $fReadTickType53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPTION_PUT_VOLUME"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType54 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType56,
                  IB.Client.Types.$fReadTickType55
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType55 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_CALL_VOLUME) -}
41e25229627b4c8f5eae3859f103de78
  $fReadTickType56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPTION_CALL_VOLUME"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType57 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType59,
                  IB.Client.Types.$fReadTickType58
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType58 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_PUT_OPEN_INTEREST) -}
50a7483c1ed9ea888664001872ad8aff
  $fReadTickType59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "OPTION_PUT_OPEN_INTEREST"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType135
                   IB.Client.Types.$fReadTickType7) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType60 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType62,
                  IB.Client.Types.$fReadTickType61
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType61 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_CALL_OPEN_INTEREST) -}
7f9ab7e2a05fa44b615cbb01743a23de
  $fReadTickType62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "OPTION_CALL_OPEN_INTEREST"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType63 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType65,
                  IB.Client.Types.$fReadTickType64
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType64 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_ASK_EXCH) -}
d614bdaa44e76fc7f65eb0a0fbf7f60b
  $fReadTickType65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPTION_ASK_EXCH"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType66 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType68,
                  IB.Client.Types.$fReadTickType67
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType67 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_BID_EXCH) -}
1886a437a64aa49ce3f6ffe10d45063b
  $fReadTickType68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPTION_BID_EXCH"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType69 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType71,
                  IB.Client.Types.$fReadTickType70
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType132
                   IB.Client.Types.$fReadTickType8) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType70 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_IMPLIED_VOL) -}
dc9f8b796bba8b20d8e8f85afcfb183f
  $fReadTickType71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPTION_IMPLIED_VOL"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType72 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType74,
                  IB.Client.Types.$fReadTickType73
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType73 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPTION_HISTORICAL_VOL) -}
6847915946022084ff991c45295fa685
  $fReadTickType74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "OPTION_HISTORICAL_VOL"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType75 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType77,
                  IB.Client.Types.$fReadTickType76
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType76 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.OPEN_INTEREST) -}
f3a9afd4a2a4d9b23167a860a8f0bd6b
  $fReadTickType77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPEN_INTEREST"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType78 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType80,
                  IB.Client.Types.$fReadTickType79
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType79 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.AVG_VOLUME) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType8 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType129
                   IB.Client.Types.$fReadTickType9) -}
ea41e8bc120dc6a2626ba2207447ac97
  $fReadTickType80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AVG_VOLUME"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType81 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType83,
                  IB.Client.Types.$fReadTickType82
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType82 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.HIGH_52_WEEK) -}
9bc184ecd8410b82763d69713892b087
  $fReadTickType83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HIGH_52_WEEK"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType84 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType86,
                  IB.Client.Types.$fReadTickType85
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType85 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.LOW_52_WEEK) -}
4014b2e488f98f2a30965f583c9de2ef
  $fReadTickType86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LOW_52_WEEK"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType87 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType89,
                  IB.Client.Types.$fReadTickType88
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType88 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.HIGH_26_WEEK) -}
971b14fc926e3dfc83e2747c998323b7
  $fReadTickType89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HIGH_26_WEEK"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType9 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
                   IB.Client.Types.$fReadTickType126
                   IB.Client.Types.$fReadTickType10) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType90 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType92,
                  IB.Client.Types.$fReadTickType91
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType91 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.LOW_26_WEEK) -}
22cbf53b65278b53d316bab37e67bed1
  $fReadTickType92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LOW_26_WEEK"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType93 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType95,
                  IB.Client.Types.$fReadTickType94
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType94 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.HIGH_13_WEEK) -}
594b77e77733735dfd1341f6dad73cf0
  $fReadTickType95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HIGH_13_WEEK"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType96 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType98,
                  IB.Client.Types.$fReadTickType97
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType97 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (IB.Client.Types.TickType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: IB.Client.Types.TickType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta IB.Client.Types.LOW_13_WEEK) -}
abc9cd4bd4689f1e1578e102849421b8
  $fReadTickType98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LOW_13_WEEK"#) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType99 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType)
  {- Strictness: m,
     Unfolding: ((IB.Client.Types.$fReadTickType101,
                  IB.Client.Types.$fReadTickType100
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <IB.Client.Types.TickType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <IB.Client.Types.TickType>_R))))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [IB.Client.Types.TickType]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadTickType1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[IB.Client.Types.TickType]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[IB.Client.Types.TickType]>_R))) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec IB.Client.Types.TickType
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                IB.Client.Types.$fReadTickType2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <IB.Client.Types.TickType>_R)) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS IB.Client.Types.TickType
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ IB.Client.Types.TickType
                   IB.Client.Types.$fReadTickType_$creadPrec
                   eta) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fReadTickType_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [IB.Client.Types.TickType]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [IB.Client.Types.TickType]
                   ((IB.Client.Types.$fReadTickType_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[IB.Client.Types.TickType]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[IB.Client.Types.TickType]>_R)
                      @ [IB.Client.Types.TickType]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [IB.Client.Types.TickType]))) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fShowBarData :: GHC.Show.Show IB.Client.Types.BarData
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.BarData
                  IB.Client.Types.$fShowBarData_$cshowsPrec
                  IB.Client.Types.$fShowBarData_$cshow
                  IB.Client.Types.$fShowBarData_$cshowList -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fShowBarData1 :: IB.Client.Types.BarData -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: IB.Client.Types.BarData ->
                 case w of ww { IB.Client.Types.BarData ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cshowsPrec
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fShowBarData_$cshow :: IB.Client.Types.BarData -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U(U),1*U(U),U,U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.BarData ->
                 IB.Client.Types.$fShowBarData_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fShowBarData_$cshowList ::
    [IB.Client.Types.BarData] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.BarData
                   IB.Client.Types.$fShowBarData1) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $fShowBarData_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.BarData -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(U)><S,1*U(U,1*U(U),1*U(U),1*U(U),1*U(U),U(U),1*U(U),U,U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.BarData ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.BarData ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ->
                 IB.Client.Types.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
002efe166b6bb952b605830233cda850
  $fShowComboLeg :: GHC.Show.Show IB.Client.Types.ComboLeg
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ComboLeg
                  IB.Client.Types.$fShowComboLeg_$cshowsPrec
                  IB.Client.Types.$fShowComboLeg_$cshow
                  IB.Client.Types.$fShowComboLeg_$cshowList -}
002efe166b6bb952b605830233cda850
  $fShowComboLeg1 :: IB.Client.Types.ComboLeg -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: IB.Client.Types.ComboLeg
                   w1 :: GHC.Base.String ->
                 case w of ww { IB.Client.Types.ComboLeg ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.$w$cshowsPrec1
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   w1 }) -}
002efe166b6bb952b605830233cda850
  $fShowComboLeg_$cshow ::
    IB.Client.Types.ComboLeg -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U,1*U,1*U(U),1*U(U),1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.ComboLeg ->
                 IB.Client.Types.$fShowComboLeg_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
002efe166b6bb952b605830233cda850
  $fShowComboLeg_$cshowList ::
    [IB.Client.Types.ComboLeg] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.ComboLeg
                   IB.Client.Types.$fShowComboLeg1) -}
002efe166b6bb952b605830233cda850
  $fShowComboLeg_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.ComboLeg -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S,1*U(U)><S,1*U(1*U(U),1*U(U),1*U,1*U,1*U(U),1*U(U),1*U,1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: IB.Client.Types.ComboLeg
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.ComboLeg ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 IB.Client.Types.$w$cshowsPrec1
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fShowContract :: GHC.Show.Show IB.Client.Types.Contract
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Contract
                  IB.Client.Types.$fShowContract_$cshowsPrec
                  IB.Client.Types.$fShowContract_$cshow
                  IB.Client.Types.$fShowContract_$cshowList -}
caa528b01431966dcbe9dd33da29f1b8
  $fShowContract1 :: IB.Client.Types.Contract -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: IB.Client.Types.Contract ->
                 case w of ww { IB.Client.Types.Contract ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cshowsPrec2
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fShowContractDetails ::
    GHC.Show.Show IB.Client.Types.ContractDetails
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ContractDetails
                  IB.Client.Types.$fShowContractDetails_$cshowsPrec
                  IB.Client.Types.$fShowContractDetails_$cshow
                  IB.Client.Types.$fShowContractDetails_$cshowList -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fShowContractDetails1 ::
    IB.Client.Types.ContractDetails -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: IB.Client.Types.ContractDetails ->
                 case w of ww { IB.Client.Types.ContractDetails ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ->
                 IB.Client.Types.$w$cshowsPrec3
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fShowContractDetails_$cshow ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U))),U,1*U(U),U,U,U(U),U(U),U,U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.ContractDetails ->
                 IB.Client.Types.$fShowContractDetails_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fShowContractDetails_$cshowList ::
    [IB.Client.Types.ContractDetails] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.ContractDetails
                   IB.Client.Types.$fShowContractDetails1) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $fShowContractDetails_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.ContractDetails -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(U)><S,1*U(1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U))),U,1*U(U),U,U,U(U),U(U),U,U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.ContractDetails ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.ContractDetails ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                 IB.Client.Types.$w$cshowsPrec3
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35 } }) -}
caa528b01431966dcbe9dd33da29f1b8
  $fShowContract_$cshow ::
    IB.Client.Types.Contract -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.Contract ->
                 IB.Client.Types.$fShowContract_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
caa528b01431966dcbe9dd33da29f1b8
  $fShowContract_$cshowList ::
    [IB.Client.Types.Contract] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.Contract
                   IB.Client.Types.$fShowContract1) -}
caa528b01431966dcbe9dd33da29f1b8
  $fShowContract_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.Contract -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(U)><S,1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.Contract ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.Contract ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 IB.Client.Types.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20 } }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fShowExecution :: GHC.Show.Show IB.Client.Types.Execution
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Execution
                  IB.Client.Types.$fShowExecution_$cshowsPrec
                  IB.Client.Types.$fShowExecution_$cshow
                  IB.Client.Types.$fShowExecution_$cshowList -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fShowExecution1 :: IB.Client.Types.Execution -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: IB.Client.Types.Execution ->
                 case w of ww { IB.Client.Types.Execution ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 IB.Client.Types.$w$cshowsPrec4
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fShowExecution_$cshow ::
    IB.Client.Types.Execution -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U(U),1*U(U),U(U),U(U),U(U),U(U),U(U),1*U(U),U,U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.Execution ->
                 IB.Client.Types.$fShowExecution_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fShowExecution_$cshowList ::
    [IB.Client.Types.Execution] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.Execution
                   IB.Client.Types.$fShowExecution1) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $fShowExecution_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.Execution -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(U)><S,1*U(U,U,U,U,U,U(U),1*U(U),U(U),U(U),U(U),U(U),U(U),1*U(U),U,U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.Execution ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.Execution ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 IB.Client.Types.$w$cshowsPrec4
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 } }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fShowFaDataType :: GHC.Show.Show IB.Client.Types.FaDataType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.FaDataType
                  IB.Client.Types.$fShowFaDataType_$cshowsPrec
                  IB.Client.Types.$fShowFaDataType_$cshow
                  IB.Client.Types.$fShowFaDataType_$cshowList -}
a5261c783f695b8df6ea4eda8bf619ea
  $fShowFaDataType_$cshow ::
    IB.Client.Types.FaDataType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.FaDataType ->
                 case x of wild {
                   IB.Client.Types.GROUPS -> IB.Client.Types.$fReadFaDataType15
                   IB.Client.Types.PROFILES -> IB.Client.Types.$fReadFaDataType12
                   IB.Client.Types.ALIASES -> IB.Client.Types.$fReadFaDataType9 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fShowFaDataType_$cshowList ::
    [IB.Client.Types.FaDataType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.FaDataType
                   IB.Client.Types.$w$cshowsPrec5) -}
a5261c783f695b8df6ea4eda8bf619ea
  $fShowFaDataType_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.FaDataType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: IB.Client.Types.FaDataType
                   w2 :: GHC.Base.String ->
                 IB.Client.Types.$w$cshowsPrec5 w1 w2) -}
c3159178f505ab80d8d762e3ddc31b28
  $fShowIBMessage :: GHC.Show.Show IB.Client.Types.IBMessage
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.IBMessage
                  IB.Client.Types.$fShowIBMessage_$cshowsPrec
                  IB.Client.Types.$fShowIBMessage_$cshow
                  IB.Client.Types.$fShowIBMessage_$cshowList -}
c3159178f505ab80d8d762e3ddc31b28
  $fShowIBMessage1 :: IB.Client.Types.IBMessage -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (IB.Client.Types.$fShowIBMessage_$cshowsPrec
                   IB.Client.Types.$fDataContractDetails2) -}
c3159178f505ab80d8d762e3ddc31b28
  $fShowIBMessage_$cshow ::
    IB.Client.Types.IBMessage -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.IBMessage ->
                 IB.Client.Types.$fShowIBMessage_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c3159178f505ab80d8d762e3ddc31b28
  $fShowIBMessage_$cshowList ::
    [IB.Client.Types.IBMessage] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.IBMessage
                   IB.Client.Types.$fShowIBMessage1) -}
c3159178f505ab80d8d762e3ddc31b28
  $fShowIBMessage_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.IBMessage -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
b28d7eb203762c305be42fe6a07d96f9
  $fShowNewsBulletin :: GHC.Show.Show IB.Client.Types.NewsBulletin
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.NewsBulletin
                  IB.Client.Types.$fShowNewsBulletin_$cshowsPrec
                  IB.Client.Types.$fShowNewsBulletin_$cshow
                  IB.Client.Types.$fShowNewsBulletin_$cshowList -}
b28d7eb203762c305be42fe6a07d96f9
  $fShowNewsBulletin_$cshow ::
    IB.Client.Types.NewsBulletin -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.NewsBulletin ->
                 case x of wild {
                   IB.Client.Types.NEWS_MSG -> IB.Client.Types.$fReadNewsBulletin15
                   IB.Client.Types.EXCHANGE_AVAIL_MSG
                   -> IB.Client.Types.$fReadNewsBulletin12
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                   -> IB.Client.Types.$fReadNewsBulletin9 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $fShowNewsBulletin_$cshowList ::
    [IB.Client.Types.NewsBulletin] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.NewsBulletin
                   IB.Client.Types.$w$cshowsPrec6) -}
b28d7eb203762c305be42fe6a07d96f9
  $fShowNewsBulletin_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.NewsBulletin -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: IB.Client.Types.NewsBulletin
                   w2 :: GHC.Base.String ->
                 IB.Client.Types.$w$cshowsPrec6 w1 w2) -}
2cd8217c2494d18a13975b77e7704072
  $fShowOrder :: GHC.Show.Show IB.Client.Types.Order
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Order
                  IB.Client.Types.$fShowOrder_$cshowsPrec
                  IB.Client.Types.$fShowOrder_$cshow
                  IB.Client.Types.$fShowOrder_$cshowList -}
2cd8217c2494d18a13975b77e7704072
  $fShowOrder1 :: IB.Client.Types.Order -> GHC.Show.ShowS
  {- Arity: 1 -}
33e8af4fb4aaa2caee0107ce817c023d
  $fShowOrderState :: GHC.Show.Show IB.Client.Types.OrderState
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.OrderState
                  IB.Client.Types.$fShowOrderState_$cshowsPrec
                  IB.Client.Types.$fShowOrderState_$cshow
                  IB.Client.Types.$fShowOrderState_$cshowList -}
33e8af4fb4aaa2caee0107ce817c023d
  $fShowOrderState1 :: IB.Client.Types.OrderState -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: IB.Client.Types.OrderState ->
                 case w of ww { IB.Client.Types.OrderState ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 IB.Client.Types.$w$cshowsPrec8
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 }) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fShowOrderState_$cshow ::
    IB.Client.Types.OrderState -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U(U),1*U(U),1*U(U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.OrderState ->
                 IB.Client.Types.$fShowOrderState_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fShowOrderState_$cshowList ::
    [IB.Client.Types.OrderState] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.OrderState
                   IB.Client.Types.$fShowOrderState1) -}
33e8af4fb4aaa2caee0107ce817c023d
  $fShowOrderState_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.OrderState -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(U)><S,1*U(U,U,U,U,1*U(U),1*U(U),1*U(U),U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.OrderState ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.OrderState ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ->
                 IB.Client.Types.$w$cshowsPrec8
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
2cd8217c2494d18a13975b77e7704072
  $fShowOrder_$cshow :: IB.Client.Types.Order -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U),U(U),U(U),U,U(U),U,1*U(U),1*U(U),U,U,U,U,U(U),U,U,U(U),U,U,U(U),U(U),U,U,U,U,U,U,U(U),1*U(U),U,1*U(U),1*U(U),U,U,U,U,U,U,U(U),U,U(U),1*U(U),U,U,1*U(U),U,U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),U(U),U,1*U(U),U(U),U,U,U,U,U,U(U),U,U,U(U),1*U(U),U(U),U(U),U(U),1*U(U),1*U(U),U(U),1*U(U),U,U(U),U(U),U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.Order ->
                 IB.Client.Types.$fShowOrder_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2cd8217c2494d18a13975b77e7704072
  $fShowOrder_$cshowList :: [IB.Client.Types.Order] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.Order
                   IB.Client.Types.$fShowOrder1) -}
2cd8217c2494d18a13975b77e7704072
  $fShowOrder_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.Order -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(U)><S,1*U(U(U),U(U),U(U),U,U(U),U,1*U(U),1*U(U),U,U,U,U,U(U),U,U,U(U),U,U,U(U),U(U),U,U,U,U,U,U,U(U),1*U(U),U,1*U(U),1*U(U),U,U,U,U,U,U,U(U),U,U(U),1*U(U),U,U,1*U(U),U,U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),U(U),U,1*U(U),U(U),U,U,U,U,U,U(U),U,U,U(U),1*U(U),U(U),U(U),U(U),1*U(U),1*U(U),U(U),1*U(U),U,U(U),U(U),U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.Order ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.Order ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ww80 ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ww90 ww91 ->
                 IB.Client.Types.$w$cshowsPrec7
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59
                   ww60
                   ww61
                   ww62
                   ww63
                   ww64
                   ww65
                   ww66
                   ww67
                   ww68
                   ww69
                   ww70
                   ww71
                   ww72
                   ww73
                   ww74
                   ww75
                   ww76
                   ww77
                   ww78
                   ww79
                   ww80
                   ww81
                   ww82
                   ww83
                   ww84
                   ww85
                   ww86
                   ww87
                   ww88
                   ww89
                   ww90
                   ww91 } }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fShowOrigin :: GHC.Show.Show IB.Client.Types.Origin
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.Origin
                  IB.Client.Types.$fShowOrigin_$cshowsPrec
                  IB.Client.Types.$fShowOrigin_$cshow
                  IB.Client.Types.$fShowOrigin_$cshowList -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fShowOrigin_$cshow :: IB.Client.Types.Origin -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.Origin ->
                 case x of wild {
                   IB.Client.Types.CUSTOMER -> IB.Client.Types.$fReadOrigin15
                   IB.Client.Types.FIRM -> IB.Client.Types.$fReadOrigin12
                   IB.Client.Types.UNKNOWN -> IB.Client.Types.$fReadOrigin9 }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fShowOrigin_$cshowList ::
    [IB.Client.Types.Origin] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.Origin
                   IB.Client.Types.$w$cshowsPrec9) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $fShowOrigin_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.Origin -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: IB.Client.Types.Origin
                   w2 :: GHC.Base.String ->
                 IB.Client.Types.$w$cshowsPrec9 w1 w2) -}
50caed14fc43fe28260a3dbedf7b8938
  $fShowScanData :: GHC.Show.Show IB.Client.Types.ScanData
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.ScanData
                  IB.Client.Types.$fShowScanData_$cshowsPrec
                  IB.Client.Types.$fShowScanData_$cshow
                  IB.Client.Types.$fShowScanData_$cshowList -}
50caed14fc43fe28260a3dbedf7b8938
  $fShowScanData1 :: IB.Client.Types.ScanData -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: IB.Client.Types.ScanData ->
                 case w of ww { IB.Client.Types.ScanData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 IB.Client.Types.$w$cshowsPrec10 0 ww1 ww2 ww3 ww4 ww5 ww6 }) -}
50caed14fc43fe28260a3dbedf7b8938
  $fShowScanData_$cshow ::
    IB.Client.Types.ScanData -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U),1*U(1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U))),U,1*U(U),U,U,U(U),U(U),U,U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U),U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.ScanData ->
                 IB.Client.Types.$fShowScanData_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
50caed14fc43fe28260a3dbedf7b8938
  $fShowScanData_$cshowList ::
    [IB.Client.Types.ScanData] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.ScanData
                   IB.Client.Types.$fShowScanData1) -}
50caed14fc43fe28260a3dbedf7b8938
  $fShowScanData_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.ScanData -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(U)><S,1*U(U(U),1*U(1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U))),U,1*U(U),U,U,U(U),U(U),U,U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U),U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.ScanData ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.ScanData ww3 ww4 ww5 ww6 ww7 ww8 ->
                 IB.Client.Types.$w$cshowsPrec10 ww1 ww3 ww4 ww5 ww6 ww7 ww8 } }) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fShowTagValue :: GHC.Show.Show IB.Client.Types.TagValue
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.TagValue
                  IB.Client.Types.$fShowTagValue_$cshowsPrec
                  IB.Client.Types.$fShowTagValue_$cshow
                  IB.Client.Types.$fShowTagValue_$cshowList -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fShowTagValue1 :: IB.Client.Types.TagValue -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: IB.Client.Types.TagValue
                   w1 :: GHC.Base.String ->
                 case w of ww { IB.Client.Types.TagValue ww1 ww2 ->
                 IB.Client.Types.$w$cshowsPrec11 0 ww1 ww2 w1 }) -}
e6d593b664f99898884ecaed2aa0f66d
  $fShowTagValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
4deccd44b7e3f0f545caa0c9ebb0d069
  $fShowTagValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tv_value = "#) -}
61b66cb6aaa2e9e79c7a154749498761
  $fShowTagValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
e1811802931a26b5086c369f462b998a
  $fShowTagValue5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tv_tag = "#) -}
6284d80cd1eac5395a0b429ba85d7be0
  $fShowTagValue6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TagValue {"#) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fShowTagValue_$cshow ::
    IB.Client.Types.TagValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.TagValue ->
                 IB.Client.Types.$fShowTagValue_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fShowTagValue_$cshowList ::
    [IB.Client.Types.TagValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.TagValue
                   IB.Client.Types.$fShowTagValue1) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $fShowTagValue_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.TagValue -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: IB.Client.Types.TagValue
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.TagValue ww3 ww4 ->
                 IB.Client.Types.$w$cshowsPrec11 ww1 ww3 ww4 w2 } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fShowTickType :: GHC.Show.Show IB.Client.Types.TickType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.TickType
                  IB.Client.Types.$fShowTickType_$cshowsPrec
                  IB.Client.Types.$fShowTickType_$cshow
                  IB.Client.Types.$fShowTickType_$cshowList -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fShowTickType_$cshow ::
    IB.Client.Types.TickType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.TickType ->
                 IB.Client.Types.$fShowTickType_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fShowTickType_$cshowList ::
    [IB.Client.Types.TickType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.TickType
                   IB.Client.Types.$w$cshowsPrec12) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $fShowTickType_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.TickType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: IB.Client.Types.TickType
                   w2 :: GHC.Base.String ->
                 IB.Client.Types.$w$cshowsPrec12 w1 w2) -}
a21e71e5f5ea67fadee2024d47af45da
  $fShowUnderComp :: GHC.Show.Show IB.Client.Types.UnderComp
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ IB.Client.Types.UnderComp
                  IB.Client.Types.$fShowUnderComp_$cshowsPrec
                  IB.Client.Types.$fShowUnderComp_$cshow
                  IB.Client.Types.$fShowUnderComp_$cshowList -}
a21e71e5f5ea67fadee2024d47af45da
  $fShowUnderComp1 :: IB.Client.Types.UnderComp -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: IB.Client.Types.UnderComp ->
                 case w of ww { IB.Client.Types.UnderComp ww1 ww2 ww3 ->
                 IB.Client.Types.$w$cshowsPrec13 0 ww1 ww2 ww3 }) -}
eab62f1cacb97b32624650e5442deea6
  $fShowUnderComp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "uc_price = "#) -}
6fe63f28d2a9c0011d3262b257451db2
  $fShowUnderComp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "uc_delta = "#) -}
1214b260cfc43cc5910826d45ef0bc11
  $fShowUnderComp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "uc_conId = "#) -}
8650e7cb97681fc7e22d80416def3384
  $fShowUnderComp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UnderComp {"#) -}
a21e71e5f5ea67fadee2024d47af45da
  $fShowUnderComp_$cshow ::
    IB.Client.Types.UnderComp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.UnderComp ->
                 IB.Client.Types.$fShowUnderComp_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a21e71e5f5ea67fadee2024d47af45da
  $fShowUnderComp_$cshowList ::
    [IB.Client.Types.UnderComp] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ IB.Client.Types.UnderComp
                   IB.Client.Types.$fShowUnderComp1) -}
a21e71e5f5ea67fadee2024d47af45da
  $fShowUnderComp_$cshowsPrec ::
    GHC.Types.Int -> IB.Client.Types.UnderComp -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: IB.Client.Types.UnderComp ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { IB.Client.Types.UnderComp ww3 ww4 ww5 ->
                 IB.Client.Types.$w$cshowsPrec13 ww1 ww3 ww4 ww5 } }) -}
64677755851895df027614284fcf394c
  $s$fData[] :: Data.Data.Data [GHC.Types.Double]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Double]
                  IB.Client.Types.$s$fData[]5
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N <[GHC.Types.Double]>_N))
                  (Data.Data.$fData[]_$cgfoldl
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgunfold
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  IB.Client.Types.$s$fData[]4
                  IB.Client.Types.$s$fData[]3
                  IB.Client.Types.$s$fData[]2
                  IB.Client.Types.$s$fData[]1
                  (Data.Data.$fData[]_$cgmapT
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgmapQl
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgmapQr
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgmapQ
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgmapQi
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgmapM
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgmapMp
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble)
                  (Data.Data.$fData[]_$cgmapMo
                     @ GHC.Types.Double
                     IB.Client.Types.$s$fData[]5
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[GHC.Types.Double]>_N))
                     Data.Data.$fDataDouble) -}
0aa6fe6ba811cd9df3aa40ef3d5e4d1d
  $s$fData[]1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [GHC.Types.Double])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c [GHC.Types.Double])) -}
58b0c045daa9e048280c2467df948699
  $s$fData[]10 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   IB.Client.Types.$s$fData[]11
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
443653dea6a60e7ae7f7be138ee03547
  $s$fData[]11 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   IB.Client.Types.$fDataBarData_ww2
                   IB.Client.Types.$fDataBarData_ww3
                   IB.Client.Types.$s$fData[]12) -}
0fbe6d8608a978ffdc8459221fcd4800
  $s$fData[]12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
657a7d48b4819273f2dd499b94a98df5
  $s$fData[]13 :: Data.Data.Data [IB.Client.Types.TagValue]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [IB.Client.Types.TagValue]
                  IB.Client.Types.$s$fData[]17
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N <[IB.Client.Types.TagValue]>_N))
                  (Data.Data.$fData[]_$cgfoldl
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgunfold
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  IB.Client.Types.$s$fData[]16
                  IB.Client.Types.$s$fData[]15
                  IB.Client.Types.$s$fData[]_$s$fData[]_$cdataCast1
                  IB.Client.Types.$s$fData[]14
                  (Data.Data.$fData[]_$cgmapT
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgmapQl
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgmapQr
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgmapQ
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgmapQi
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgmapM
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgmapMp
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue)
                  (Data.Data.$fData[]_$cgmapMo
                     @ IB.Client.Types.TagValue
                     IB.Client.Types.$s$fData[]17
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.TagValue]>_N))
                     IB.Client.Types.$fDataTagValue) -}
642adde9b8a3bd7fa2c3103c4b373c72
  $s$fData[]14 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [IB.Client.Types.TagValue])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c [IB.Client.Types.TagValue])) -}
7baec3dd58c5a3cf02634c11134d2b26
  $s$fData[]15 :: [IB.Client.Types.TagValue] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: [IB.Client.Types.TagValue] -> Data.Data.listDataType) -}
755134ceedc9620ef6c19acea10e1fba
  $s$fData[]16 :: [IB.Client.Types.TagValue] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [IB.Client.Types.TagValue] ->
                 case ds of wild {
                   [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr }) -}
ab04ad3478c6c773d452bd30c448f4c8
  $s$fData[]17 ::
    GHC.Prim.Proxy# [IB.Client.Types.TagValue]
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# [IB.Client.Types.TagValue] ->
                 IB.Client.Types.$s$fData[]18) -}
9f37088b5304a156f9ae136f5765f189
  $s$fData[]18 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case IB.Client.Types.$s$fData[]_w2 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17730107610217102821
                        __word 9866972337190828755
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             IB.Client.Types.$s$fData[]19 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
991bf88b259871ad062e45c40a7d1855
  $s$fData[]19 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   IB.Client.Types.$fDataBarData9
                   IB.Client.Types.$s$fData[]20) -}
ad585989adaed8b132644d43cdde0a19
  $s$fData[]2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c [GHC.Types.Double])
  {- Arity: 2,
     Strictness: <C(S(SLLLL)),1*C1(U(1*U,1*U,A,A,A))><L,1*C1(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   f :: forall d. Data.Data.Data d => c (t d) ->
                 case $dTypeable1
                        `cast`
                      (Data.Typeable.Internal.NTCo:Typeable[0] <* -> *>_N <t>_N)
                        (GHC.Prim.proxy#
                           @ (* -> *)
                           @ t) of wild { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case dt of wild1 {
                   DEFAULT -> GHC.Base.Nothing @ (c [GHC.Types.Double])
                   __word 17730107610217102821
                   -> case dt1 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ (c [GHC.Types.Double])
                        __word 9866972337190828755
                        -> GHC.Base.Just
                             @ (c [GHC.Types.Double])
                             (f @ GHC.Types.Double Data.Data.$fDataDouble)
                               `cast`
                             (<c>_R (Trans
                                         (UnivCo mkUnsafeCo nominal t GHC.Prim.Any)
                                         (UnivCo mkUnsafeCo nominal GHC.Prim.Any []) <GHC.Types.Double>_N)) } } }) -}
dc212fbb2819a317a194538a4ce5ae67
  $s$fData[]20 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (IB.Client.Types.$s$fData[]_go1
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
f757ec6f07691f43f4a9936b10f452ca
  $s$fData[]21 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   IB.Client.Types.$fDataTagValue7
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
16c7d8c873ddbe40987fc64db0e52bf0
  $s$fData[]22 :: Data.Data.Data [IB.Client.Types.ScanData]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [IB.Client.Types.ScanData]
                  IB.Client.Types.$s$fData[]26
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N <[IB.Client.Types.ScanData]>_N))
                  (Data.Data.$fData[]_$cgfoldl
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgunfold
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  IB.Client.Types.$s$fData[]25
                  IB.Client.Types.$s$fData[]24
                  IB.Client.Types.$s$fData[]_$s$fData[]_$cdataCast2
                  IB.Client.Types.$s$fData[]23
                  (Data.Data.$fData[]_$cgmapT
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgmapQl
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgmapQr
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgmapQ
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgmapQi
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgmapM
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgmapMp
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData)
                  (Data.Data.$fData[]_$cgmapMo
                     @ IB.Client.Types.ScanData
                     IB.Client.Types.$s$fData[]26
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.ScanData]>_N))
                     IB.Client.Types.$fDataScanData) -}
6a7faf3b7759ac2aae863b4f9bf4bae8
  $s$fData[]23 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [IB.Client.Types.ScanData])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c [IB.Client.Types.ScanData])) -}
1cde9df7d01c0860715e14fc0e45baee
  $s$fData[]24 :: [IB.Client.Types.ScanData] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: [IB.Client.Types.ScanData] -> Data.Data.listDataType) -}
6a84011c012da060a847b3a408c56736
  $s$fData[]25 :: [IB.Client.Types.ScanData] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [IB.Client.Types.ScanData] ->
                 case ds of wild {
                   [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr }) -}
7feff50391da142123961460ef1bef40
  $s$fData[]26 ::
    GHC.Prim.Proxy# [IB.Client.Types.ScanData]
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# [IB.Client.Types.ScanData] ->
                 IB.Client.Types.$s$fData[]27) -}
2ebae10800ba87ba5338a004d85b25c0
  $s$fData[]27 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case IB.Client.Types.$s$fData[]_w3 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17730107610217102821
                        __word 9866972337190828755
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             IB.Client.Types.$s$fData[]28 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
2263c97b88f8e607551cab7d5ce42b28
  $s$fData[]28 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   IB.Client.Types.$fDataBarData9
                   IB.Client.Types.$s$fData[]29) -}
d8a243ee2e7782ed4456aaf035188d09
  $s$fData[]29 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (IB.Client.Types.$s$fData[]_go2
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
1a3139b1fab46b12d604602d53ab0aa6
  $s$fData[]3 :: [GHC.Types.Double] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: [GHC.Types.Double] -> Data.Data.listDataType) -}
b23c83ab2531f8dc131972181a65830a
  $s$fData[]30 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   IB.Client.Types.$fDataScanData6
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
d48476508a98efe658fe046fe3bb3051
  $s$fData[]31 :: Data.Data.Data [IB.Client.Types.BarData]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [IB.Client.Types.BarData]
                  IB.Client.Types.$s$fData[]35
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N <[IB.Client.Types.BarData]>_N))
                  (Data.Data.$fData[]_$cgfoldl
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgunfold
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  IB.Client.Types.$s$fData[]34
                  IB.Client.Types.$s$fData[]33
                  IB.Client.Types.$s$fData[]_$s$fData[]_$cdataCast3
                  IB.Client.Types.$s$fData[]32
                  (Data.Data.$fData[]_$cgmapT
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgmapQl
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgmapQr
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgmapQ
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgmapQi
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgmapM
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgmapMp
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData)
                  (Data.Data.$fData[]_$cgmapMo
                     @ IB.Client.Types.BarData
                     IB.Client.Types.$s$fData[]35
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N <[IB.Client.Types.BarData]>_N))
                     IB.Client.Types.$fDataBarData) -}
e8da7968ba0a73fbc1634ac92ad495c7
  $s$fData[]32 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [IB.Client.Types.BarData])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (c :: * -> *)
                   @ (t :: * -> * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   ds :: forall d e.
                         (Data.Data.Data d, Data.Data.Data e) =>
                         c (t d e) ->
                 GHC.Base.Nothing @ (c [IB.Client.Types.BarData])) -}
43a6b37e5dc4f0f62501ddb2d8215048
  $s$fData[]33 :: [IB.Client.Types.BarData] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: [IB.Client.Types.BarData] -> Data.Data.listDataType) -}
26de39eaabe743119c1e42f6192bf8f9
  $s$fData[]34 :: [IB.Client.Types.BarData] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [IB.Client.Types.BarData] ->
                 case ds of wild {
                   [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr }) -}
a4e431f0885319631a0b488c828bbc6a
  $s$fData[]35 ::
    GHC.Prim.Proxy# [IB.Client.Types.BarData]
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# [IB.Client.Types.BarData] ->
                 IB.Client.Types.$s$fData[]36) -}
175701a6a1f1afabf128d9a61ad7b301
  $s$fData[]36 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case IB.Client.Types.$s$fData[]_w4 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17730107610217102821
                        __word 9866972337190828755
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             IB.Client.Types.$s$fData[]37 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
8ac06cb80ef0fb2a7e7373ba9ea6edce
  $s$fData[]37 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   IB.Client.Types.$fDataBarData9
                   IB.Client.Types.$s$fData[]38) -}
b05b9afe30f82e584d4377a999ad278a
  $s$fData[]38 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (IB.Client.Types.$s$fData[]_go3
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
765bdb0ec7365673d30cdeec3ca97089
  $s$fData[]39 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   IB.Client.Types.$fDataBarData19
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
fee154b6afe1915935142725b458b662
  $s$fData[]4 :: [GHC.Types.Double] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [GHC.Types.Double] ->
                 case ds of wild {
                   [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr }) -}
8bae26d53512b6e13a1e3f2c729fe22f
  $s$fData[]5 ::
    GHC.Prim.Proxy# [GHC.Types.Double]
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# [GHC.Types.Double] ->
                 IB.Client.Types.$s$fData[]6) -}
02cc3d297a8cf03c3faf16d9a36bd6d9
  $s$fData[]6 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case IB.Client.Types.$s$fData[]_w1 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17730107610217102821
                        __word 9866972337190828755
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             IB.Client.Types.$s$fData[]7 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        IB.Client.Types.$fDataBarData_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
32024e0ac7b6d8f5342f94ba967b7443
  $s$fData[]7 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   IB.Client.Types.$fDataBarData9
                   IB.Client.Types.$s$fData[]8) -}
65ffc4d449da7449e55aa01974b687dc
  $s$fData[]8 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (IB.Client.Types.$s$fData[]_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
5bac57b37a723e58659d6ffa2c8d93c4
  $s$fData[]9 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   IB.Client.Types.$s$fData[]10
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
a641819c0a31c0b93a0a2cb32a3b0671
  $s$fData[]_$s$fData[]_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c [IB.Client.Types.TagValue])
  {- Arity: 2,
     Strictness: <C(S(SLLLL)),1*C1(U(1*U,1*U,A,A,A))><L,1*C1(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   f :: forall d. Data.Data.Data d => c (t d) ->
                 case $dTypeable1
                        `cast`
                      (Data.Typeable.Internal.NTCo:Typeable[0] <* -> *>_N <t>_N)
                        (GHC.Prim.proxy#
                           @ (* -> *)
                           @ t) of wild { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case dt of wild1 {
                   DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.TagValue])
                   __word 17730107610217102821
                   -> case dt1 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.TagValue])
                        __word 9866972337190828755
                        -> GHC.Base.Just
                             @ (c [IB.Client.Types.TagValue])
                             (f @ IB.Client.Types.TagValue IB.Client.Types.$fDataTagValue)
                               `cast`
                             (<c>_R (Trans
                                         (UnivCo mkUnsafeCo nominal t GHC.Prim.Any)
                                         (UnivCo mkUnsafeCo nominal GHC.Prim.Any []) <IB.Client.Types.TagValue>_N)) } } }) -}
479b6cc13af44cd9c161f426cf23c1cb
  $s$fData[]_$s$fData[]_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c [IB.Client.Types.ScanData])
  {- Arity: 2,
     Strictness: <C(S(SLLLL)),1*C1(U(1*U,1*U,A,A,A))><L,1*C1(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   f :: forall d. Data.Data.Data d => c (t d) ->
                 case $dTypeable1
                        `cast`
                      (Data.Typeable.Internal.NTCo:Typeable[0] <* -> *>_N <t>_N)
                        (GHC.Prim.proxy#
                           @ (* -> *)
                           @ t) of wild { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case dt of wild1 {
                   DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.ScanData])
                   __word 17730107610217102821
                   -> case dt1 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.ScanData])
                        __word 9866972337190828755
                        -> GHC.Base.Just
                             @ (c [IB.Client.Types.ScanData])
                             (f @ IB.Client.Types.ScanData IB.Client.Types.$fDataScanData)
                               `cast`
                             (<c>_R (Trans
                                         (UnivCo mkUnsafeCo nominal t GHC.Prim.Any)
                                         (UnivCo mkUnsafeCo nominal GHC.Prim.Any []) <IB.Client.Types.ScanData>_N)) } } }) -}
1492cb6db628171c24f4af3e7499f75f
  $s$fData[]_$s$fData[]_$cdataCast3 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c [IB.Client.Types.BarData])
  {- Arity: 2,
     Strictness: <C(S(SLLLL)),1*C1(U(1*U,1*U,A,A,A))><L,1*C1(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> *)
                   @ (t :: * -> *)
                   $dTypeable1 :: Data.Typeable.Internal.Typeable t
                   f :: forall d. Data.Data.Data d => c (t d) ->
                 case $dTypeable1
                        `cast`
                      (Data.Typeable.Internal.NTCo:Typeable[0] <* -> *>_N <t>_N)
                        (GHC.Prim.proxy#
                           @ (* -> *)
                           @ t) of wild { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case dt of wild1 {
                   DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.BarData])
                   __word 17730107610217102821
                   -> case dt1 of wild2 {
                        DEFAULT -> GHC.Base.Nothing @ (c [IB.Client.Types.BarData])
                        __word 9866972337190828755
                        -> GHC.Base.Just
                             @ (c [IB.Client.Types.BarData])
                             (f @ IB.Client.Types.BarData IB.Client.Types.$fDataBarData)
                               `cast`
                             (<c>_R (Trans
                                         (UnivCo mkUnsafeCo nominal t GHC.Prim.Any)
                                         (UnivCo mkUnsafeCo nominal GHC.Prim.Any []) <IB.Client.Types.BarData>_N)) } } }) -}
777af3bf70dc4b28960fe649b954160a
  $s$fData[]_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
a76a5ba336a8677b91252d25d2d16a8f
  $s$fData[]_go1 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
453cee3c8b8c799c2e5890bdc553dfd5
  $s$fData[]_go2 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
2ace394de8b206df2b6f2a7ba3cac61e
  $s$fData[]_go3 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
8f6d208bedd18c4b9e9336150b0691c9
  $s$fData[]_w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   IB.Client.Types.$s$fData[]9) -}
70664212592cdc978d9e1199ab7e6249
  $s$fData[]_w2 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   IB.Client.Types.$s$fData[]21) -}
2ce2193a7f290c7a5f6a1eeaa5c69ef7
  $s$fData[]_w3 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   IB.Client.Types.$s$fData[]30) -}
c6665aa5b762ebbcdb7f1a0b0de3ce57
  $s$fData[]_w4 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   IB.Client.Types.$s$fData[]39) -}
d5b6be9bb7f64374b4c2736226064efb
  $tr4oX :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataOrder5
                   IB.Client.Types.$fDataOrder3) -}
b607ad612b8db59f496c8ed424a9aaf0
  $tr4t7 :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataContractDetails10
                   IB.Client.Types.$fDataContractDetails8) -}
2c6dc6ff1ca64b3d8290f9053386ae7c
  $tr4tG :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataContract11
                   IB.Client.Types.$fDataContract9) -}
681462de482b36eb74a8a15e1d38ad22
  $tr4u0 :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataUnderComp4
                   IB.Client.Types.$fDataUnderComp2) -}
5554778c320d3a05c87cd337def19f52
  $tr4u5 :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataComboLeg3
                   IB.Client.Types.$fDataComboLeg1) -}
b523f844c5c818c555314fb48ac487e2
  $tr4uC :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataTagValue4
                   IB.Client.Types.$fDataTagValue2) -}
4fb14c693a35b216932e6f9ff0600e29
  $tr4uG :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataOrderState3
                   IB.Client.Types.$fDataOrderState1) -}
7746bf995f354eb117a5589463aae618
  $tr4uR :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataScanData3
                   IB.Client.Types.$fDataScanData1) -}
69e5760e9370d9b84d6427c07d606b79
  $tr4uZ :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataBarData16
                   IB.Client.Types.$fDataBarData14) -}
1db0d6beb90330b57dd5c23ebc49cfe4
  $tr4uf :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataScannerSubscription5
                   IB.Client.Types.$fDataScannerSubscription3) -}
c0b4f3f45d6b55d1884dcef885cd1046
  $tr4vJ :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataOrigin8
                   IB.Client.Types.$fDataOrigin4) -}
33f7031c068fb7e1b393f4bedf65b3d5
  $tr4vN :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataFaDataType8
                   IB.Client.Types.$fDataFaDataType4) -}
7603a9ed6888beaaeb78f0cacc6d1af3
  $tr4va :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataExecutionFilter3
                   IB.Client.Types.$fDataExecutionFilter1) -}
54540b47a95a98edcb6aa9e0371baf2b
  $tr4vj :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataExecution3
                   IB.Client.Types.$fDataExecution1) -}
6bace0abf2555cde9672b82863060185
  $tr4wR :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataIBMessage50
                   IB.Client.Types.$fDataIBMessage3) -}
ba039f78da851f25638f20894599e16d
  $tr4z3 :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   IB.Client.Types.$fDataRequest52
                   IB.Client.Types.$fDataRequest3) -}
829347857b5a015b3038d62f9d6bf501
  $w$c== ::
    GHC.Prim.Int#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Int#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,1*U(U)><L,1*U(U)><L,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Prim.Int#
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww3) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww4 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Classes.$fEqDouble_$c== ww2 ww5 } } } }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $w$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Types.Int
    -> c IB.Client.Types.BarData
  {- Arity: 11,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Base.String
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Types.Double
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Types.Int ->
                 w @ GHC.Types.Int
                   @ IB.Client.Types.BarData
                   Data.Data.$fDataInt
                   (w @ GHC.Base.String
                      @ (GHC.Types.Int -> IB.Client.Types.BarData)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Types.Double
                         @ (GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.BarData)
                         Data.Data.$fDataDouble
                         (w @ GHC.Types.Int
                            @ (GHC.Types.Double
                               -> GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.BarData)
                            Data.Data.$fDataInt
                            (w @ GHC.Types.Double
                               @ (GHC.Types.Int
                                  -> GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Types.Int
                                  -> IB.Client.Types.BarData)
                               Data.Data.$fDataDouble
                               (w @ GHC.Types.Double
                                  @ (GHC.Types.Double
                                     -> GHC.Types.Int
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Types.Int
                                     -> IB.Client.Types.BarData)
                                  Data.Data.$fDataDouble
                                  (w @ GHC.Types.Double
                                     @ (GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Types.Int
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> IB.Client.Types.BarData)
                                     Data.Data.$fDataDouble
                                     (w @ GHC.Types.Double
                                        @ (GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Int
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> IB.Client.Types.BarData)
                                        Data.Data.$fDataDouble
                                        (w @ GHC.Base.String
                                           @ (GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Int
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> IB.Client.Types.BarData)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (w1
                                              @ (GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Int
                                                 -> IB.Client.Types.BarData)
                                              IB.Client.Types.BarData)
                                           ww)
                                        ww1)
                                     ww2)
                                  ww3)
                               ww4)
                            ww5)
                         ww6)
                      ww7)
                   ww8) -}
002efe166b6bb952b605830233cda850
  $w$cgfoldl1 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> c IB.Client.Types.ComboLeg
  {- Arity: 10,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Int
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Types.Int ->
                 w @ GHC.Types.Int
                   @ IB.Client.Types.ComboLeg
                   Data.Data.$fDataInt
                   (w @ GHC.Base.String
                      @ (GHC.Types.Int -> IB.Client.Types.ComboLeg)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Types.Int
                         @ (GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.ComboLeg)
                         Data.Data.$fDataInt
                         (w @ GHC.Types.Int
                            @ (GHC.Types.Int
                               -> GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.ComboLeg)
                            Data.Data.$fDataInt
                            (w @ GHC.Base.String
                               @ (GHC.Types.Int
                                  -> GHC.Types.Int
                                  -> GHC.Base.String
                                  -> GHC.Types.Int
                                  -> IB.Client.Types.ComboLeg)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (w @ GHC.Base.String
                                  @ (GHC.Base.String
                                     -> GHC.Types.Int
                                     -> GHC.Types.Int
                                     -> GHC.Base.String
                                     -> GHC.Types.Int
                                     -> IB.Client.Types.ComboLeg)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (w @ GHC.Types.Int
                                     @ (GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> GHC.Types.Int
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> IB.Client.Types.ComboLeg)
                                     Data.Data.$fDataInt
                                     (w @ GHC.Types.Int
                                        @ (GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> IB.Client.Types.ComboLeg)
                                        Data.Data.$fDataInt
                                        (w1
                                           @ (GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> IB.Client.Types.ComboLeg)
                                           IB.Client.Types.ComboLeg)
                                        ww)
                                     ww1)
                                  ww2)
                               ww3)
                            ww4)
                         ww5)
                      ww6)
                   ww7) -}
367c05871f196c1198c7c33cc84e551f
  $w$cgfoldl10 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> c IB.Client.Types.ScannerSubscription
  {- Arity: 23,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $w$cgfoldl11 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Base.String
    -> GHC.Base.String
    -> c IB.Client.Types.TagValue
  {- Arity: 4,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.TagValue
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.TagValue)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w1
                         @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.TagValue)
                         IB.Client.Types.TagValue)
                      ww)
                   ww1) -}
a21e71e5f5ea67fadee2024d47af45da
  $w$cgfoldl2 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> c IB.Client.Types.UnderComp
  {- Arity: 5,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double ->
                 w @ GHC.Types.Double
                   @ IB.Client.Types.UnderComp
                   Data.Data.$fDataDouble
                   (w @ GHC.Types.Double
                      @ (GHC.Types.Double -> IB.Client.Types.UnderComp)
                      Data.Data.$fDataDouble
                      (w @ GHC.Types.Int
                         @ (GHC.Types.Double
                            -> GHC.Types.Double -> IB.Client.Types.UnderComp)
                         Data.Data.$fDataInt
                         (w1
                            @ (GHC.Types.Int
                               -> GHC.Types.Double
                               -> GHC.Types.Double
                               -> IB.Client.Types.UnderComp)
                            IB.Client.Types.UnderComp)
                         ww)
                      ww1)
                   ww2) -}
caa528b01431966dcbe9dd33da29f1b8
  $w$cgfoldl3 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.ComboLeg]
    -> IB.Client.Types.UnderComp
    -> c IB.Client.Types.Contract
  {- Arity: 20,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Types.Bool
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: [IB.Client.Types.ComboLeg]
                   ww17 :: IB.Client.Types.UnderComp ->
                 w @ IB.Client.Types.UnderComp
                   @ IB.Client.Types.Contract
                   IB.Client.Types.$fDataUnderComp
                   (w @ [IB.Client.Types.ComboLeg]
                      @ (IB.Client.Types.UnderComp -> IB.Client.Types.Contract)
                      IB.Client.Types.$fDataContract_$s$fData[]
                      (w @ GHC.Base.String
                         @ ([IB.Client.Types.ComboLeg]
                            -> IB.Client.Types.UnderComp -> IB.Client.Types.Contract)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Base.String
                            @ (GHC.Base.String
                               -> [IB.Client.Types.ComboLeg]
                               -> IB.Client.Types.UnderComp
                               -> IB.Client.Types.Contract)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (w @ GHC.Base.String
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> [IB.Client.Types.ComboLeg]
                                  -> IB.Client.Types.UnderComp
                                  -> IB.Client.Types.Contract)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (w @ GHC.Types.Bool
                                  @ (GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> [IB.Client.Types.ComboLeg]
                                     -> IB.Client.Types.UnderComp
                                     -> IB.Client.Types.Contract)
                                  Data.Data.$fDataBool
                                  (w @ GHC.Base.String
                                     @ (GHC.Types.Bool
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> [IB.Client.Types.ComboLeg]
                                        -> IB.Client.Types.UnderComp
                                        -> IB.Client.Types.Contract)
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     (w @ GHC.Base.String
                                        @ (GHC.Base.String
                                           -> GHC.Types.Bool
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> [IB.Client.Types.ComboLeg]
                                           -> IB.Client.Types.UnderComp
                                           -> IB.Client.Types.Contract)
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        (w @ GHC.Base.String
                                           @ (GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Bool
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> [IB.Client.Types.ComboLeg]
                                              -> IB.Client.Types.UnderComp
                                              -> IB.Client.Types.Contract)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (w @ GHC.Base.String
                                              @ (GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Bool
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> [IB.Client.Types.ComboLeg]
                                                 -> IB.Client.Types.UnderComp
                                                 -> IB.Client.Types.Contract)
                                              IB.Client.Types.$fDataBarData_$s$fData[]
                                              (w @ GHC.Base.String
                                                 @ (GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Types.Bool
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> [IB.Client.Types.ComboLeg]
                                                    -> IB.Client.Types.UnderComp
                                                    -> IB.Client.Types.Contract)
                                                 IB.Client.Types.$fDataBarData_$s$fData[]
                                                 (w @ GHC.Base.String
                                                    @ (GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Types.Bool
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> [IB.Client.Types.ComboLeg]
                                                       -> IB.Client.Types.UnderComp
                                                       -> IB.Client.Types.Contract)
                                                    IB.Client.Types.$fDataBarData_$s$fData[]
                                                    (w @ GHC.Base.String
                                                       @ (GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Types.Bool
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> [IB.Client.Types.ComboLeg]
                                                          -> IB.Client.Types.UnderComp
                                                          -> IB.Client.Types.Contract)
                                                       IB.Client.Types.$fDataBarData_$s$fData[]
                                                       (w @ GHC.Types.Double
                                                          @ (GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Types.Bool
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> [IB.Client.Types.ComboLeg]
                                                             -> IB.Client.Types.UnderComp
                                                             -> IB.Client.Types.Contract)
                                                          Data.Data.$fDataDouble
                                                          (w @ GHC.Base.String
                                                             @ (GHC.Types.Double
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Bool
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> [IB.Client.Types.ComboLeg]
                                                                -> IB.Client.Types.UnderComp
                                                                -> IB.Client.Types.Contract)
                                                             IB.Client.Types.$fDataBarData_$s$fData[]
                                                             (w @ GHC.Base.String
                                                                @ (GHC.Base.String
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Types.Bool
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> [IB.Client.Types.ComboLeg]
                                                                   -> IB.Client.Types.UnderComp
                                                                   -> IB.Client.Types.Contract)
                                                                IB.Client.Types.$fDataBarData_$s$fData[]
                                                                (w @ GHC.Base.String
                                                                   @ (GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Bool
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> [IB.Client.Types.ComboLeg]
                                                                      -> IB.Client.Types.UnderComp
                                                                      -> IB.Client.Types.Contract)
                                                                   IB.Client.Types.$fDataBarData_$s$fData[]
                                                                   (w @ GHC.Types.Int
                                                                      @ (GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Types.Double
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Types.Bool
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> [IB.Client.Types.ComboLeg]
                                                                         -> IB.Client.Types.UnderComp
                                                                         -> IB.Client.Types.Contract)
                                                                      Data.Data.$fDataInt
                                                                      (w1
                                                                         @ (GHC.Types.Int
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Types.Bool
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> [IB.Client.Types.ComboLeg]
                                                                            -> IB.Client.Types.UnderComp
                                                                            -> IB.Client.Types.Contract)
                                                                         IB.Client.Types.Contract)
                                                                      ww)
                                                                   ww1)
                                                                ww2)
                                                             ww3)
                                                          ww4)
                                                       ww5)
                                                    ww6)
                                                 ww7)
                                              ww8)
                                           ww9)
                                        ww10)
                                     ww11)
                                  ww12)
                               ww13)
                            ww14)
                         ww15)
                      ww16)
                   ww17) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $w$cgfoldl4 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> c IB.Client.Types.ContractDetails
  {- Arity: 35,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $w$cgfoldl5 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> c IB.Client.Types.Execution
  {- Arity: 18,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Types.Int
                   ww8 :: GHC.Types.Int
                   ww9 :: GHC.Types.Int
                   ww10 :: GHC.Types.Int
                   ww11 :: GHC.Types.Int
                   ww12 :: GHC.Types.Double
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double ->
                 w @ GHC.Types.Double
                   @ IB.Client.Types.Execution
                   Data.Data.$fDataDouble
                   (w @ GHC.Base.String
                      @ (GHC.Types.Double -> IB.Client.Types.Execution)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Base.String
                         @ (GHC.Base.String
                            -> GHC.Types.Double -> IB.Client.Types.Execution)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Types.Double
                            @ (GHC.Base.String
                               -> GHC.Base.String
                               -> GHC.Types.Double
                               -> IB.Client.Types.Execution)
                            Data.Data.$fDataDouble
                            (w @ GHC.Types.Int
                               @ (GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Types.Double
                                  -> IB.Client.Types.Execution)
                               Data.Data.$fDataInt
                               (w @ GHC.Types.Int
                                  @ (GHC.Types.Int
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Types.Double
                                     -> IB.Client.Types.Execution)
                                  Data.Data.$fDataInt
                                  (w @ GHC.Types.Int
                                     @ (GHC.Types.Int
                                        -> GHC.Types.Int
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Types.Double
                                        -> IB.Client.Types.Execution)
                                     Data.Data.$fDataInt
                                     (w @ GHC.Types.Int
                                        @ (GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Double
                                           -> IB.Client.Types.Execution)
                                        Data.Data.$fDataInt
                                        (w @ GHC.Types.Int
                                           @ (GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Double
                                              -> IB.Client.Types.Execution)
                                           Data.Data.$fDataInt
                                           (w @ GHC.Types.Double
                                              @ (GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> IB.Client.Types.Execution)
                                              Data.Data.$fDataDouble
                                              (w @ GHC.Types.Int
                                                 @ (GHC.Types.Double
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Double
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Types.Double
                                                    -> IB.Client.Types.Execution)
                                                 Data.Data.$fDataInt
                                                 (w @ GHC.Base.String
                                                    @ (GHC.Types.Int
                                                       -> GHC.Types.Double
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Double
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Types.Double
                                                       -> IB.Client.Types.Execution)
                                                    IB.Client.Types.$fDataBarData_$s$fData[]
                                                    (w @ GHC.Base.String
                                                       @ (GHC.Base.String
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Double
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Double
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Types.Double
                                                          -> IB.Client.Types.Execution)
                                                       IB.Client.Types.$fDataBarData_$s$fData[]
                                                       (w @ GHC.Base.String
                                                          @ (GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Double
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Double
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Types.Double
                                                             -> IB.Client.Types.Execution)
                                                          IB.Client.Types.$fDataBarData_$s$fData[]
                                                          (w @ GHC.Base.String
                                                             @ (GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Double
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Double
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Double
                                                                -> IB.Client.Types.Execution)
                                                             IB.Client.Types.$fDataBarData_$s$fData[]
                                                             (w @ GHC.Base.String
                                                                @ (GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Types.Double
                                                                   -> IB.Client.Types.Execution)
                                                                IB.Client.Types.$fDataBarData_$s$fData[]
                                                                (w1
                                                                   @ (GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Double
                                                                      -> IB.Client.Types.Execution)
                                                                   IB.Client.Types.Execution)
                                                                ww)
                                                             ww1)
                                                          ww2)
                                                       ww3)
                                                    ww4)
                                                 ww5)
                                              ww6)
                                           ww7)
                                        ww8)
                                     ww9)
                                  ww10)
                               ww11)
                            ww12)
                         ww13)
                      ww14)
                   ww15) -}
c3b324c073ae953432909e17e7787685
  $w$cgfoldl6 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> c IB.Client.Types.ExecutionFilter
  {- Arity: 9,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.ExecutionFilter
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.ExecutionFilter)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Base.String
                         @ (GHC.Base.String
                            -> GHC.Base.String -> IB.Client.Types.ExecutionFilter)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Base.String
                            @ (GHC.Base.String
                               -> GHC.Base.String
                               -> GHC.Base.String
                               -> IB.Client.Types.ExecutionFilter)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (w @ GHC.Base.String
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.ExecutionFilter)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (w @ GHC.Base.String
                                  @ (GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.ExecutionFilter)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (w @ GHC.Types.Int
                                     @ (GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.ExecutionFilter)
                                     Data.Data.$fDataInt
                                     (w1
                                        @ (GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> IB.Client.Types.ExecutionFilter)
                                        IB.Client.Types.ExecutionFilter)
                                     ww)
                                  ww1)
                               ww2)
                            ww3)
                         ww4)
                      ww5)
                   ww6) -}
2cd8217c2494d18a13975b77e7704072
  $w$cgfoldl7 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> c IB.Client.Types.Order
  {- Arity: 91,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
33e8af4fb4aaa2caee0107ce817c023d
  $w$cgfoldl8 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> c IB.Client.Types.OrderState
  {- Arity: 11,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.OrderState
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.OrderState)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Types.Double
                         @ (GHC.Base.String
                            -> GHC.Base.String -> IB.Client.Types.OrderState)
                         Data.Data.$fDataDouble
                         (w @ GHC.Types.Double
                            @ (GHC.Types.Double
                               -> GHC.Base.String
                               -> GHC.Base.String
                               -> IB.Client.Types.OrderState)
                            Data.Data.$fDataDouble
                            (w @ GHC.Types.Double
                               @ (GHC.Types.Double
                                  -> GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.OrderState)
                               Data.Data.$fDataDouble
                               (w @ GHC.Base.String
                                  @ (GHC.Types.Double
                                     -> GHC.Types.Double
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.OrderState)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (w @ GHC.Base.String
                                     @ (GHC.Base.String
                                        -> GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.OrderState)
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     (w @ GHC.Base.String
                                        @ (GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> IB.Client.Types.OrderState)
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        (w @ GHC.Base.String
                                           @ (GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> IB.Client.Types.OrderState)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (w1
                                              @ (GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> IB.Client.Types.OrderState)
                                              IB.Client.Types.OrderState)
                                           ww)
                                        ww1)
                                     ww2)
                                  ww3)
                               ww4)
                            ww5)
                         ww6)
                      ww7)
                   ww8) -}
50caed14fc43fe28260a3dbedf7b8938
  $w$cgfoldl9 ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> GHC.Types.Int
    -> IB.Client.Types.ContractDetails
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> c IB.Client.Types.ScanData
  {- Arity: 8,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b
                   w1 :: forall g. g -> c g
                   ww :: GHC.Types.Int
                   ww1 :: IB.Client.Types.ContractDetails
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.ScanData
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.ScanData)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Base.String
                         @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.ScanData)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Base.String
                            @ (GHC.Base.String
                               -> GHC.Base.String -> GHC.Base.String -> IB.Client.Types.ScanData)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (w @ IB.Client.Types.ContractDetails
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.ScanData)
                               IB.Client.Types.$fDataContractDetails
                               (w @ GHC.Types.Int
                                  @ (IB.Client.Types.ContractDetails
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.ScanData)
                                  Data.Data.$fDataInt
                                  (w1
                                     @ (GHC.Types.Int
                                        -> IB.Client.Types.ContractDetails
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.ScanData)
                                     IB.Client.Types.ScanData)
                                  ww)
                               ww1)
                            ww2)
                         ww3)
                      ww4)
                   ww5) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $w$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Types.Int
    -> m IB.Client.Types.BarData
  {- Arity: 11,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Base.String
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Types.Double
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Types.Int ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       c :: m (d -> b)[OneShot]
                       x :: d[OneShot] ->
                     let {
                       lvl1279 :: m d = w1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       w
                       @ (d -> b)
                       @ b
                       c
                       (\ c' :: d -> b ->
                        GHC.Base.>>=
                          @ m
                          w
                          @ d
                          @ b
                          lvl1279
                          (\ x' :: d -> GHC.Base.return @ m w @ b (c' x')))
                 } in
                 k @ GHC.Types.Int
                   @ IB.Client.Types.BarData
                   Data.Data.$fDataInt
                   (k @ GHC.Base.String
                      @ (GHC.Types.Int -> IB.Client.Types.BarData)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (k @ GHC.Types.Double
                         @ (GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.BarData)
                         Data.Data.$fDataDouble
                         (k @ GHC.Types.Int
                            @ (GHC.Types.Double
                               -> GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.BarData)
                            Data.Data.$fDataInt
                            (k @ GHC.Types.Double
                               @ (GHC.Types.Int
                                  -> GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Types.Int
                                  -> IB.Client.Types.BarData)
                               Data.Data.$fDataDouble
                               (k @ GHC.Types.Double
                                  @ (GHC.Types.Double
                                     -> GHC.Types.Int
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Types.Int
                                     -> IB.Client.Types.BarData)
                                  Data.Data.$fDataDouble
                                  (k @ GHC.Types.Double
                                     @ (GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Types.Int
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> IB.Client.Types.BarData)
                                     Data.Data.$fDataDouble
                                     (k @ GHC.Types.Double
                                        @ (GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Int
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> IB.Client.Types.BarData)
                                        Data.Data.$fDataDouble
                                        (k @ GHC.Base.String
                                           @ (GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Int
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> IB.Client.Types.BarData)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (GHC.Base.return
                                              @ m
                                              w
                                              @ (GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Int
                                                 -> IB.Client.Types.BarData)
                                              IB.Client.Types.BarData)
                                           ww)
                                        ww1)
                                     ww2)
                                  ww3)
                               ww4)
                            ww5)
                         ww6)
                      ww7)
                   ww8) -}
002efe166b6bb952b605830233cda850
  $w$cgmapM1 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> m IB.Client.Types.ComboLeg
  {- Arity: 10,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Int
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Types.Int ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       c :: m (d -> b)[OneShot]
                       x :: d[OneShot] ->
                     let {
                       lvl1279 :: m d = w1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       w
                       @ (d -> b)
                       @ b
                       c
                       (\ c' :: d -> b ->
                        GHC.Base.>>=
                          @ m
                          w
                          @ d
                          @ b
                          lvl1279
                          (\ x' :: d -> GHC.Base.return @ m w @ b (c' x')))
                 } in
                 k @ GHC.Types.Int
                   @ IB.Client.Types.ComboLeg
                   Data.Data.$fDataInt
                   (k @ GHC.Base.String
                      @ (GHC.Types.Int -> IB.Client.Types.ComboLeg)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (k @ GHC.Types.Int
                         @ (GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.ComboLeg)
                         Data.Data.$fDataInt
                         (k @ GHC.Types.Int
                            @ (GHC.Types.Int
                               -> GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.ComboLeg)
                            Data.Data.$fDataInt
                            (k @ GHC.Base.String
                               @ (GHC.Types.Int
                                  -> GHC.Types.Int
                                  -> GHC.Base.String
                                  -> GHC.Types.Int
                                  -> IB.Client.Types.ComboLeg)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (k @ GHC.Base.String
                                  @ (GHC.Base.String
                                     -> GHC.Types.Int
                                     -> GHC.Types.Int
                                     -> GHC.Base.String
                                     -> GHC.Types.Int
                                     -> IB.Client.Types.ComboLeg)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (k @ GHC.Types.Int
                                     @ (GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> GHC.Types.Int
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> IB.Client.Types.ComboLeg)
                                     Data.Data.$fDataInt
                                     (k @ GHC.Types.Int
                                        @ (GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> IB.Client.Types.ComboLeg)
                                        Data.Data.$fDataInt
                                        (GHC.Base.return
                                           @ m
                                           w
                                           @ (GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> IB.Client.Types.ComboLeg)
                                           IB.Client.Types.ComboLeg)
                                        ww)
                                     ww1)
                                  ww2)
                               ww3)
                            ww4)
                         ww5)
                      ww6)
                   ww7) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $w$cgmapM10 ::
    GHC.Base.Monad m =>
    IB.Client.Types.Origin -> m IB.Client.Types.Origin
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><S,1*U>, Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: IB.Client.Types.Origin ->
                 case w1 of wild {
                   IB.Client.Types.CUSTOMER
                   -> GHC.Base.return
                        @ m
                        w
                        @ IB.Client.Types.Origin
                        IB.Client.Types.CUSTOMER
                   IB.Client.Types.FIRM
                   -> GHC.Base.return
                        @ m
                        w
                        @ IB.Client.Types.Origin
                        IB.Client.Types.FIRM
                   IB.Client.Types.UNKNOWN
                   -> GHC.Base.return
                        @ m
                        w
                        @ IB.Client.Types.Origin
                        IB.Client.Types.UNKNOWN }) -}
50caed14fc43fe28260a3dbedf7b8938
  $w$cgmapM11 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Types.Int
    -> IB.Client.Types.ContractDetails
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> m IB.Client.Types.ScanData
  {- Arity: 8,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Types.Int
                   ww1 :: IB.Client.Types.ContractDetails
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       c :: m (d -> b)[OneShot]
                       x :: d[OneShot] ->
                     let {
                       lvl1279 :: m d = w1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       w
                       @ (d -> b)
                       @ b
                       c
                       (\ c' :: d -> b ->
                        GHC.Base.>>=
                          @ m
                          w
                          @ d
                          @ b
                          lvl1279
                          (\ x' :: d -> GHC.Base.return @ m w @ b (c' x')))
                 } in
                 k @ GHC.Base.String
                   @ IB.Client.Types.ScanData
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (k @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.ScanData)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (k @ GHC.Base.String
                         @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.ScanData)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (k @ GHC.Base.String
                            @ (GHC.Base.String
                               -> GHC.Base.String -> GHC.Base.String -> IB.Client.Types.ScanData)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (k @ IB.Client.Types.ContractDetails
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.ScanData)
                               IB.Client.Types.$fDataContractDetails
                               (k @ GHC.Types.Int
                                  @ (IB.Client.Types.ContractDetails
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.ScanData)
                                  Data.Data.$fDataInt
                                  (GHC.Base.return
                                     @ m
                                     w
                                     @ (GHC.Types.Int
                                        -> IB.Client.Types.ContractDetails
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.ScanData)
                                     IB.Client.Types.ScanData)
                                  ww)
                               ww1)
                            ww2)
                         ww3)
                      ww4)
                   ww5) -}
367c05871f196c1198c7c33cc84e551f
  $w$cgmapM12 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> m IB.Client.Types.ScannerSubscription
  {- Arity: 23,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Types.Double
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double
                   ww16 :: GHC.Types.Double
                   ww17 :: GHC.Types.Int
                   ww18 :: GHC.Types.Int
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String ->
                 IB.Client.Types.$w$cgfoldl10
                   @ m
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: m (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    let {
                      lvl1279 :: m d = w1 @ d $dData1 x
                    } in
                    GHC.Base.>>=
                      @ m
                      w
                      @ (d -> b)
                      @ b
                      c
                      (\ c' :: d -> b ->
                       GHC.Base.>>=
                         @ m
                         w
                         @ d
                         @ b
                         lvl1279
                         (\ x' :: d -> GHC.Base.return @ m w @ b (c' x'))))
                   (\ @ g -> GHC.Base.return @ m w @ g)
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20) -}
1a67fe1f9587ca84c5ec8a5540dcc404
  $w$cgmapM13 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Base.String -> GHC.Base.String -> m IB.Client.Types.TagValue
  {- Arity: 4,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       c :: m (d -> b)[OneShot]
                       x :: d[OneShot] ->
                     let {
                       lvl1279 :: m d = w1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       w
                       @ (d -> b)
                       @ b
                       c
                       (\ c' :: d -> b ->
                        GHC.Base.>>=
                          @ m
                          w
                          @ d
                          @ b
                          lvl1279
                          (\ x' :: d -> GHC.Base.return @ m w @ b (c' x')))
                 } in
                 k @ GHC.Base.String
                   @ IB.Client.Types.TagValue
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (k @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.TagValue)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (GHC.Base.return
                         @ m
                         w
                         @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.TagValue)
                         IB.Client.Types.TagValue)
                      ww)
                   ww1) -}
caa528b01431966dcbe9dd33da29f1b8
  $w$cgmapM2 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.ComboLeg]
    -> IB.Client.Types.UnderComp
    -> m IB.Client.Types.Contract
  {- Arity: 20,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
a21e71e5f5ea67fadee2024d47af45da
  $w$cgmapM3 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> m IB.Client.Types.UnderComp
  {- Arity: 5,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       c :: m (d -> b)[OneShot]
                       x :: d[OneShot] ->
                     let {
                       lvl1279 :: m d = w1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       w
                       @ (d -> b)
                       @ b
                       c
                       (\ c' :: d -> b ->
                        GHC.Base.>>=
                          @ m
                          w
                          @ d
                          @ b
                          lvl1279
                          (\ x' :: d -> GHC.Base.return @ m w @ b (c' x')))
                 } in
                 k @ GHC.Types.Double
                   @ IB.Client.Types.UnderComp
                   Data.Data.$fDataDouble
                   (k @ GHC.Types.Double
                      @ (GHC.Types.Double -> IB.Client.Types.UnderComp)
                      Data.Data.$fDataDouble
                      (k @ GHC.Types.Int
                         @ (GHC.Types.Double
                            -> GHC.Types.Double -> IB.Client.Types.UnderComp)
                         Data.Data.$fDataInt
                         (GHC.Base.return
                            @ m
                            w
                            @ (GHC.Types.Int
                               -> GHC.Types.Double
                               -> GHC.Types.Double
                               -> IB.Client.Types.UnderComp)
                            IB.Client.Types.UnderComp)
                         ww)
                      ww1)
                   ww2) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $w$cgmapM4 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> m IB.Client.Types.ContractDetails
  {- Arity: 35,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: IB.Client.Types.Contract
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Types.Double
                   ww17 :: [IB.Client.Types.TagValue]
                   ww18 :: GHC.Base.String
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String
                   ww21 :: GHC.Base.String
                   ww22 :: GHC.Base.String
                   ww23 :: GHC.Types.Bool
                   ww24 :: GHC.Types.Bool
                   ww25 :: GHC.Types.Double
                   ww26 :: GHC.Types.Bool
                   ww27 :: GHC.Base.String
                   ww28 :: GHC.Base.String
                   ww29 :: GHC.Base.String
                   ww30 :: GHC.Base.String
                   ww31 :: GHC.Types.Bool
                   ww32 :: GHC.Base.String ->
                 IB.Client.Types.$w$cgfoldl4
                   @ m
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: m (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    let {
                      lvl1279 :: m d = w1 @ d $dData1 x
                    } in
                    GHC.Base.>>=
                      @ m
                      w
                      @ (d -> b)
                      @ b
                      c
                      (\ c' :: d -> b ->
                       GHC.Base.>>=
                         @ m
                         w
                         @ d
                         @ b
                         lvl1279
                         (\ x' :: d -> GHC.Base.return @ m w @ b (c' x'))))
                   (\ @ g -> GHC.Base.return @ m w @ g)
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $w$cgmapM5 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> m IB.Client.Types.Execution
  {- Arity: 18,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
c3b324c073ae953432909e17e7787685
  $w$cgmapM6 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> m IB.Client.Types.ExecutionFilter
  {- Arity: 9,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       c :: m (d -> b)[OneShot]
                       x :: d[OneShot] ->
                     let {
                       lvl1279 :: m d = w1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       w
                       @ (d -> b)
                       @ b
                       c
                       (\ c' :: d -> b ->
                        GHC.Base.>>=
                          @ m
                          w
                          @ d
                          @ b
                          lvl1279
                          (\ x' :: d -> GHC.Base.return @ m w @ b (c' x')))
                 } in
                 k @ GHC.Base.String
                   @ IB.Client.Types.ExecutionFilter
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (k @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.ExecutionFilter)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (k @ GHC.Base.String
                         @ (GHC.Base.String
                            -> GHC.Base.String -> IB.Client.Types.ExecutionFilter)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (k @ GHC.Base.String
                            @ (GHC.Base.String
                               -> GHC.Base.String
                               -> GHC.Base.String
                               -> IB.Client.Types.ExecutionFilter)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (k @ GHC.Base.String
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.ExecutionFilter)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (k @ GHC.Base.String
                                  @ (GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.ExecutionFilter)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (k @ GHC.Types.Int
                                     @ (GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.ExecutionFilter)
                                     Data.Data.$fDataInt
                                     (GHC.Base.return
                                        @ m
                                        w
                                        @ (GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> IB.Client.Types.ExecutionFilter)
                                        IB.Client.Types.ExecutionFilter)
                                     ww)
                                  ww1)
                               ww2)
                            ww3)
                         ww4)
                      ww5)
                   ww6) -}
a5261c783f695b8df6ea4eda8bf619ea
  $w$cgmapM7 ::
    GHC.Base.Monad m =>
    IB.Client.Types.FaDataType -> m IB.Client.Types.FaDataType
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><S,1*U>, Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: IB.Client.Types.FaDataType ->
                 case w1 of wild {
                   IB.Client.Types.GROUPS
                   -> GHC.Base.return
                        @ m
                        w
                        @ IB.Client.Types.FaDataType
                        IB.Client.Types.GROUPS
                   IB.Client.Types.PROFILES
                   -> GHC.Base.return
                        @ m
                        w
                        @ IB.Client.Types.FaDataType
                        IB.Client.Types.PROFILES
                   IB.Client.Types.ALIASES
                   -> GHC.Base.return
                        @ m
                        w
                        @ IB.Client.Types.FaDataType
                        IB.Client.Types.ALIASES }) -}
2cd8217c2494d18a13975b77e7704072
  $w$cgmapM8 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> m IB.Client.Types.Order
  {- Arity: 91,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
33e8af4fb4aaa2caee0107ce817c023d
  $w$cgmapM9 ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> m IB.Client.Types.OrderState
  {- Arity: 11,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: forall d. Data.Data.Data d => d -> m d
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       c :: m (d -> b)[OneShot]
                       x :: d[OneShot] ->
                     let {
                       lvl1279 :: m d = w1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       w
                       @ (d -> b)
                       @ b
                       c
                       (\ c' :: d -> b ->
                        GHC.Base.>>=
                          @ m
                          w
                          @ d
                          @ b
                          lvl1279
                          (\ x' :: d -> GHC.Base.return @ m w @ b (c' x')))
                 } in
                 k @ GHC.Base.String
                   @ IB.Client.Types.OrderState
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (k @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.OrderState)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (k @ GHC.Types.Double
                         @ (GHC.Base.String
                            -> GHC.Base.String -> IB.Client.Types.OrderState)
                         Data.Data.$fDataDouble
                         (k @ GHC.Types.Double
                            @ (GHC.Types.Double
                               -> GHC.Base.String
                               -> GHC.Base.String
                               -> IB.Client.Types.OrderState)
                            Data.Data.$fDataDouble
                            (k @ GHC.Types.Double
                               @ (GHC.Types.Double
                                  -> GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.OrderState)
                               Data.Data.$fDataDouble
                               (k @ GHC.Base.String
                                  @ (GHC.Types.Double
                                     -> GHC.Types.Double
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.OrderState)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (k @ GHC.Base.String
                                     @ (GHC.Base.String
                                        -> GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.OrderState)
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     (k @ GHC.Base.String
                                        @ (GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> IB.Client.Types.OrderState)
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        (k @ GHC.Base.String
                                           @ (GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> IB.Client.Types.OrderState)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (GHC.Base.return
                                              @ m
                                              w
                                              @ (GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> IB.Client.Types.OrderState)
                                              IB.Client.Types.OrderState)
                                           ww)
                                        ww1)
                                     ww2)
                                  ww3)
                               ww4)
                            ww5)
                         ww6)
                      ww7)
                   ww8) -}
a5261c783f695b8df6ea4eda8bf619ea
  $w$cgmapMo ::
    GHC.Base.MonadPlus m =>
    IB.Client.Types.FaDataType -> m IB.Client.Types.FaDataType
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,1*U>, Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: IB.Client.Types.FaDataType ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m w
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.FaDataType
                   = GHC.Base.mzero @ m w @ IB.Client.Types.FaDataType
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                   @ IB.Client.Types.FaDataType
                   (case w1 of wild {
                      IB.Client.Types.GROUPS
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                           IB.Client.Types.$fDataFaDataType3
                      IB.Client.Types.PROFILES
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                           IB.Client.Types.$fDataFaDataType2
                      IB.Client.Types.ALIASES
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                           IB.Client.Types.$fDataFaDataType1 })
                   (\ ds :: (IB.Client.Types.FaDataType, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.FaDataType
                           x' } })) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $w$cgmapMo1 ::
    GHC.Base.MonadPlus m =>
    IB.Client.Types.Origin -> m IB.Client.Types.Origin
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,1*U>, Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: IB.Client.Types.Origin ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m w
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.Origin
                   = GHC.Base.mzero @ m w @ IB.Client.Types.Origin
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.Origin, GHC.Types.Bool)
                   @ IB.Client.Types.Origin
                   (case w1 of wild {
                      IB.Client.Types.CUSTOMER
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.Origin, GHC.Types.Bool)
                           IB.Client.Types.$fDataOrigin3
                      IB.Client.Types.FIRM
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.Origin, GHC.Types.Bool)
                           IB.Client.Types.$fDataOrigin2
                      IB.Client.Types.UNKNOWN
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.Origin, GHC.Types.Bool)
                           IB.Client.Types.$fDataOrigin1 })
                   (\ ds :: (IB.Client.Types.Origin, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return @ m $dMonad @ IB.Client.Types.Origin x' } })) -}
a5261c783f695b8df6ea4eda8bf619ea
  $w$cgmapMp ::
    GHC.Base.MonadPlus m =>
    IB.Client.Types.FaDataType -> m IB.Client.Types.FaDataType
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,1*U>, Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: IB.Client.Types.FaDataType ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m w
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.FaDataType
                   = GHC.Base.mzero @ m w @ IB.Client.Types.FaDataType
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                   @ IB.Client.Types.FaDataType
                   (case w1 of wild {
                      IB.Client.Types.GROUPS
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                           IB.Client.Types.$fDataFaDataType3
                      IB.Client.Types.PROFILES
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                           IB.Client.Types.$fDataFaDataType2
                      IB.Client.Types.ALIASES
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.FaDataType, GHC.Types.Bool)
                           IB.Client.Types.$fDataFaDataType1 })
                   (\ ds :: (IB.Client.Types.FaDataType, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ IB.Client.Types.FaDataType
                           x' } })) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $w$cgmapMp1 ::
    GHC.Base.MonadPlus m =>
    IB.Client.Types.Origin -> m IB.Client.Types.Origin
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSLL),U(A,1*U,U,A)><L,1*U>, Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   w :: GHC.Base.MonadPlus m
                   w1 :: IB.Client.Types.Origin ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m w
                 } in
                 let {
                   lvl1279 :: m IB.Client.Types.Origin
                   = GHC.Base.mzero @ m w @ IB.Client.Types.Origin
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (IB.Client.Types.Origin, GHC.Types.Bool)
                   @ IB.Client.Types.Origin
                   (case w1 of wild {
                      IB.Client.Types.CUSTOMER
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.Origin, GHC.Types.Bool)
                           IB.Client.Types.$fDataOrigin3
                      IB.Client.Types.FIRM
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.Origin, GHC.Types.Bool)
                           IB.Client.Types.$fDataOrigin2
                      IB.Client.Types.UNKNOWN
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (IB.Client.Types.Origin, GHC.Types.Bool)
                           IB.Client.Types.$fDataOrigin1 })
                   (\ ds :: (IB.Client.Types.Origin, GHC.Types.Bool) ->
                    case ds of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl1279
                      GHC.Types.True
                      -> GHC.Base.return @ m $dMonad @ IB.Client.Types.Origin x' } })) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $w$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> [u]
  {- Arity: 34,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   w :: forall d. Data.Data.Data d => d -> u
                   ww :: IB.Client.Types.Contract
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Types.Double
                   ww17 :: [IB.Client.Types.TagValue]
                   ww18 :: GHC.Base.String
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String
                   ww21 :: GHC.Base.String
                   ww22 :: GHC.Base.String
                   ww23 :: GHC.Types.Bool
                   ww24 :: GHC.Types.Bool
                   ww25 :: GHC.Types.Double
                   ww26 :: GHC.Types.Bool
                   ww27 :: GHC.Base.String
                   ww28 :: GHC.Base.String
                   ww29 :: GHC.Base.String
                   ww30 :: GHC.Base.String
                   ww31 :: GHC.Types.Bool
                   ww32 :: GHC.Base.String ->
                 (IB.Client.Types.$w$cgfoldl4
                    @ (Data.Data.Qr [u])
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr [u] (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: [u] ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <d -> b>_P)
                       (GHC.Types.: @ u (w @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr [u] (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails3 @ u)
                      `cast`
                    (forall g.
                     <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <g>_P))
                    ww
                    ww1
                    ww2
                    ww3
                    ww4
                    ww5
                    ww6
                    ww7
                    ww8
                    ww9
                    ww10
                    ww11
                    ww12
                    ww13
                    ww14
                    ww15
                    ww16
                    ww17
                    ww18
                    ww19
                    ww20
                    ww21
                    ww22
                    ww23
                    ww24
                    ww25
                    ww26
                    ww27
                    ww28
                    ww29
                    ww30
                    ww31
                    ww32)
                   `cast`
                 (Data.Data.NTCo:Qr[0]
                      <*>_N <[u]>_R <IB.Client.Types.ContractDetails>_P)
                   (GHC.Types.[] @ u)) -}
69682d72f8f2e888ef7cc3120a175567
  $w$cgmapQ1 ::
    (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> [u]
  {- Arity: 90,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
367c05871f196c1198c7c33cc84e551f
  $w$cgmapQ2 ::
    (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> [u]
  {- Arity: 22,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   w :: forall d. Data.Data.Data d => d -> u
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Types.Double
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double
                   ww16 :: GHC.Types.Double
                   ww17 :: GHC.Types.Int
                   ww18 :: GHC.Types.Int
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String ->
                 (IB.Client.Types.$w$cgfoldl10
                    @ (Data.Data.Qr [u])
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr [u] (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: [u] ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <d -> b>_P)
                       (GHC.Types.: @ u (w @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr [u] (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails3 @ u)
                      `cast`
                    (forall g.
                     <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <[u]>_R <g>_P))
                    ww
                    ww1
                    ww2
                    ww3
                    ww4
                    ww5
                    ww6
                    ww7
                    ww8
                    ww9
                    ww10
                    ww11
                    ww12
                    ww13
                    ww14
                    ww15
                    ww16
                    ww17
                    ww18
                    ww19
                    ww20)
                   `cast`
                 (Data.Data.NTCo:Qr[0]
                      <*>_N <[u]>_R <IB.Client.Types.ScannerSubscription>_P)
                   (GHC.Types.[] @ u)) -}
927bae3bf3b05d494c79001c1d75faf9
  $w$cgmapQi ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Types.Int
    -> u
  {- Arity: 11,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Types.Double
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Types.Int ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1
                   1 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww2
                   2 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww3
                   3 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww4
                   4 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww5
                   5 -> w @ GHC.Types.Int Data.Data.$fDataInt ww6
                   6 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww7
                   7
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww8
                   8 -> w @ GHC.Types.Int Data.Data.$fDataInt ww9 }) -}
2d46dcb5ea5c394c8fc341480aa01f7b
  $w$cgmapQi1 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> u
  {- Arity: 10,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Types.Int
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Types.Int ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0 -> w @ GHC.Types.Int Data.Data.$fDataInt ww1
                   1 -> w @ GHC.Types.Int Data.Data.$fDataInt ww2
                   2
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3
                   3
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4
                   4 -> w @ GHC.Types.Int Data.Data.$fDataInt ww5
                   5 -> w @ GHC.Types.Int Data.Data.$fDataInt ww6
                   6
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww7
                   7 -> w @ GHC.Types.Int Data.Data.$fDataInt ww8 }) -}
367c05871f196c1198c7c33cc84e551f
  $w$cgmapQi10 ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> u
  {- Arity: 23,
     Strictness: <L,U(U)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Types.Double
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double
                   ww16 :: GHC.Types.Double
                   ww17 :: GHC.Types.Int
                   ww18 :: GHC.Types.Int
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String ->
                 case IB.Client.Types.$w$cgfoldl10
                        @ (Data.Data.Qi u)
                        (\ @ d
                           @ b
                           $dData1 :: Data.Data.Data d
                           ds :: Data.Data.Qi u (d -> b)[OneShot]
                           a43 :: d[OneShot] ->
                         case ds of wild { Data.Data.Qi i' q ->
                         Data.Data.Qi
                           @ *
                           @ u
                           @ b
                           (case i' of wild1 { GHC.Types.I# x ->
                            GHC.Types.I# (GHC.Prim.+# x 1) })
                           (case w of wild1 { GHC.Types.I# x1 ->
                            case i' of wild2 { GHC.Types.I# y ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.==# x1 y) of wild3 {
                              GHC.Types.False -> q
                              GHC.Types.True -> GHC.Base.Just @ u (w1 @ d $dData1 a43) } } }) })
                        (IB.Client.Types.$fDataContractDetails1 @ u)
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww17
                        ww18
                        ww19
                        ww20 of wild { Data.Data.Qi ds q ->
                 Data.Maybe.fromJust @ u q }) -}
c22191b355a4c17c7855bc8866867c26
  $w$cgmapQi11 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Base.String
    -> GHC.Base.String
    -> u
  {- Arity: 4, Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1
                   1
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww2 }) -}
503314d18506ab8f2384092972bd5f22
  $w$cgmapQi2 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.ComboLeg]
    -> IB.Client.Types.UnderComp
    -> u
  {- Arity: 20,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Types.Bool
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Base.String
                   ww17 :: [IB.Client.Types.ComboLeg]
                   ww18 :: IB.Client.Types.UnderComp ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0 -> w @ GHC.Types.Int Data.Data.$fDataInt ww1
                   1
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2
                   2
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3
                   3
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4
                   4 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww5
                   5
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww6
                   6
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww7
                   7
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww8
                   8
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww9
                   9
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww10
                   10
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww11
                   11
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww12
                   12 -> w @ GHC.Types.Bool Data.Data.$fDataBool ww13
                   13
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww14
                   14
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww15
                   15
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww16
                   16
                   -> w @ [IB.Client.Types.ComboLeg]
                        IB.Client.Types.$fDataContract_$s$fData[]
                        ww17
                   17
                   -> w @ IB.Client.Types.UnderComp
                        IB.Client.Types.$fDataUnderComp
                        ww18 }) -}
478363030aaf10a090660284a60d7edb
  $w$cgmapQi3 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> u
  {- Arity: 5,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Types.Double ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0 -> w @ GHC.Types.Int Data.Data.$fDataInt ww1
                   1 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww2
                   2 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww3 }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $w$cgmapQi4 ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> u
  {- Arity: 35,
     Strictness: <L,U(U)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   w :: GHC.Types.Int
                   w1 :: forall d. Data.Data.Data d => d -> u
                   ww :: IB.Client.Types.Contract
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Types.Double
                   ww17 :: [IB.Client.Types.TagValue]
                   ww18 :: GHC.Base.String
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String
                   ww21 :: GHC.Base.String
                   ww22 :: GHC.Base.String
                   ww23 :: GHC.Types.Bool
                   ww24 :: GHC.Types.Bool
                   ww25 :: GHC.Types.Double
                   ww26 :: GHC.Types.Bool
                   ww27 :: GHC.Base.String
                   ww28 :: GHC.Base.String
                   ww29 :: GHC.Base.String
                   ww30 :: GHC.Base.String
                   ww31 :: GHC.Types.Bool
                   ww32 :: GHC.Base.String ->
                 case IB.Client.Types.$w$cgfoldl4
                        @ (Data.Data.Qi u)
                        (\ @ d
                           @ b
                           $dData1 :: Data.Data.Data d
                           ds :: Data.Data.Qi u (d -> b)[OneShot]
                           a43 :: d[OneShot] ->
                         case ds of wild { Data.Data.Qi i' q ->
                         Data.Data.Qi
                           @ *
                           @ u
                           @ b
                           (case i' of wild1 { GHC.Types.I# x ->
                            GHC.Types.I# (GHC.Prim.+# x 1) })
                           (case w of wild1 { GHC.Types.I# x1 ->
                            case i' of wild2 { GHC.Types.I# y ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.==# x1 y) of wild3 {
                              GHC.Types.False -> q
                              GHC.Types.True -> GHC.Base.Just @ u (w1 @ d $dData1 a43) } } }) })
                        (IB.Client.Types.$fDataContractDetails1 @ u)
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww17
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32 of wild { Data.Data.Qi ds q ->
                 Data.Maybe.fromJust @ u q }) -}
1eacff91e2fa019fb5a278fc94427470
  $w$cgmapQi5 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> u
  {- Arity: 18,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Types.Int
                   ww9 :: GHC.Types.Int
                   ww10 :: GHC.Types.Int
                   ww11 :: GHC.Types.Int
                   ww12 :: GHC.Types.Int
                   ww13 :: GHC.Types.Double
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Types.Double ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1
                   1
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2
                   2
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3
                   3
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4
                   4
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww5
                   5 -> w @ GHC.Types.Int Data.Data.$fDataInt ww6
                   6 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww7
                   7 -> w @ GHC.Types.Int Data.Data.$fDataInt ww8
                   8 -> w @ GHC.Types.Int Data.Data.$fDataInt ww9
                   9 -> w @ GHC.Types.Int Data.Data.$fDataInt ww10
                   10 -> w @ GHC.Types.Int Data.Data.$fDataInt ww11
                   11 -> w @ GHC.Types.Int Data.Data.$fDataInt ww12
                   12 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww13
                   13
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww14
                   14
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww15
                   15 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww16 }) -}
f5986def55db9fbd8b7b39a11759fa5e
  $w$cgmapQi6 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> u
  {- Arity: 9,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Base.String ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0 -> w @ GHC.Types.Int Data.Data.$fDataInt ww1
                   1
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2
                   2
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3
                   3
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4
                   4
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww5
                   5
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww6
                   6
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww7 }) -}
fa4ee08aa60978380c52d9e6bd96d6fd
  $w$cgmapQi7 ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> u
  {- Arity: 91,
     Strictness: <L,U(U)><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
fd93df092fca0a126324b657a528571c
  $w$cgmapQi8 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> u
  {- Arity: 11,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1
                   1
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2
                   2
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3
                   3
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4
                   4 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww5
                   5 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww6
                   6 -> w @ GHC.Types.Double Data.Data.$fDataDouble ww7
                   7
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww8
                   8
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww9 }) -}
605637737e4dbc10f868752f57e6a1b8
  $w$cgmapQi9 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> GHC.Types.Int
    -> IB.Client.Types.ContractDetails
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> u
  {- Arity: 8,
     Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   ww :: GHC.Prim.Int#
                   w :: forall d. Data.Data.Data d => d -> u
                   ww1 :: GHC.Types.Int
                   ww2 :: IB.Client.Types.ContractDetails
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String ->
                 case ww of wild {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0 -> w @ GHC.Types.Int Data.Data.$fDataInt ww1
                   1
                   -> w @ IB.Client.Types.ContractDetails
                        IB.Client.Types.$fDataContractDetails
                        ww2
                   2
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3
                   3
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4
                   4
                   -> w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww5
                   5
                   -> w @ GHC.Base.String
                        IB.Client.Types.$fDataBarData_$s$fData[]
                        ww6 }) -}
0266ba7cb14eaaad973cf5375bf5445d
  $w$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Types.Int
    -> r
  {- Arity: 12,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Base.String
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Types.Double
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Types.Int ->
                 w (w (w (w (w (w (w (w (w w1
                                           (w2
                                              @ GHC.Base.String
                                              IB.Client.Types.$fDataBarData_$s$fData[]
                                              ww))
                                        (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww1))
                                     (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww2))
                                  (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww3))
                               (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww4))
                            (w2 @ GHC.Types.Int Data.Data.$fDataInt ww5))
                         (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww6))
                      (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww7))
                   (w2 @ GHC.Types.Int Data.Data.$fDataInt ww8)) -}
82b28915ccc1b0e9a4dc6443f2f25c80
  $w$cgmapQl1 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> r
  {- Arity: 11,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Int
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Types.Int ->
                 w (w (w (w (w (w (w (w w1
                                        (w2 @ GHC.Types.Int Data.Data.$fDataInt ww))
                                     (w2 @ GHC.Types.Int Data.Data.$fDataInt ww1))
                                  (w2
                                     @ GHC.Base.String
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     ww2))
                               (w2
                                  @ GHC.Base.String
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  ww3))
                            (w2 @ GHC.Types.Int Data.Data.$fDataInt ww4))
                         (w2 @ GHC.Types.Int Data.Data.$fDataInt ww5))
                      (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww6))
                   (w2 @ GHC.Types.Int Data.Data.$fDataInt ww7)) -}
65be734e558e96919c68b68f2d19b2fa
  $w$cgmapQl2 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> r
  {- Arity: 6,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double ->
                 w (w (w w1 (w2 @ GHC.Types.Int Data.Data.$fDataInt ww))
                      (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww1))
                   (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww2)) -}
08700035623b1aab4ea6d9f4bd793338
  $w$cgmapQl3 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.ComboLeg]
    -> IB.Client.Types.UnderComp
    -> r
  {- Arity: 21,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
b52fa12e8a72c3b3cd393bba028b9933
  $w$cgmapQl4 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> r
  {- Arity: 19,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
d1c951c7d24d678150832ddde6fca8ec
  $w$cgmapQl5 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 10,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String ->
                 w (w (w (w (w (w (w w1 (w2 @ GHC.Types.Int Data.Data.$fDataInt ww))
                                  (w2
                                     @ GHC.Base.String
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     ww1))
                               (w2
                                  @ GHC.Base.String
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  ww2))
                            (w2
                               @ GHC.Base.String
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               ww3))
                         (w2
                            @ GHC.Base.String
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            ww4))
                      (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww5))
                   (w2
                      @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww6)) -}
ec14060f9282cfe035e8794cc0592158
  $w$cgmapQl6 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 12,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String ->
                 w (w (w (w (w (w (w (w (w w1
                                           (w2
                                              @ GHC.Base.String
                                              IB.Client.Types.$fDataBarData_$s$fData[]
                                              ww))
                                        (w2
                                           @ GHC.Base.String
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           ww1))
                                     (w2
                                        @ GHC.Base.String
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        ww2))
                                  (w2
                                     @ GHC.Base.String
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     ww3))
                               (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww4))
                            (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww5))
                         (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww6))
                      (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww7))
                   (w2
                      @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww8)) -}
3e3dde62f3170627f44cafb880200d98
  $w$cgmapQl7 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> IB.Client.Types.ContractDetails
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 9,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: IB.Client.Types.ContractDetails
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String ->
                 w (w (w (w (w (w w1 (w2 @ GHC.Types.Int Data.Data.$fDataInt ww))
                               (w2
                                  @ IB.Client.Types.ContractDetails
                                  IB.Client.Types.$fDataContractDetails
                                  ww1))
                            (w2
                               @ GHC.Base.String
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               ww2))
                         (w2
                            @ GHC.Base.String
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            ww3))
                      (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww4))
                   (w2
                      @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww5)) -}
7f82caafda8aab68f060e41d3889bbf5
  $w$cgmapQl8 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 5,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String ->
                 w (w w1
                      (w2 @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww))
                   (w2
                      @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww1)) -}
bdd293c0eb094b4cb478e47b45ddad34
  $w$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Types.Int
    -> r
  {- Arity: 12,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Base.String
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Types.Double
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Types.Int ->
                 w (w2
                      @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww)
                   (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww1)
                      (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww2)
                         (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww3)
                            (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww4)
                               (w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww5)
                                  (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww6)
                                     (w (w2
                                           @ GHC.Base.String
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           ww7)
                                        (w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww8)
                                           w1))))))))) -}
04de53db7619ccc701ec2f35be065e30
  $w$cgmapQr1 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> r
  {- Arity: 11,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Int
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Types.Int ->
                 w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww)
                   (w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww1)
                      (w (w2
                            @ GHC.Base.String
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            ww2)
                         (w (w2
                               @ GHC.Base.String
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               ww3)
                            (w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww4)
                               (w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww5)
                                  (w (w2
                                        @ GHC.Base.String
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        ww6)
                                     (w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww7) w1)))))))) -}
367c05871f196c1198c7c33cc84e551f
  $w$cgmapQr10 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 24,
     Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Types.Double
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double
                   ww16 :: GHC.Types.Double
                   ww17 :: GHC.Types.Int
                   ww18 :: GHC.Types.Int
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String ->
                 (IB.Client.Types.$w$cgfoldl10
                    @ (Data.Data.Qr r)
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr r (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: r ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <r>_R <d -> b>_P)
                       (w (w2 @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr r (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails4 @ r)
                      `cast`
                    (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <g>_P))
                    ww
                    ww1
                    ww2
                    ww3
                    ww4
                    ww5
                    ww6
                    ww7
                    ww8
                    ww9
                    ww10
                    ww11
                    ww12
                    ww13
                    ww14
                    ww15
                    ww16
                    ww17
                    ww18
                    ww19
                    ww20)
                   `cast`
                 (Data.Data.NTCo:Qr[0]
                      <*>_N <r>_R <IB.Client.Types.ScannerSubscription>_P)
                   w1) -}
b8b3e9baa1189659bd5f88b555932c8d
  $w$cgmapQr11 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 5,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String ->
                 w (w2
                      @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww)
                   (w (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww1)
                      w1)) -}
9b7939d7b4ccc7bec9ecc707f280e678
  $w$cgmapQr2 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> r
  {- Arity: 6,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Types.Double ->
                 w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww)
                   (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww1)
                      (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww2) w1))) -}
d34f4ce71c9d7cf59c5b1b629c71a01a
  $w$cgmapQr3 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.ComboLeg]
    -> IB.Client.Types.UnderComp
    -> r
  {- Arity: 21,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $w$cgmapQr4 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> r
  {- Arity: 36,
     Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: IB.Client.Types.Contract
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Types.Double
                   ww17 :: [IB.Client.Types.TagValue]
                   ww18 :: GHC.Base.String
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String
                   ww21 :: GHC.Base.String
                   ww22 :: GHC.Base.String
                   ww23 :: GHC.Types.Bool
                   ww24 :: GHC.Types.Bool
                   ww25 :: GHC.Types.Double
                   ww26 :: GHC.Types.Bool
                   ww27 :: GHC.Base.String
                   ww28 :: GHC.Base.String
                   ww29 :: GHC.Base.String
                   ww30 :: GHC.Base.String
                   ww31 :: GHC.Types.Bool
                   ww32 :: GHC.Base.String ->
                 (IB.Client.Types.$w$cgfoldl4
                    @ (Data.Data.Qr r)
                    (\ @ d
                       @ b
                       $dData1 :: Data.Data.Data d
                       ds :: Data.Data.Qr r (d -> b)[OneShot]
                       x :: d[OneShot]
                       r1 :: r ->
                     ds `cast` (Data.Data.NTCo:Qr[0] <*>_N <r>_R <d -> b>_P)
                       (w (w2 @ d $dData1 x) r1))
                      `cast`
                    (forall d b.
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr r (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <b>_P))
                    (IB.Client.Types.$fDataContractDetails4 @ r)
                      `cast`
                    (forall g. <g>_R ->_R Sym (Data.Data.NTCo:Qr[0] <*>_N <r>_R <g>_P))
                    ww
                    ww1
                    ww2
                    ww3
                    ww4
                    ww5
                    ww6
                    ww7
                    ww8
                    ww9
                    ww10
                    ww11
                    ww12
                    ww13
                    ww14
                    ww15
                    ww16
                    ww17
                    ww18
                    ww19
                    ww20
                    ww21
                    ww22
                    ww23
                    ww24
                    ww25
                    ww26
                    ww27
                    ww28
                    ww29
                    ww30
                    ww31
                    ww32)
                   `cast`
                 (Data.Data.NTCo:Qr[0]
                      <*>_N <r>_R <IB.Client.Types.ContractDetails>_P)
                   w1) -}
00161a92fdeee27c9738395d697d3a09
  $w$cgmapQr5 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> r
  {- Arity: 19,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
ced1a1dabbcca1106d022f6281408cf2
  $w$cgmapQr6 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 10,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String ->
                 w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww)
                   (w (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww1)
                      (w (w2
                            @ GHC.Base.String
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            ww2)
                         (w (w2
                               @ GHC.Base.String
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               ww3)
                            (w (w2
                                  @ GHC.Base.String
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  ww4)
                               (w (w2
                                     @ GHC.Base.String
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     ww5)
                                  (w (w2
                                        @ GHC.Base.String
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        ww6)
                                     w1))))))) -}
ec13fabe1d28b18fceba06d3011693a4
  $w$cgmapQr7 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> r
  {- Arity: 92,
     Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
72459b8616dbf96b727b87c96a3a9e48
  $w$cgmapQr8 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 12,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String ->
                 w (w2
                      @ GHC.Base.String
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      ww)
                   (w (w2
                         @ GHC.Base.String
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         ww1)
                      (w (w2
                            @ GHC.Base.String
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            ww2)
                         (w (w2
                               @ GHC.Base.String
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               ww3)
                            (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww4)
                               (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww5)
                                  (w (w2 @ GHC.Types.Double Data.Data.$fDataDouble ww6)
                                     (w (w2
                                           @ GHC.Base.String
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           ww7)
                                        (w (w2
                                              @ GHC.Base.String
                                              IB.Client.Types.$fDataBarData_$s$fData[]
                                              ww8)
                                           w1))))))))) -}
4d36e48c965c0cbd7de102b8545d393c
  $w$cgmapQr9 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> IB.Client.Types.ContractDetails
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> r
  {- Arity: 9,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r' -> r -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: IB.Client.Types.ContractDetails
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Base.String ->
                 w (w2 @ GHC.Types.Int Data.Data.$fDataInt ww)
                   (w (w2
                         @ IB.Client.Types.ContractDetails
                         IB.Client.Types.$fDataContractDetails
                         ww1)
                      (w (w2
                            @ GHC.Base.String
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            ww2)
                         (w (w2
                               @ GHC.Base.String
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               ww3)
                            (w (w2
                                  @ GHC.Base.String
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  ww4)
                               (w (w2
                                     @ GHC.Base.String
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     ww5)
                                  w1)))))) -}
caa528b01431966dcbe9dd33da29f1b8
  $w$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.ComboLeg]
    -> IB.Client.Types.UnderComp
    -> IB.Client.Types.Contract
  {- Arity: 19,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ w :: forall b. Data.Data.Data b => b -> b
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Base.String
                   ww6 :: GHC.Base.String
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Types.Bool
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: [IB.Client.Types.ComboLeg]
                   ww17 :: IB.Client.Types.UnderComp ->
                 IB.Client.Types.Contract
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww4)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww5)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww6)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww7)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww8)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww9)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww10)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww11)
                   (w @ GHC.Types.Bool Data.Data.$fDataBool ww12)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww13)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww14)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww15)
                   (w @ [IB.Client.Types.ComboLeg]
                      IB.Client.Types.$fDataContract_$s$fData[]
                      ww16)
                   (w @ IB.Client.Types.UnderComp
                      IB.Client.Types.$fDataUnderComp
                      ww17)) -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $w$cgmapT1 ::
    (forall b. Data.Data.Data b => b -> b)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> IB.Client.Types.Execution
  {- Arity: 17,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ w :: forall b. Data.Data.Data b => b -> b
                   ww :: GHC.Base.String
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Double
                   ww7 :: GHC.Types.Int
                   ww8 :: GHC.Types.Int
                   ww9 :: GHC.Types.Int
                   ww10 :: GHC.Types.Int
                   ww11 :: GHC.Types.Int
                   ww12 :: GHC.Types.Double
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double ->
                 IB.Client.Types.Execution
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww1)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww2)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww3)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww4)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww5)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww6)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww7)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww8)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww9)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww10)
                   (w @ GHC.Types.Int Data.Data.$fDataInt ww11)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww12)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww13)
                   (w @ GHC.Base.String IB.Client.Types.$fDataBarData_$s$fData[] ww14)
                   (w @ GHC.Types.Double Data.Data.$fDataDouble ww15)) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  $w$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.BarData
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Types.Int
                   @ IB.Client.Types.BarData
                   Data.Data.$fDataInt
                   (w @ GHC.Base.String
                      @ (GHC.Types.Int -> IB.Client.Types.BarData)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Types.Double
                         @ (GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.BarData)
                         Data.Data.$fDataDouble
                         (w @ GHC.Types.Int
                            @ (GHC.Types.Double
                               -> GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.BarData)
                            Data.Data.$fDataInt
                            (w @ GHC.Types.Double
                               @ (GHC.Types.Int
                                  -> GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Types.Int
                                  -> IB.Client.Types.BarData)
                               Data.Data.$fDataDouble
                               (w @ GHC.Types.Double
                                  @ (GHC.Types.Double
                                     -> GHC.Types.Int
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Types.Int
                                     -> IB.Client.Types.BarData)
                                  Data.Data.$fDataDouble
                                  (w @ GHC.Types.Double
                                     @ (GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Types.Int
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> IB.Client.Types.BarData)
                                     Data.Data.$fDataDouble
                                     (w @ GHC.Types.Double
                                        @ (GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Int
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> IB.Client.Types.BarData)
                                        Data.Data.$fDataDouble
                                        (w @ GHC.Base.String
                                           @ (GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Int
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> IB.Client.Types.BarData)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (w1
                                              @ (GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Int
                                                 -> IB.Client.Types.BarData)
                                              IB.Client.Types.BarData)))))))))) -}
002efe166b6bb952b605830233cda850
  $w$cgunfold1 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.ComboLeg
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Types.Int
                   @ IB.Client.Types.ComboLeg
                   Data.Data.$fDataInt
                   (w @ GHC.Base.String
                      @ (GHC.Types.Int -> IB.Client.Types.ComboLeg)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Types.Int
                         @ (GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.ComboLeg)
                         Data.Data.$fDataInt
                         (w @ GHC.Types.Int
                            @ (GHC.Types.Int
                               -> GHC.Base.String -> GHC.Types.Int -> IB.Client.Types.ComboLeg)
                            Data.Data.$fDataInt
                            (w @ GHC.Base.String
                               @ (GHC.Types.Int
                                  -> GHC.Types.Int
                                  -> GHC.Base.String
                                  -> GHC.Types.Int
                                  -> IB.Client.Types.ComboLeg)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (w @ GHC.Base.String
                                  @ (GHC.Base.String
                                     -> GHC.Types.Int
                                     -> GHC.Types.Int
                                     -> GHC.Base.String
                                     -> GHC.Types.Int
                                     -> IB.Client.Types.ComboLeg)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (w @ GHC.Types.Int
                                     @ (GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> GHC.Types.Int
                                        -> GHC.Base.String
                                        -> GHC.Types.Int
                                        -> IB.Client.Types.ComboLeg)
                                     Data.Data.$fDataInt
                                     (w @ GHC.Types.Int
                                        @ (GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Types.Int
                                           -> IB.Client.Types.ComboLeg)
                                        Data.Data.$fDataInt
                                        (w1
                                           @ (GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Base.String
                                              -> GHC.Types.Int
                                              -> IB.Client.Types.ComboLeg)
                                           IB.Client.Types.ComboLeg))))))))) -}
33e8af4fb4aaa2caee0107ce817c023d
  $w$cgunfold10 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.OrderState
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.OrderState
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.OrderState)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Types.Double
                         @ (GHC.Base.String
                            -> GHC.Base.String -> IB.Client.Types.OrderState)
                         Data.Data.$fDataDouble
                         (w @ GHC.Types.Double
                            @ (GHC.Types.Double
                               -> GHC.Base.String
                               -> GHC.Base.String
                               -> IB.Client.Types.OrderState)
                            Data.Data.$fDataDouble
                            (w @ GHC.Types.Double
                               @ (GHC.Types.Double
                                  -> GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.OrderState)
                               Data.Data.$fDataDouble
                               (w @ GHC.Base.String
                                  @ (GHC.Types.Double
                                     -> GHC.Types.Double
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.OrderState)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (w @ GHC.Base.String
                                     @ (GHC.Base.String
                                        -> GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.OrderState)
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     (w @ GHC.Base.String
                                        @ (GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> IB.Client.Types.OrderState)
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        (w @ GHC.Base.String
                                           @ (GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> IB.Client.Types.OrderState)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (w1
                                              @ (GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> IB.Client.Types.OrderState)
                                              IB.Client.Types.OrderState)))))))))) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $w$cgunfold11 ::
    (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c IB.Client.Types.Origin
  {- Arity: 3, Strictness: <C(S),1*C1(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall r. r -> c r
                   ww :: Data.Data.ConstrRep
                   ww1 :: Data.Data.DataType ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1
                      ret_ty (c IB.Client.Types.Origin)
                      of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds ->
                      case ds of ds1 {
                        DEFAULT -> w @ IB.Client.Types.Origin IB.Client.Types.UNKNOWN
                        1 -> w @ IB.Client.Types.Origin IB.Client.Types.CUSTOMER
                        2 -> w @ IB.Client.Types.Origin IB.Client.Types.FIRM } } }) -}
fc280c903efa72a25e79a60326413a98
  $w$cgunfold12 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c IB.Client.Types.Request
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0] -}
50caed14fc43fe28260a3dbedf7b8938
  $w$cgunfold13 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.ScanData
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.ScanData
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.ScanData)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Base.String
                         @ (GHC.Base.String -> GHC.Base.String -> IB.Client.Types.ScanData)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Base.String
                            @ (GHC.Base.String
                               -> GHC.Base.String -> GHC.Base.String -> IB.Client.Types.ScanData)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (w @ IB.Client.Types.ContractDetails
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.ScanData)
                               IB.Client.Types.$fDataContractDetails
                               (w @ GHC.Types.Int
                                  @ (IB.Client.Types.ContractDetails
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.ScanData)
                                  Data.Data.$fDataInt
                                  (w1
                                     @ (GHC.Types.Int
                                        -> IB.Client.Types.ContractDetails
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.ScanData)
                                     IB.Client.Types.ScanData))))))) -}
367c05871f196c1198c7c33cc84e551f
  $w$cgunfold14 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.ScannerSubscription
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.ScannerSubscription
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.ScannerSubscription)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Types.Int
                         @ (GHC.Base.String
                            -> GHC.Base.String -> IB.Client.Types.ScannerSubscription)
                         Data.Data.$fDataInt
                         (w @ GHC.Types.Int
                            @ (GHC.Types.Int
                               -> GHC.Base.String
                               -> GHC.Base.String
                               -> IB.Client.Types.ScannerSubscription)
                            Data.Data.$fDataInt
                            (w @ GHC.Types.Double
                               @ (GHC.Types.Int
                                  -> GHC.Types.Int
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.ScannerSubscription)
                               Data.Data.$fDataDouble
                               (w @ GHC.Types.Double
                                  @ (GHC.Types.Double
                                     -> GHC.Types.Int
                                     -> GHC.Types.Int
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.ScannerSubscription)
                                  Data.Data.$fDataDouble
                                  (w @ GHC.Base.String
                                     @ (GHC.Types.Double
                                        -> GHC.Types.Double
                                        -> GHC.Types.Int
                                        -> GHC.Types.Int
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.ScannerSubscription)
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     (w @ GHC.Base.String
                                        @ (GHC.Base.String
                                           -> GHC.Types.Double
                                           -> GHC.Types.Double
                                           -> GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> IB.Client.Types.ScannerSubscription)
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        (w @ GHC.Base.String
                                           @ (GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Double
                                              -> GHC.Types.Double
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> IB.Client.Types.ScannerSubscription)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (w @ GHC.Base.String
                                              @ (GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Double
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> IB.Client.Types.ScannerSubscription)
                                              IB.Client.Types.$fDataBarData_$s$fData[]
                                              (w @ GHC.Base.String
                                                 @ (GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Types.Double
                                                    -> GHC.Types.Double
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> IB.Client.Types.ScannerSubscription)
                                                 IB.Client.Types.$fDataBarData_$s$fData[]
                                                 (w @ GHC.Base.String
                                                    @ (GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Types.Double
                                                       -> GHC.Types.Double
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> IB.Client.Types.ScannerSubscription)
                                                    IB.Client.Types.$fDataBarData_$s$fData[]
                                                    (w @ GHC.Types.Double
                                                       @ (GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Types.Double
                                                          -> GHC.Types.Double
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> IB.Client.Types.ScannerSubscription)
                                                       Data.Data.$fDataDouble
                                                       (w @ GHC.Types.Double
                                                          @ (GHC.Types.Double
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Types.Double
                                                             -> GHC.Types.Double
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> IB.Client.Types.ScannerSubscription)
                                                          Data.Data.$fDataDouble
                                                          (w @ GHC.Types.Int
                                                             @ (GHC.Types.Double
                                                                -> GHC.Types.Double
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Double
                                                                -> GHC.Types.Double
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> IB.Client.Types.ScannerSubscription)
                                                             Data.Data.$fDataInt
                                                             (w @ GHC.Types.Double
                                                                @ (GHC.Types.Int
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> IB.Client.Types.ScannerSubscription)
                                                                Data.Data.$fDataDouble
                                                                (w @ GHC.Types.Double
                                                                   @ (GHC.Types.Double
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> IB.Client.Types.ScannerSubscription)
                                                                   Data.Data.$fDataDouble
                                                                   (w @ GHC.Base.String
                                                                      @ (GHC.Types.Double
                                                                         -> GHC.Types.Double
                                                                         -> GHC.Types.Int
                                                                         -> GHC.Types.Double
                                                                         -> GHC.Types.Double
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Types.Double
                                                                         -> GHC.Types.Double
                                                                         -> GHC.Types.Int
                                                                         -> GHC.Types.Int
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> IB.Client.Types.ScannerSubscription)
                                                                      IB.Client.Types.$fDataBarData_$s$fData[]
                                                                      (w @ GHC.Base.String
                                                                         @ (GHC.Base.String
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Types.Int
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Types.Int
                                                                            -> GHC.Types.Int
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> IB.Client.Types.ScannerSubscription)
                                                                         IB.Client.Types.$fDataBarData_$s$fData[]
                                                                         (w @ GHC.Base.String
                                                                            @ (GHC.Base.String
                                                                               -> GHC.Base.String
                                                                               -> GHC.Types.Double
                                                                               -> GHC.Types.Double
                                                                               -> GHC.Types.Int
                                                                               -> GHC.Types.Double
                                                                               -> GHC.Types.Double
                                                                               -> GHC.Base.String
                                                                               -> GHC.Base.String
                                                                               -> GHC.Base.String
                                                                               -> GHC.Base.String
                                                                               -> GHC.Base.String
                                                                               -> GHC.Base.String
                                                                               -> GHC.Types.Double
                                                                               -> GHC.Types.Double
                                                                               -> GHC.Types.Int
                                                                               -> GHC.Types.Int
                                                                               -> GHC.Base.String
                                                                               -> GHC.Base.String
                                                                               -> IB.Client.Types.ScannerSubscription)
                                                                            IB.Client.Types.$fDataBarData_$s$fData[]
                                                                            (w @ GHC.Types.Int
                                                                               @ (GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Types.Double
                                                                                  -> GHC.Types.Double
                                                                                  -> GHC.Types.Int
                                                                                  -> GHC.Types.Double
                                                                                  -> GHC.Types.Double
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Types.Double
                                                                                  -> GHC.Types.Double
                                                                                  -> GHC.Types.Int
                                                                                  -> GHC.Types.Int
                                                                                  -> GHC.Base.String
                                                                                  -> GHC.Base.String
                                                                                  -> IB.Client.Types.ScannerSubscription)
                                                                               Data.Data.$fDataInt
                                                                               (w1
                                                                                  @ (GHC.Types.Int
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Types.Double
                                                                                     -> GHC.Types.Double
                                                                                     -> GHC.Types.Int
                                                                                     -> GHC.Types.Double
                                                                                     -> GHC.Types.Double
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Types.Double
                                                                                     -> GHC.Types.Double
                                                                                     -> GHC.Types.Int
                                                                                     -> GHC.Types.Int
                                                                                     -> GHC.Base.String
                                                                                     -> GHC.Base.String
                                                                                     -> IB.Client.Types.ScannerSubscription)
                                                                                  IB.Client.Types.ScannerSubscription)))))))))))))))))))))) -}
a21e71e5f5ea67fadee2024d47af45da
  $w$cgunfold2 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.UnderComp
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Types.Double
                   @ IB.Client.Types.UnderComp
                   Data.Data.$fDataDouble
                   (w @ GHC.Types.Double
                      @ (GHC.Types.Double -> IB.Client.Types.UnderComp)
                      Data.Data.$fDataDouble
                      (w @ GHC.Types.Int
                         @ (GHC.Types.Double
                            -> GHC.Types.Double -> IB.Client.Types.UnderComp)
                         Data.Data.$fDataInt
                         (w1
                            @ (GHC.Types.Int
                               -> GHC.Types.Double
                               -> GHC.Types.Double
                               -> IB.Client.Types.UnderComp)
                            IB.Client.Types.UnderComp)))) -}
caa528b01431966dcbe9dd33da29f1b8
  $w$cgunfold3 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.Contract
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ IB.Client.Types.UnderComp
                   @ IB.Client.Types.Contract
                   IB.Client.Types.$fDataUnderComp
                   (w @ [IB.Client.Types.ComboLeg]
                      @ (IB.Client.Types.UnderComp -> IB.Client.Types.Contract)
                      IB.Client.Types.$fDataContract_$s$fData[]
                      (w @ GHC.Base.String
                         @ ([IB.Client.Types.ComboLeg]
                            -> IB.Client.Types.UnderComp -> IB.Client.Types.Contract)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Base.String
                            @ (GHC.Base.String
                               -> [IB.Client.Types.ComboLeg]
                               -> IB.Client.Types.UnderComp
                               -> IB.Client.Types.Contract)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (w @ GHC.Base.String
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> [IB.Client.Types.ComboLeg]
                                  -> IB.Client.Types.UnderComp
                                  -> IB.Client.Types.Contract)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (w @ GHC.Types.Bool
                                  @ (GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> [IB.Client.Types.ComboLeg]
                                     -> IB.Client.Types.UnderComp
                                     -> IB.Client.Types.Contract)
                                  Data.Data.$fDataBool
                                  (w @ GHC.Base.String
                                     @ (GHC.Types.Bool
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> [IB.Client.Types.ComboLeg]
                                        -> IB.Client.Types.UnderComp
                                        -> IB.Client.Types.Contract)
                                     IB.Client.Types.$fDataBarData_$s$fData[]
                                     (w @ GHC.Base.String
                                        @ (GHC.Base.String
                                           -> GHC.Types.Bool
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> [IB.Client.Types.ComboLeg]
                                           -> IB.Client.Types.UnderComp
                                           -> IB.Client.Types.Contract)
                                        IB.Client.Types.$fDataBarData_$s$fData[]
                                        (w @ GHC.Base.String
                                           @ (GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Bool
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> [IB.Client.Types.ComboLeg]
                                              -> IB.Client.Types.UnderComp
                                              -> IB.Client.Types.Contract)
                                           IB.Client.Types.$fDataBarData_$s$fData[]
                                           (w @ GHC.Base.String
                                              @ (GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Bool
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> [IB.Client.Types.ComboLeg]
                                                 -> IB.Client.Types.UnderComp
                                                 -> IB.Client.Types.Contract)
                                              IB.Client.Types.$fDataBarData_$s$fData[]
                                              (w @ GHC.Base.String
                                                 @ (GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Types.Bool
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> [IB.Client.Types.ComboLeg]
                                                    -> IB.Client.Types.UnderComp
                                                    -> IB.Client.Types.Contract)
                                                 IB.Client.Types.$fDataBarData_$s$fData[]
                                                 (w @ GHC.Base.String
                                                    @ (GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Types.Bool
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> [IB.Client.Types.ComboLeg]
                                                       -> IB.Client.Types.UnderComp
                                                       -> IB.Client.Types.Contract)
                                                    IB.Client.Types.$fDataBarData_$s$fData[]
                                                    (w @ GHC.Base.String
                                                       @ (GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Types.Bool
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> [IB.Client.Types.ComboLeg]
                                                          -> IB.Client.Types.UnderComp
                                                          -> IB.Client.Types.Contract)
                                                       IB.Client.Types.$fDataBarData_$s$fData[]
                                                       (w @ GHC.Types.Double
                                                          @ (GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Types.Bool
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> [IB.Client.Types.ComboLeg]
                                                             -> IB.Client.Types.UnderComp
                                                             -> IB.Client.Types.Contract)
                                                          Data.Data.$fDataDouble
                                                          (w @ GHC.Base.String
                                                             @ (GHC.Types.Double
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Bool
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> [IB.Client.Types.ComboLeg]
                                                                -> IB.Client.Types.UnderComp
                                                                -> IB.Client.Types.Contract)
                                                             IB.Client.Types.$fDataBarData_$s$fData[]
                                                             (w @ GHC.Base.String
                                                                @ (GHC.Base.String
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Types.Bool
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> [IB.Client.Types.ComboLeg]
                                                                   -> IB.Client.Types.UnderComp
                                                                   -> IB.Client.Types.Contract)
                                                                IB.Client.Types.$fDataBarData_$s$fData[]
                                                                (w @ GHC.Base.String
                                                                   @ (GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Bool
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> [IB.Client.Types.ComboLeg]
                                                                      -> IB.Client.Types.UnderComp
                                                                      -> IB.Client.Types.Contract)
                                                                   IB.Client.Types.$fDataBarData_$s$fData[]
                                                                   (w @ GHC.Types.Int
                                                                      @ (GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Types.Double
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Types.Bool
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> GHC.Base.String
                                                                         -> [IB.Client.Types.ComboLeg]
                                                                         -> IB.Client.Types.UnderComp
                                                                         -> IB.Client.Types.Contract)
                                                                      Data.Data.$fDataInt
                                                                      (w1
                                                                         @ (GHC.Types.Int
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Types.Double
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Types.Bool
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> GHC.Base.String
                                                                            -> [IB.Client.Types.ComboLeg]
                                                                            -> IB.Client.Types.UnderComp
                                                                            -> IB.Client.Types.Contract)
                                                                         IB.Client.Types.Contract))))))))))))))))))) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $w$cgunfold4 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.ContractDetails
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0] -}
3b02c4e89a95d7c4e80c16de6e482ca5
  $w$cgunfold5 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.Execution
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Types.Double
                   @ IB.Client.Types.Execution
                   Data.Data.$fDataDouble
                   (w @ GHC.Base.String
                      @ (GHC.Types.Double -> IB.Client.Types.Execution)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Base.String
                         @ (GHC.Base.String
                            -> GHC.Types.Double -> IB.Client.Types.Execution)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Types.Double
                            @ (GHC.Base.String
                               -> GHC.Base.String
                               -> GHC.Types.Double
                               -> IB.Client.Types.Execution)
                            Data.Data.$fDataDouble
                            (w @ GHC.Types.Int
                               @ (GHC.Types.Double
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Types.Double
                                  -> IB.Client.Types.Execution)
                               Data.Data.$fDataInt
                               (w @ GHC.Types.Int
                                  @ (GHC.Types.Int
                                     -> GHC.Types.Double
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Types.Double
                                     -> IB.Client.Types.Execution)
                                  Data.Data.$fDataInt
                                  (w @ GHC.Types.Int
                                     @ (GHC.Types.Int
                                        -> GHC.Types.Int
                                        -> GHC.Types.Double
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Types.Double
                                        -> IB.Client.Types.Execution)
                                     Data.Data.$fDataInt
                                     (w @ GHC.Types.Int
                                        @ (GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Types.Int
                                           -> GHC.Types.Double
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Types.Double
                                           -> IB.Client.Types.Execution)
                                        Data.Data.$fDataInt
                                        (w @ GHC.Types.Int
                                           @ (GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Types.Int
                                              -> GHC.Types.Double
                                              -> GHC.Base.String
                                              -> GHC.Base.String
                                              -> GHC.Types.Double
                                              -> IB.Client.Types.Execution)
                                           Data.Data.$fDataInt
                                           (w @ GHC.Types.Double
                                              @ (GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Int
                                                 -> GHC.Types.Double
                                                 -> GHC.Base.String
                                                 -> GHC.Base.String
                                                 -> GHC.Types.Double
                                                 -> IB.Client.Types.Execution)
                                              Data.Data.$fDataDouble
                                              (w @ GHC.Types.Int
                                                 @ (GHC.Types.Double
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Int
                                                    -> GHC.Types.Double
                                                    -> GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> GHC.Types.Double
                                                    -> IB.Client.Types.Execution)
                                                 Data.Data.$fDataInt
                                                 (w @ GHC.Base.String
                                                    @ (GHC.Types.Int
                                                       -> GHC.Types.Double
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Int
                                                       -> GHC.Types.Double
                                                       -> GHC.Base.String
                                                       -> GHC.Base.String
                                                       -> GHC.Types.Double
                                                       -> IB.Client.Types.Execution)
                                                    IB.Client.Types.$fDataBarData_$s$fData[]
                                                    (w @ GHC.Base.String
                                                       @ (GHC.Base.String
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Double
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Int
                                                          -> GHC.Types.Double
                                                          -> GHC.Base.String
                                                          -> GHC.Base.String
                                                          -> GHC.Types.Double
                                                          -> IB.Client.Types.Execution)
                                                       IB.Client.Types.$fDataBarData_$s$fData[]
                                                       (w @ GHC.Base.String
                                                          @ (GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Double
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Int
                                                             -> GHC.Types.Double
                                                             -> GHC.Base.String
                                                             -> GHC.Base.String
                                                             -> GHC.Types.Double
                                                             -> IB.Client.Types.Execution)
                                                          IB.Client.Types.$fDataBarData_$s$fData[]
                                                          (w @ GHC.Base.String
                                                             @ (GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Double
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Int
                                                                -> GHC.Types.Double
                                                                -> GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Double
                                                                -> IB.Client.Types.Execution)
                                                             IB.Client.Types.$fDataBarData_$s$fData[]
                                                             (w @ GHC.Base.String
                                                                @ (GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Int
                                                                   -> GHC.Types.Double
                                                                   -> GHC.Base.String
                                                                   -> GHC.Base.String
                                                                   -> GHC.Types.Double
                                                                   -> IB.Client.Types.Execution)
                                                                IB.Client.Types.$fDataBarData_$s$fData[]
                                                                (w1
                                                                   @ (GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Int
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Base.String
                                                                      -> GHC.Base.String
                                                                      -> GHC.Types.Double
                                                                      -> IB.Client.Types.Execution)
                                                                   IB.Client.Types.Execution))))))))))))))))) -}
c3b324c073ae953432909e17e7787685
  $w$cgunfold6 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.ExecutionFilter
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall b r. Data.Data.Data b => c (b -> r) -> c r
                   w1 :: forall r. r -> c r ->
                 w @ GHC.Base.String
                   @ IB.Client.Types.ExecutionFilter
                   IB.Client.Types.$fDataBarData_$s$fData[]
                   (w @ GHC.Base.String
                      @ (GHC.Base.String -> IB.Client.Types.ExecutionFilter)
                      IB.Client.Types.$fDataBarData_$s$fData[]
                      (w @ GHC.Base.String
                         @ (GHC.Base.String
                            -> GHC.Base.String -> IB.Client.Types.ExecutionFilter)
                         IB.Client.Types.$fDataBarData_$s$fData[]
                         (w @ GHC.Base.String
                            @ (GHC.Base.String
                               -> GHC.Base.String
                               -> GHC.Base.String
                               -> IB.Client.Types.ExecutionFilter)
                            IB.Client.Types.$fDataBarData_$s$fData[]
                            (w @ GHC.Base.String
                               @ (GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> GHC.Base.String
                                  -> IB.Client.Types.ExecutionFilter)
                               IB.Client.Types.$fDataBarData_$s$fData[]
                               (w @ GHC.Base.String
                                  @ (GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> GHC.Base.String
                                     -> IB.Client.Types.ExecutionFilter)
                                  IB.Client.Types.$fDataBarData_$s$fData[]
                                  (w @ GHC.Types.Int
                                     @ (GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> GHC.Base.String
                                        -> IB.Client.Types.ExecutionFilter)
                                     Data.Data.$fDataInt
                                     (w1
                                        @ (GHC.Types.Int
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> GHC.Base.String
                                           -> IB.Client.Types.ExecutionFilter)
                                        IB.Client.Types.ExecutionFilter)))))))) -}
a5261c783f695b8df6ea4eda8bf619ea
  $w$cgunfold7 ::
    (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c IB.Client.Types.FaDataType
  {- Arity: 3, Strictness: <C(S),1*C1(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   w :: forall r. r -> c r
                   ww :: Data.Data.ConstrRep
                   ww1 :: Data.Data.DataType ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1
                      ret_ty (c IB.Client.Types.FaDataType)
                      of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds ->
                      case ds of ds1 {
                        DEFAULT -> w @ IB.Client.Types.FaDataType IB.Client.Types.ALIASES
                        1 -> w @ IB.Client.Types.FaDataType IB.Client.Types.GROUPS
                        2
                        -> w @ IB.Client.Types.FaDataType
                             IB.Client.Types.PROFILES } } }) -}
c3159178f505ab80d8d762e3ddc31b28
  $w$cgunfold8 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c IB.Client.Types.IBMessage
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0] -}
2cd8217c2494d18a13975b77e7704072
  $w$cgunfold9 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> c IB.Client.Types.Order
  {- Arity: 2, Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)>,
     Inline: [0] -}
1bfafdce07b6721cde9ee13042277929
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 10,
     Strictness: <L,U><L,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U(U)><L,1*U(U)><L,U><L,U(U)>,
     Inline: [0] -}
5305851156ce77d79f74330c497e0b0a
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 10,
     Strictness: <L,U><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U(U)><L,U>,
     Inline: [0] -}
9a55f6472816ac6892bd5796070b18ec
  $w$cshowsPrec10 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> IB.Client.Types.ContractDetails
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <L,U><L,U(U)><L,1*U(1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U))),U,1*U(U),U,U,U(U),U(U),U,U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U,U,1*U(U),U,U,U,U,U,U,U)><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
9cea8704f491e43d68bcc521560928d5
  $w$cshowsPrec11 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <L,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   w :: GHC.Base.String ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       IB.Client.Types.$fShowTagValue6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          IB.Client.Types.$fShowTagValue5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      IB.Client.Types.$fShowTagValue4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         IB.Client.Types.$fShowTagValue3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     IB.Client.Types.$fShowTagValue2
                                                     x))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w)) }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $w$cshowsPrec12 ::
    IB.Client.Types.TickType -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
1c4f116d00173716a78811eb26a20d66
  $w$cshowsPrec13 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Types.Double ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww4 { GHC.Types.D# ww5 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble_$sshowFloat
                       IB.Client.Types.$fDataContractDetails2
                       ww5 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww3 of ww4 { GHC.Types.D# ww5 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble_$sshowFloat
                       IB.Client.Types.$fDataContractDetails2
                       ww5 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       IB.Client.Types.$fShowUnderComp5
                       (GHC.Base.++
                          @ GHC.Types.Char
                          IB.Client.Types.$fShowUnderComp4
                          (case ww1 of ww4 { GHC.Types.I# ww5 ->
                           case GHC.Show.$wshowSignedInt
                                  0
                                  ww5
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     IB.Client.Types.$fShowTagValue4
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        IB.Client.Types.$fShowUnderComp3
                                        (f (GHC.Base.++
                                              @ GHC.Types.Char
                                              IB.Client.Types.$fShowTagValue4
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 IB.Client.Types.$fShowUnderComp2
                                                 (f1
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       IB.Client.Types.$fShowTagValue2
                                                       x))))))) of ww6 { (#,#) ww7 ww8 ->
                           GHC.Types.: @ GHC.Types.Char ww7 ww8 } }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ x :: GHC.Base.String ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x)) }) -}
32aedf1e0948b7f618bfc7d0d0c60c14
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.ComboLeg]
    -> IB.Client.Types.UnderComp
    -> GHC.Show.ShowS
  {- Arity: 19,
     Strictness: <L,U><L,U(U)><L,U><L,U><L,U><L,1*U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,1*U(U(U),1*U(U),1*U(U))>,
     Inline: [0] -}
ac0461caa770c3f7c88c26019564580e
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Show.ShowS
  {- Arity: 34,
     Strictness: <L,U><L,1*U(U(U),U,U,U,1*U(U),U,U,U,U,U,U,U,U,U,U,U,U,1*U(U(U),1*U(U),1*U(U)))><L,U><L,1*U(U)><L,U><L,U><L,U(U)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,1*U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,1*U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
527ba8883f7de6e5833db6ae0cfee759
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 17,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U(U)><L,1*U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,1*U(U)><L,U><L,U><L,1*U(U)>,
     Inline: [0] -}
a5261c783f695b8df6ea4eda8bf619ea
  $w$cshowsPrec5 ::
    IB.Client.Types.FaDataType -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: IB.Client.Types.FaDataType
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   IB.Client.Types.GROUPS
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        IB.Client.Types.$fReadFaDataType15
                        w1
                   IB.Client.Types.PROFILES
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        IB.Client.Types.$fReadFaDataType12
                        w1
                   IB.Client.Types.ALIASES
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        IB.Client.Types.$fReadFaDataType9
                        w1 }) -}
b28d7eb203762c305be42fe6a07d96f9
  $w$cshowsPrec6 ::
    IB.Client.Types.NewsBulletin -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: IB.Client.Types.NewsBulletin
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   IB.Client.Types.NEWS_MSG
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        IB.Client.Types.$fReadNewsBulletin15
                        w1
                   IB.Client.Types.EXCHANGE_AVAIL_MSG
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        IB.Client.Types.$fReadNewsBulletin12
                        w1
                   IB.Client.Types.EXCHANGE_UNAVAIL_MSG
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        IB.Client.Types.$fReadNewsBulletin9
                        w1 }) -}
08b0bd483a3dc13c8ee21617161887a5
  $w$cshowsPrec7 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Show.ShowS
  {- Arity: 90,
     Strictness: <L,U><L,U(U)><L,U(U)><L,U(U)><L,U><L,U(U)><L,U><L,1*U(U)><L,1*U(U)><L,U><L,U><L,U><L,U><L,U(U)><L,U><L,U><L,U(U)><L,U><L,U><L,U(U)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U(U)><L,1*U(U)><L,U><L,1*U(U)><L,1*U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U(U)><L,U><L,U(U)><L,1*U(U)><L,U><L,U><L,1*U(U)><L,U><L,U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U(U)><L,U><L,1*U(U)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U(U)><L,U><L,U><L,U(U)><L,1*U(U)><L,U(U)><L,U(U)><L,U(U)><L,1*U(U)><L,1*U(U)><L,U(U)><L,1*U(U)><L,U><L,U(U)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
7322f90db790dcc20c09926560457994
  $w$cshowsPrec8 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Show.ShowS
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U><L,U>,
     Inline: [0] -}
9a9807ead72a50e08c3a5bd68baac3eb
  $w$cshowsPrec9 ::
    IB.Client.Types.Origin -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: IB.Client.Types.Origin w1 :: GHC.Base.String ->
                 case w of wild {
                   IB.Client.Types.CUSTOMER
                   -> GHC.Base.++ @ GHC.Types.Char IB.Client.Types.$fReadOrigin15 w1
                   IB.Client.Types.FIRM
                   -> GHC.Base.++ @ GHC.Types.Char IB.Client.Types.$fReadOrigin12 w1
                   IB.Client.Types.UNKNOWN
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        IB.Client.Types.$fReadOrigin9
                        w1 }) -}
a5261c783f695b8df6ea4eda8bf619ea
  $w$ctoEnum :: GHC.Prim.Int# -> IB.Client.Types.FaDataType
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False -> IB.Client.Types.$fEnumFaDataType1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 2) of wild1 {
                        GHC.Types.False -> IB.Client.Types.$fEnumFaDataType1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ IB.Client.Types.FaDataType ww } }) -}
b28d7eb203762c305be42fe6a07d96f9
  $w$ctoEnum1 :: GHC.Prim.Int# -> IB.Client.Types.NewsBulletin
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False -> IB.Client.Types.$fEnumNewsBulletin1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 2) of wild1 {
                        GHC.Types.False -> IB.Client.Types.$fEnumNewsBulletin1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ IB.Client.Types.NewsBulletin ww } }) -}
9a9807ead72a50e08c3a5bd68baac3eb
  $w$ctoEnum2 :: GHC.Prim.Int# -> IB.Client.Types.Origin
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False -> IB.Client.Types.$fEnumOrigin1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 2) of wild1 {
                        GHC.Types.False -> IB.Client.Types.$fEnumOrigin1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ IB.Client.Types.Origin ww } }) -}
8e5a0e560d8d27d8c8ebcb59255ada75
  $w$ctoEnum3 :: GHC.Prim.Int# -> IB.Client.Types.TickType
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False -> IB.Client.Types.$fEnumTickType1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 34) of wild1 {
                        GHC.Types.False -> IB.Client.Types.$fEnumTickType1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ IB.Client.Types.TickType ww } }) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $wa ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> Data.Data.CONST r IB.Client.Types.ContractDetails
  {- Arity: 36,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: IB.Client.Types.Contract
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Types.Double
                   ww17 :: [IB.Client.Types.TagValue]
                   ww18 :: GHC.Base.String
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String
                   ww21 :: GHC.Base.String
                   ww22 :: GHC.Base.String
                   ww23 :: GHC.Types.Bool
                   ww24 :: GHC.Types.Bool
                   ww25 :: GHC.Types.Double
                   ww26 :: GHC.Types.Bool
                   ww27 :: GHC.Base.String
                   ww28 :: GHC.Base.String
                   ww29 :: GHC.Base.String
                   ww30 :: GHC.Base.String
                   ww31 :: GHC.Types.Bool
                   ww32 :: GHC.Base.String ->
                 IB.Client.Types.$w$cgfoldl4
                   @ (Data.Data.CONST r)
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: Data.Data.CONST r (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    w c `cast` (Data.Data.NTCo:CONST[0] <*>_N <r>_R <d -> b>_P)
                      (w2 @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.CONST r (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <b>_P))
                   (\ @ g1 ds :: g1[OneShot] -> w1)
                     `cast`
                   (forall g1.
                    <g1>_R ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <g1>_P))
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32) -}
10f6fb809b84f2ec2702b33c5d1f7e37
  $wa1 ::
    (forall b. Data.Data.Data b => b -> b)
    -> IB.Client.Types.Contract
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> [IB.Client.Types.TagValue]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> Data.Data.ID IB.Client.Types.ContractDetails
  {- Arity: 34,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ w :: forall b. Data.Data.Data b => b -> b
                   ww :: IB.Client.Types.Contract
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Double
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.String
                   ww5 :: GHC.Types.Int
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Base.String
                   ww8 :: GHC.Base.String
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Base.String
                   ww16 :: GHC.Types.Double
                   ww17 :: [IB.Client.Types.TagValue]
                   ww18 :: GHC.Base.String
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String
                   ww21 :: GHC.Base.String
                   ww22 :: GHC.Base.String
                   ww23 :: GHC.Types.Bool
                   ww24 :: GHC.Types.Bool
                   ww25 :: GHC.Types.Double
                   ww26 :: GHC.Types.Bool
                   ww27 :: GHC.Base.String
                   ww28 :: GHC.Base.String
                   ww29 :: GHC.Base.String
                   ww30 :: GHC.Base.String
                   ww31 :: GHC.Types.Bool
                   ww32 :: GHC.Base.String ->
                 IB.Client.Types.$w$cgfoldl4
                   @ Data.Data.ID
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      ds :: Data.Data.ID (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    ds `cast` (Data.Data.NTCo:ID[0] <d -> b>_R) (w @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.ID (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:ID[0] <b>_R))
                   IB.Client.Types.$fDataContractDetails7
                     `cast`
                   (forall g. <g>_R ->_R Sym (Data.Data.NTCo:ID[0] <g>_R))
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32) -}
2cd8217c2494d18a13975b77e7704072
  $wa2 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Data.CONST r IB.Client.Types.Order
  {- Arity: 92,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
2cd8217c2494d18a13975b77e7704072
  $wa3 ::
    (forall b. Data.Data.Data b => b -> b)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> IB.Client.Types.Origin
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [IB.Client.Types.TagValue]
    -> [IB.Client.Types.TagValue]
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Data.ID IB.Client.Types.Order
  {- Arity: 90,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
367c05871f196c1198c7c33cc84e551f
  $wa4 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> Data.Data.CONST r IB.Client.Types.ScannerSubscription
  {- Arity: 24,
     Strictness: <C(C(S)),C(C1(U))><L,1*U><L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   @ r'
                   w :: r -> r' -> r
                   w1 :: r
                   w2 :: forall d. Data.Data.Data d => d -> r'
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Types.Double
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double
                   ww16 :: GHC.Types.Double
                   ww17 :: GHC.Types.Int
                   ww18 :: GHC.Types.Int
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String ->
                 IB.Client.Types.$w$cgfoldl10
                   @ (Data.Data.CONST r)
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      c :: Data.Data.CONST r (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    w c `cast` (Data.Data.NTCo:CONST[0] <*>_N <r>_R <d -> b>_P)
                      (w2 @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.CONST r (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <b>_P))
                   (\ @ g1 ds :: g1[OneShot] -> w1)
                     `cast`
                   (forall g1.
                    <g1>_R ->_R Sym (Data.Data.NTCo:CONST[0] <*>_N <r>_R <g1>_P))
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20) -}
367c05871f196c1198c7c33cc84e551f
  $wa5 ::
    (forall b. Data.Data.Data b => b -> b)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> Data.Data.ID IB.Client.Types.ScannerSubscription
  {- Arity: 22,
     Strictness: <L,C(C1(U))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ w :: forall b. Data.Data.Data b => b -> b
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Types.Double
                   ww5 :: GHC.Types.Double
                   ww6 :: GHC.Types.Int
                   ww7 :: GHC.Types.Double
                   ww8 :: GHC.Types.Double
                   ww9 :: GHC.Base.String
                   ww10 :: GHC.Base.String
                   ww11 :: GHC.Base.String
                   ww12 :: GHC.Base.String
                   ww13 :: GHC.Base.String
                   ww14 :: GHC.Base.String
                   ww15 :: GHC.Types.Double
                   ww16 :: GHC.Types.Double
                   ww17 :: GHC.Types.Int
                   ww18 :: GHC.Types.Int
                   ww19 :: GHC.Base.String
                   ww20 :: GHC.Base.String ->
                 IB.Client.Types.$w$cgfoldl10
                   @ Data.Data.ID
                   (\ @ d
                      @ b
                      $dData1 :: Data.Data.Data d
                      ds :: Data.Data.ID (d -> b)[OneShot]
                      x :: d[OneShot] ->
                    ds `cast` (Data.Data.NTCo:ID[0] <d -> b>_R) (w @ d $dData1 x))
                     `cast`
                   (forall d b.
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.ID (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.NTCo:ID[0] <b>_R))
                   IB.Client.Types.$fDataContractDetails7
                     `cast`
                   (forall g. <g>_R ->_R Sym (Data.Data.NTCo:ID[0] <g>_R))
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20) -}
44697c60d54670ce5b29e1d0fe30c422
  $widToMsg :: GHC.Prim.Int# -> IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww 25) of wild {
                   GHC.Types.False
                   -> case GHC.List.$w!!
                             @ Data.Data.Constr
                             IB.Client.Types.$fDataIBMessage4
                             (GHC.Prim.-# ww 1) of ww1 { Data.Data.Constr ww2 ww3 ww4 ww5 ww6 ->
                      (IB.Client.Types.$w$cgunfold8
                         @ Data.Data.ID
                         Data.Data.fromConstr1
                           `cast`
                         (forall b r.
                          <Data.Data.Data b>_R
                          ->_R <Data.Data.ID (b -> r)>_R
                          ->_R Sym (Data.Data.NTCo:ID[0] <r>_R))
                         Data.Data.$fDataArray4
                           `cast`
                         (forall r. <r>_R ->_R Sym (Data.Data.NTCo:ID[0] <r>_R))
                         ww2
                         ww6)
                        `cast`
                      (Data.Data.NTCo:ID[0] <IB.Client.Types.IBMessage>_R) }
                   GHC.Types.True
                   -> case GHC.List.$w!!
                             @ Data.Data.Constr
                             IB.Client.Types.$fDataIBMessage4
                             (GHC.Prim.-#
                                (GHC.Prim.-# ww 23)
                                1) of ww1 { Data.Data.Constr ww2 ww3 ww4 ww5 ww6 ->
                      (IB.Client.Types.$w$cgunfold8
                         @ Data.Data.ID
                         Data.Data.fromConstr1
                           `cast`
                         (forall b r.
                          <Data.Data.Data b>_R
                          ->_R <Data.Data.ID (b -> r)>_R
                          ->_R Sym (Data.Data.NTCo:ID[0] <r>_R))
                         Data.Data.$fDataArray4
                           `cast`
                         (forall r. <r>_R ->_R Sym (Data.Data.NTCo:ID[0] <r>_R))
                         ww2
                         ww6)
                        `cast`
                      (Data.Data.NTCo:ID[0] <IB.Client.Types.IBMessage>_R) } }) -}
ea76a28bf86f54a3cff57cca6a2c91b6
  data BarData
    = BarData {bar_date :: GHC.Base.String,
               bar_open :: GHC.Types.Double,
               bar_high :: GHC.Types.Double,
               bar_low :: GHC.Types.Double,
               bar_close :: GHC.Types.Double,
               bar_volume :: GHC.Types.Int,
               bar_average :: GHC.Types.Double,
               bar_hasGaps :: GHC.Base.String,
               bar_barCount :: GHC.Types.Int}
002efe166b6bb952b605830233cda850
  data ComboLeg
    = ComboLeg {cl_conId :: GHC.Types.Int,
                cl_ratio :: GHC.Types.Int,
                cl_action :: GHC.Base.String,
                cl_exchange :: GHC.Base.String,
                cl_openClose :: GHC.Types.Int,
                cl_shortSaleSlot :: GHC.Types.Int,
                cl_designatedLocation :: GHC.Base.String,
                cl_exemptCode :: GHC.Types.Int}
caa528b01431966dcbe9dd33da29f1b8
  data Contract
    = Contract {ct_conId :: GHC.Types.Int,
                ct_symbol :: GHC.Base.String,
                ct_secType :: GHC.Base.String,
                ct_expiry :: GHC.Base.String,
                ct_strike :: GHC.Types.Double,
                ct_right :: GHC.Base.String,
                ct_multiplier :: GHC.Base.String,
                ct_exchange :: GHC.Base.String,
                ct_primaryExchange :: GHC.Base.String,
                ct_currency :: GHC.Base.String,
                ct_localSymbol :: GHC.Base.String,
                ct_tradingClass :: GHC.Base.String,
                ct_includeExpired :: GHC.Types.Bool,
                ct_secIdType :: GHC.Base.String,
                ct_secId :: GHC.Base.String,
                ct_comboLegsDescrip :: GHC.Base.String,
                ct_comboLegsList :: [IB.Client.Types.ComboLeg],
                ct_underComp :: IB.Client.Types.UnderComp}
10f6fb809b84f2ec2702b33c5d1f7e37
  data ContractDetails
    = ContractDetails {ctd_summary :: IB.Client.Types.Contract,
                       ctd_marketName :: GHC.Base.String,
                       ctd_minTick :: GHC.Types.Double,
                       ctd_orderTypes :: GHC.Base.String,
                       ctd_validExchanges :: GHC.Base.String,
                       ctd_priceMagnifier :: GHC.Types.Int,
                       ctd_underConId :: GHC.Types.Int,
                       ctd_longName :: GHC.Base.String,
                       ctd_contractMonth :: GHC.Base.String,
                       ctd_industry :: GHC.Base.String,
                       ctd_category :: GHC.Base.String,
                       ctd_subcategory :: GHC.Base.String,
                       ctd_timeZoneId :: GHC.Base.String,
                       ctd_tradingHours :: GHC.Base.String,
                       ctd_liquidHours :: GHC.Base.String,
                       ctd_evRule :: GHC.Base.String,
                       ctd_evMultiplier :: GHC.Types.Double,
                       ctd_secIdList :: [IB.Client.Types.TagValue],
                       ctd_cusip :: GHC.Base.String,
                       ctd_ratings :: GHC.Base.String,
                       ctd_descAppend :: GHC.Base.String,
                       ctd_bondType :: GHC.Base.String,
                       ctd_couponType :: GHC.Base.String,
                       ctd_callable :: GHC.Types.Bool,
                       ctd_putable :: GHC.Types.Bool,
                       ctd_coupon :: GHC.Types.Double,
                       ctd_convertible :: GHC.Types.Bool,
                       ctd_maturity :: GHC.Base.String,
                       ctd_issueDate :: GHC.Base.String,
                       ctd_nextOptionDate :: GHC.Base.String,
                       ctd_nextOptionType :: GHC.Base.String,
                       ctd_nextOptionPartial :: GHC.Types.Bool,
                       ctd_notes :: GHC.Base.String}
3b02c4e89a95d7c4e80c16de6e482ca5
  data Execution
    = Execution {ex_execId :: GHC.Base.String,
                 ex_time :: GHC.Base.String,
                 ex_acctNumber :: GHC.Base.String,
                 ex_exchange :: GHC.Base.String,
                 ex_side :: GHC.Base.String,
                 ex_shares :: GHC.Types.Int,
                 ex_price :: GHC.Types.Double,
                 ex_permId :: GHC.Types.Int,
                 ex_clientId :: GHC.Types.Int,
                 ex_liquidation :: GHC.Types.Int,
                 ex_orderId :: GHC.Types.Int,
                 ex_cumQty :: GHC.Types.Int,
                 ex_avgPrice :: GHC.Types.Double,
                 ex_orderRef :: GHC.Base.String,
                 ex_evRule :: GHC.Base.String,
                 ex_evMultiplier :: GHC.Types.Double}
c3b324c073ae953432909e17e7787685
  data ExecutionFilter
    = ExecutionFilter {exf_clientId :: GHC.Types.Int,
                       exf_acctCode :: GHC.Base.String,
                       exf_time :: GHC.Base.String,
                       exf_symbol :: GHC.Base.String,
                       exf_secType :: GHC.Base.String,
                       exf_exchange :: GHC.Base.String,
                       exf_side :: GHC.Base.String}
a5261c783f695b8df6ea4eda8bf619ea
  data FaDataType = GROUPS | PROFILES | ALIASES
    Promotable
d98e2e65ae7bd1b63d156ab3c1b065ef
  type GroupId = GHC.Types.Int
5648ec0728afbb5950c4733509557b1a
  type HandlerFunc =
    IB.Client.Types.MIB -> IB.Client.Types.IBMessage -> GHC.Types.IO ()
c3159178f505ab80d8d762e3ddc31b28
  data IBMessage
    = TickPrice {tickerId :: GHC.Types.Int,
                 tickType :: GHC.Types.Int,
                 price :: GHC.Types.Double,
                 size :: GHC.Types.Int,
                 canAutoExecute :: GHC.Types.Int}
    | TickSize {tickerId :: GHC.Types.Int,
                tickType :: GHC.Types.Int,
                price :: GHC.Types.Double,
                size :: GHC.Types.Int}
    | OrderStatus {orderId :: GHC.Types.Int,
                   status :: GHC.Base.String,
                   filled :: GHC.Types.Int,
                   remaining :: GHC.Types.Int,
                   avgFillPrice :: GHC.Types.Double,
                   permId :: GHC.Types.Int,
                   parentId :: GHC.Types.Int,
                   lastFillPrice :: GHC.Types.Double,
                   clientId :: GHC.Types.Int,
                   whyHeld :: GHC.Base.String}
    | Err {errorCode :: GHC.Types.Int, errorMsg :: GHC.Base.String}
    | OpenOrder {order :: IB.Client.Types.Order,
                 contract :: IB.Client.Types.Contract,
                 comboLeg :: [IB.Client.Types.ComboLeg],
                 orderComboLegs :: [IB.Client.Types.OrderComboLeg],
                 orderState :: IB.Client.Types.OrderState}
    | AcctValue {key :: GHC.Base.String,
                 val :: GHC.Base.String,
                 cur :: GHC.Base.String,
                 accountName :: GHC.Base.String}
    | PortfolioValue {contract :: IB.Client.Types.Contract,
                      position :: GHC.Types.Int,
                      marketPrice :: GHC.Types.Double,
                      marketValue :: GHC.Types.Double,
                      averageCost :: GHC.Types.Double,
                      unrealizedPNL :: GHC.Types.Double,
                      realizedPNL :: GHC.Types.Double,
                      accountName :: GHC.Base.String}
    | AcctUpdateTime GHC.Base.String
    | NextValidId GHC.Types.Int
    | ContractData IB.Client.Types.ContractDetails
    | ExecutionData {reqId :: GHC.Types.Int,
                     contract :: IB.Client.Types.Contract,
                     exec :: IB.Client.Types.Execution}
    | MarketDepth {id :: GHC.Types.Int,
                   position :: GHC.Types.Int,
                   operation :: GHC.Types.Int,
                   side :: GHC.Types.Int,
                   price :: GHC.Types.Double,
                   size :: GHC.Types.Int}
    | MarketDepthL2 {id :: GHC.Types.Int,
                     position :: GHC.Types.Int,
                     marketMaker :: GHC.Base.String,
                     operation :: GHC.Types.Int,
                     side :: GHC.Types.Int,
                     price :: GHC.Types.Double,
                     size :: GHC.Types.Int}
    | NewsBulletins {msgId :: GHC.Types.Int,
                     msgType :: GHC.Types.Int,
                     newsMessage :: GHC.Base.String,
                     originatingExch :: GHC.Base.String}
    | ManagedAccts GHC.Base.String
    | ReceiveFA {faDataTypeInt :: GHC.Types.Int,
                 cxml :: GHC.Base.String}
    | HistoricalData {reqId :: GHC.Types.Int,
                      startDateStr :: GHC.Base.String,
                      endDateStr :: GHC.Base.String,
                      barDataList :: [IB.Client.Types.BarData]}
    | BondContractData IB.Client.Types.ContractDetails
    | ScannerParameters GHC.Base.String
    | ScannerData {tickerId :: GHC.Types.Int,
                   scannerDataList :: [IB.Client.Types.ScanData]}
    | TickOptionComputation {tickerId :: GHC.Types.Int,
                             tickType :: GHC.Types.Int,
                             impliedVol :: GHC.Types.Double,
                             delta :: GHC.Types.Double,
                             optPrice :: GHC.Types.Double,
                             pvDividend :: GHC.Types.Double,
                             gamma :: GHC.Types.Double,
                             vega :: GHC.Types.Double,
                             theta :: GHC.Types.Double,
                             undPrice :: GHC.Types.Double}
    | TickGeneric {tickerId :: GHC.Types.Int,
                   tickType :: GHC.Types.Int,
                   tg_value :: GHC.Types.Double}
    | TickString {tickerId :: GHC.Types.Int,
                  tickType :: GHC.Types.Int,
                  ts_value :: GHC.Base.String}
    | TickEFP {tickerId :: GHC.Types.Int,
               tickType :: GHC.Types.Int,
               basisPoints :: GHC.Types.Double,
               formattedBasisPoints :: GHC.Base.String,
               impliedFuturesPrice :: GHC.Types.Double,
               holdDays :: GHC.Types.Int,
               futureExpiry :: GHC.Base.String,
               dividendImpact :: GHC.Types.Double,
               dividendsToExpiry :: GHC.Types.Double}
    | UnusedMsg1
    | CurrentTime GHC.Types.Int
    | RealTimeBars {reqId :: GHC.Types.Int,
                    time :: GHC.Types.Int,
                    open :: GHC.Types.Double,
                    high :: GHC.Types.Double,
                    low :: GHC.Types.Double,
                    close :: GHC.Types.Double,
                    volume :: GHC.Types.Int,
                    average :: GHC.Types.Double,
                    count :: GHC.Types.Int}
    | FundamentalData {reqId :: GHC.Types.Int,
                       fdata :: GHC.Base.String}
    | ContractDataEnd IB.Client.Types.ReqId
    | OpenOrderEnd
    | AcctDownloadEnd GHC.Base.String
    | ExecutionDataEnd IB.Client.Types.ReqId
    | DeltaNeutralValidation {reqId :: GHC.Types.Int,
                              underComp :: IB.Client.Types.UnderComp}
    | TickSnapshotEnd IB.Client.Types.ReqId
    | MarketDataType {reqId :: GHC.Types.Int,
                      marketDataType :: GHC.Types.Int}
    | CommissionReport {execId :: GHC.Base.String,
                        commission :: GHC.Types.Double,
                        currency :: GHC.Base.String,
                        realizedPNL :: GHC.Types.Double,
                        yield :: GHC.Types.Double,
                        yieldRedemptionDate :: GHC.Types.Int}
    | UnusedMsg2
    | PositionData {account :: GHC.Base.String,
                    contract :: IB.Client.Types.Contract,
                    position :: GHC.Types.Int,
                    avgCost :: GHC.Types.Double}
    | PositionEnd
    | AccountSummary {reqId :: GHC.Types.Int,
                      account :: GHC.Base.String,
                      tag :: GHC.Base.String,
                      value :: GHC.Base.String,
                      currency :: GHC.Base.String}
    | AccountSummaryEnd IB.Client.Types.ReqId
    | VerifyMessageAPI GHC.Base.String
    | VerifyCompleted {isSuccessful :: GHC.Base.String,
                       errorText :: GHC.Base.String}
    | DisplayGroupList {reqId :: GHC.Types.Int,
                        groups :: GHC.Base.String}
    | DisplayGroupUpdated {reqId :: GHC.Types.Int,
                           contractInfo :: GHC.Base.String}
    | IBUnknown
5648ec0728afbb5950c4733509557b1a
  data IBServer
    = IBServer {s_addr :: GHC.Base.String,
                s_port :: GHC.Types.Int,
                s_clientId :: GHC.Types.Int,
                s_extraAuth :: GHC.Types.Bool,
                s_version :: GHC.Types.Int,
                s_connected :: GHC.Types.Bool,
                s_twsTime :: GHC.Base.String,
                s_debug :: GHC.Types.Bool,
                s_sock :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle,
                s_msgThread :: GHC.Base.Maybe GHC.Conc.Sync.ThreadId,
                s_timeoutInterval :: GHC.Types.Int,
                s_handler :: IB.Client.Types.HandlerFunc}
    RecFlag: Recursive
5648ec0728afbb5950c4733509557b1a
  type MIB = GHC.MVar.MVar IB.Client.Types.IBServer
b28d7eb203762c305be42fe6a07d96f9
  data NewsBulletin
    = NEWS_MSG | EXCHANGE_AVAIL_MSG | EXCHANGE_UNAVAIL_MSG
    Promotable
2cd8217c2494d18a13975b77e7704072
  data Order
    = Order {ord_orderId :: GHC.Types.Int,
             ord_clientId :: GHC.Types.Int,
             ord_permId :: GHC.Types.Int,
             ord_action :: GHC.Base.String,
             ord_totalQuantity :: GHC.Types.Int,
             ord_orderType :: GHC.Base.String,
             ord_lmtPrice :: GHC.Types.Double,
             ord_auxPrice :: GHC.Types.Double,
             ord_tif :: GHC.Base.String,
             ord_activeStartTime :: GHC.Base.String,
             ord_activeStopTime :: GHC.Base.String,
             ord_ocaGroup :: GHC.Base.String,
             ord_ocaType :: GHC.Types.Int,
             ord_orderRef :: GHC.Base.String,
             ord_transmit :: GHC.Types.Bool,
             ord_parentId :: GHC.Types.Int,
             ord_blockOrder :: GHC.Types.Bool,
             ord_sweepToFill :: GHC.Types.Bool,
             ord_displaySize :: GHC.Types.Int,
             ord_triggerMethod :: GHC.Types.Int,
             ord_outsideRth :: GHC.Types.Bool,
             ord_hidden :: GHC.Types.Bool,
             ord_goodAfterTime :: GHC.Base.String,
             ord_goodTillDate :: GHC.Base.String,
             ord_rule80A :: GHC.Base.String,
             ord_allOrNone :: GHC.Types.Bool,
             ord_minQty :: GHC.Types.Int,
             ord_percentOffset :: GHC.Types.Double,
             ord_overridePercentageConstraints :: GHC.Types.Bool,
             ord_trailStopPrice :: GHC.Types.Double,
             ord_trailingPercent :: GHC.Types.Double,
             ord_faGroup :: GHC.Base.String,
             ord_faProfile :: GHC.Base.String,
             ord_faMethod :: GHC.Base.String,
             ord_faPercentage :: GHC.Base.String,
             ord_openClose :: GHC.Base.String,
             ord_origin :: IB.Client.Types.Origin,
             ord_shortSaleSlot :: GHC.Types.Int,
             ord_designatedLocation :: GHC.Base.String,
             ord_exemptCode :: GHC.Types.Int,
             ord_discretionaryAmt :: GHC.Types.Double,
             ord_eTradeOnly :: GHC.Types.Bool,
             ord_firmQuoteOnly :: GHC.Types.Bool,
             ord_nbboPriceCap :: GHC.Types.Double,
             ord_optOutSmartRouting :: GHC.Types.Bool,
             ord_auctionStrategy :: GHC.Types.Int,
             ord_startingPrice :: GHC.Types.Double,
             ord_stockRefPrice :: GHC.Types.Double,
             ord_delta :: GHC.Types.Double,
             ord_stockRangeLower :: GHC.Types.Double,
             ord_stockRangeUpper :: GHC.Types.Double,
             ord_volatility :: GHC.Types.Double,
             ord_volatilityType :: GHC.Types.Int,
             ord_deltaNeutralOrderType :: GHC.Base.String,
             ord_deltaNeutralAuxPrice :: GHC.Types.Double,
             ord_deltaNeutralConId :: GHC.Types.Int,
             ord_deltaNeutralSettlingFirm :: GHC.Base.String,
             ord_deltaNeutralClearingAccount :: GHC.Base.String,
             ord_deltaNeutralClearingIntent :: GHC.Base.String,
             ord_deltaNeutralOpenClose :: GHC.Base.String,
             ord_deltaNeutralShortSale :: GHC.Types.Bool,
             ord_deltaNeutralShortSaleSlot :: GHC.Types.Int,
             ord_deltaNeutralDesignatedLocation :: GHC.Base.String,
             ord_continuousUpdate :: GHC.Types.Bool,
             ord_referencePriceType :: GHC.Types.Int,
             ord_basisPoints :: GHC.Types.Double,
             ord_basisPointsType :: GHC.Types.Int,
             ord_scaleInitLevelSize :: GHC.Types.Int,
             ord_scaleSubsLevelSize :: GHC.Types.Int,
             ord_scalePriceIncrement :: GHC.Types.Double,
             ord_scalePriceAdjustValue :: GHC.Types.Double,
             ord_scalePriceAdjustInterval :: GHC.Types.Int,
             ord_scaleProfitOffset :: GHC.Types.Double,
             ord_scaleAutoReset :: GHC.Types.Bool,
             ord_scaleInitPosition :: GHC.Types.Int,
             ord_scaleInitFillQty :: GHC.Types.Int,
             ord_scaleRandomPercent :: GHC.Types.Bool,
             ord_scaleTable :: GHC.Base.String,
             ord_hedgeType :: GHC.Base.String,
             ord_hedgeParam :: GHC.Base.String,
             ord_account :: GHC.Base.String,
             ord_settlingFirm :: GHC.Base.String,
             ord_clearingAccount :: GHC.Base.String,
             ord_clearingIntent :: GHC.Base.String,
             ord_algoStrategy :: GHC.Base.String,
             ord_algoParams :: [IB.Client.Types.TagValue],
             ord_smartComboRoutingParams :: [IB.Client.Types.TagValue],
             ord_whatIf :: GHC.Types.Bool,
             ord_notHeld :: GHC.Types.Bool}
c7ce8f8821a9158956c34cd77dc398ed
  type OrderComboLeg = GHC.Types.Double
8b3a6d921b52202c794faf2910d3fd43
  type OrderId = GHC.Types.Int
33e8af4fb4aaa2caee0107ce817c023d
  data OrderState
    = OrderState {os_status :: GHC.Base.String,
                  os_initMargin :: GHC.Base.String,
                  os_maintMargin :: GHC.Base.String,
                  os_equityWithLoan :: GHC.Base.String,
                  os_commission :: GHC.Types.Double,
                  os_minCommission :: GHC.Types.Double,
                  os_maxCommission :: GHC.Types.Double,
                  os_commissionCurrency :: GHC.Base.String,
                  os_warningText :: GHC.Base.String}
9a9807ead72a50e08c3a5bd68baac3eb
  data Origin = CUSTOMER | FIRM | UNKNOWN
    Promotable
a79ff5a1c3d85f044e19e8905050f92d
  data Preamble
    = Preamble {pre_serverVersion :: GHC.Types.Int,
                pre_twsTime :: GHC.Base.String}
b49bd3567db90ca270ef97a2217a8991
  data RecvMsg
    = RecvMsg {rc_msgId :: GHC.Types.Int,
               rc_version :: GHC.Types.Int,
               rc_msgBody :: IB.Client.Types.IBMessage}
303f34de2d2f9c4d506c1f6250d3e427
  type ReqId = GHC.Types.Int
fc280c903efa72a25e79a60326413a98
  data Request
    = MktDataReq {rqp_tickerId :: IB.Client.Types.TickerId,
                  mdr_contract :: IB.Client.Types.Contract,
                  mdr_genericTicks :: GHC.Base.String,
                  mdr_snapshot :: GHC.Types.Bool,
                  mdr_mktDataOptions :: [IB.Client.Types.TagValue]}
    | CancelMktData {rqp_tickerId :: IB.Client.Types.TickerId}
    | PlaceOrder {rqp_orderId :: IB.Client.Types.OrderId,
                  por_contract :: IB.Client.Types.Contract,
                  por_order :: IB.Client.Types.Order}
    | CancelOrder {rqp_orderId :: IB.Client.Types.OrderId}
    | OpenOrdersReq
    | AccountUpdatesReq {aur_subscribe :: GHC.Types.Bool,
                         aur_acctCode :: GHC.Base.String}
    | ExecutionsReq {rqp_reqId :: IB.Client.Types.ReqId,
                     exe_filter :: IB.Client.Types.ExecutionFilter}
    | IdsReq GHC.Types.Int
    | ContractDetailsReq {rqp_reqId :: IB.Client.Types.ReqId,
                          cdr_contract :: IB.Client.Types.Contract}
    | MktDepthReq {rqp_tickerId :: IB.Client.Types.TickerId,
                   mkr_contract :: IB.Client.Types.Contract,
                   mkr_numRows :: GHC.Types.Int,
                   mkr_mktDepthOptions :: [IB.Client.Types.TagValue]}
    | CancelMktDepth IB.Client.Types.TickerId
    | NewsBulletinsReq GHC.Types.Bool
    | CancelNewsBulletins
    | SetServerLogLevel GHC.Types.Int
    | AutoOpenOrdersReq GHC.Types.Bool
    | AllOpenOrdersReq
    | ManagedAcctsReq
    | FAReq IB.Client.Types.FaDataType
    | FAReplaceReq {far_pFaDataType :: IB.Client.Types.FaDataType,
                    far_cxml :: GHC.Base.String}
    | HistoricalDataReq {rqp_tickerId :: IB.Client.Types.TickerId,
                         hdr_contract :: IB.Client.Types.Contract,
                         hdr_endDataTime :: GHC.Base.String,
                         hdr_durationStr :: GHC.Base.String,
                         hdr_barSizeSetting :: GHC.Base.String,
                         hdr_whatToShow :: GHC.Base.String,
                         hdr_useRTH :: GHC.Types.Int,
                         hdr_formatDate :: GHC.Types.Int,
                         hdr_chartOptions :: [IB.Client.Types.TagValue]}
    | ExerciseOptionsReq {rqp_tickerId :: IB.Client.Types.TickerId,
                          eor_contract :: IB.Client.Types.Contract,
                          eor_exerciseAction :: GHC.Types.Int,
                          eor_exerciseQuantity :: GHC.Types.Int,
                          eor_account :: GHC.Base.String,
                          eor_override :: GHC.Types.Int}
    | ScannerSubscriptionReq {rqp_tickerId :: IB.Client.Types.TickerId,
                              ssr_subscription :: IB.Client.Types.ScannerSubscription,
                              ssr_subscriptionOptions :: [IB.Client.Types.TagValue]}
    | CancelScannerSubscription IB.Client.Types.TickerId
    | ScannerParametersReq
    | CancelHistoricalData IB.Client.Types.TickerId
    | CurrentTimeReq
    | RealTimeBarsReq {rqp_tickerId :: IB.Client.Types.TickerId,
                       rtb_contract :: IB.Client.Types.Contract,
                       rtb_barSize :: GHC.Types.Int,
                       rtb_whatToShow :: GHC.Base.String,
                       rtb_useRTH :: GHC.Types.Bool,
                       rtb_realTimeBarsOptions :: [IB.Client.Types.TagValue]}
    | CancelRealTimeBars IB.Client.Types.TickerId
    | FundamentalDataReq {rqp_reqId :: IB.Client.Types.TickerId,
                          fdr_contract :: IB.Client.Types.Contract,
                          fdr_reportType :: GHC.Base.String}
    | CancelFundamentalData IB.Client.Types.TickerId
    | ImpliedVolatilityReq {rqp_tickerId :: IB.Client.Types.TickerId,
                            ivr_contract :: IB.Client.Types.Contract,
                            ivr_optionPrice :: GHC.Types.Double,
                            ivr_underPrice :: GHC.Types.Double}
    | CalcOptionPriceReq {rqp_tickerId :: IB.Client.Types.TickerId,
                          opr_contract :: IB.Client.Types.Contract,
                          opr_volatility :: GHC.Types.Double,
                          opr_underPrice :: GHC.Types.Double}
    | CancelCalcImpliedVolatility IB.Client.Types.TickerId
    | CancelCalcOptionPrice IB.Client.Types.TickerId
    | GlobalCancelReq
    | MarketDataTypeReq IB.Client.Types.TickerId
    | UnusedReq
    | PositionsReq
    | AccountSummaryReq {rqp_reqId :: IB.Client.Types.ReqId,
                         asr_groupName :: GHC.Base.String,
                         asr_tags :: GHC.Base.String}
    | CancelAccountSummary IB.Client.Types.ReqId
    | CancelPositions
    | VerifyReq {vr_apiName :: GHC.Base.String,
                 vr_apiVer :: GHC.Base.String}
    | VerifyMessage GHC.Base.String
    | QueryDisplayGroups IB.Client.Types.ReqId
    | SubscribeToGroupEvents IB.Client.Types.ReqId
                             IB.Client.Types.GroupId
    | UpdateDisplayGroup {rqp_reqId :: GHC.Types.Int,
                          udg_contractInfo :: GHC.Base.String}
    | UnsubscribeFromGroupEvents IB.Client.Types.ReqId
    | StartApi
50caed14fc43fe28260a3dbedf7b8938
  data ScanData
    = ScanData {sd_rank :: GHC.Types.Int,
                sd_contract :: IB.Client.Types.ContractDetails,
                sd_distance :: GHC.Base.String,
                sd_benchmark :: GHC.Base.String,
                sd_projection :: GHC.Base.String,
                sd_legsStr :: GHC.Base.String}
367c05871f196c1198c7c33cc84e551f
  data ScannerSubscription
    = ScannerSubscription {ssb_numberOfRows :: GHC.Types.Int,
                           ssb_instrument :: GHC.Base.String,
                           ssb_locationCode :: GHC.Base.String,
                           ssb_scanCode :: GHC.Base.String,
                           ssb_abovePrice :: GHC.Types.Double,
                           ssb_belowPrice :: GHC.Types.Double,
                           ssb_aboveVolume :: GHC.Types.Int,
                           ssb_marketCapAbove :: GHC.Types.Double,
                           ssb_marketCapBelow :: GHC.Types.Double,
                           ssb_moodyRatingAbove :: GHC.Base.String,
                           ssb_moodyRatingBelow :: GHC.Base.String,
                           ssb_spRatingAbove :: GHC.Base.String,
                           ssb_spRatingBelow :: GHC.Base.String,
                           ssb_maturityDateAbove :: GHC.Base.String,
                           ssb_maturityDateBelow :: GHC.Base.String,
                           ssb_couponRateAbove :: GHC.Types.Double,
                           ssb_couponRateBelow :: GHC.Types.Double,
                           ssb_excludeConvertible :: GHC.Types.Int,
                           ssb_averageOptionVolumeAbove :: GHC.Types.Int,
                           ssb_scannerSettingPairs :: GHC.Base.String,
                           ssb_stockTypeFilter :: GHC.Base.String}
1a67fe1f9587ca84c5ec8a5540dcc404
  data TagValue
    = TagValue {tv_tag :: GHC.Base.String, tv_value :: GHC.Base.String}
8e5a0e560d8d27d8c8ebcb59255ada75
  data TickType
    = BID_SIZE
    | BID
    | ASK
    | ASK_SIZE
    | LAST
    | LAST_SIZE
    | HIGH
    | LOW
    | VOLUME
    | CLOSE
    | BID_OPTION_COMPUTATION
    | ASK_OPTION_COMPUTATION
    | LAST_OPTION_COMPUTATION
    | MODEL_OPTION
    | OPEN
    | LOW_13_WEEK
    | HIGH_13_WEEK
    | LOW_26_WEEK
    | HIGH_26_WEEK
    | LOW_52_WEEK
    | HIGH_52_WEEK
    | AVG_VOLUME
    | OPEN_INTEREST
    | OPTION_HISTORICAL_VOL
    | OPTION_IMPLIED_VOL
    | OPTION_BID_EXCH
    | OPTION_ASK_EXCH
    | OPTION_CALL_OPEN_INTEREST
    | OPTION_PUT_OPEN_INTEREST
    | OPTION_CALL_VOLUME
    | OPTION_PUT_VOLUME
    | INDEX_FUTURE_PREMIUM
    | BID_EXCH
    | ASK_EXCH
    | AUCTION_VOLUME
    Promotable
9e5aab7410e7ace184431ac2b25a8483
  type TickerId = GHC.Types.Int
a21e71e5f5ea67fadee2024d47af45da
  data UnderComp
    = UnderComp {uc_conId :: GHC.Types.Int,
                 uc_delta :: GHC.Types.Double,
                 uc_price :: GHC.Types.Double}
588fb2db2a7d276b1bbe622338bbf6cd
  account :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.account1
                   IB.Client.Types.PositionData ds1 ds2 ds3 ds4 -> ds1
                   IB.Client.Types.AccountSummary ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
f19690db58a50ab2cc27c661bb9c0027
  account1 :: GHC.Base.String
  {- Strictness: b -}
0cd4258db1738786ed84dbf741526144
  accountName :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.accountName1
                   IB.Client.Types.AcctValue ds1 ds2 ds3 ds4 -> ds4
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds8 }) -}
fda3c59d82b82b0f3eec6db9fcd4d621
  accountName1 :: GHC.Base.String
  {- Strictness: b -}
4f165a2759ff2f071e0beb270c2cd8b1
  asr_groupName :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.asr_groupName1
                   IB.Client.Types.AccountSummaryReq ds1 ds2 ds3 -> ds2 }) -}
cf9175aec45987418993aea295032b13
  asr_groupName1 :: GHC.Base.String
  {- Strictness: b -}
e13f59d39f10fa3af818583ca6619875
  asr_tags :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.asr_tags1
                   IB.Client.Types.AccountSummaryReq ds1 ds2 ds3 -> ds3 }) -}
7bd1bd4d19daed138edfcbaec362aec1
  asr_tags1 :: GHC.Base.String
  {- Strictness: b -}
6e7443374d073df7ff20d3a76b2b3bee
  aur_acctCode :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.aur_acctCode1
                   IB.Client.Types.AccountUpdatesReq ds1 ds2 -> ds2 }) -}
309c42d5881ef175382b8b3c22516aec
  aur_acctCode1 :: GHC.Base.String
  {- Strictness: b -}
bb2d0b1d016989ca818d903603f3e6b4
  aur_subscribe :: IB.Client.Types.Request -> GHC.Types.Bool
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.aur_subscribe1
                   IB.Client.Types.AccountUpdatesReq ds1 ds2 -> ds1 }) -}
704cb032c7b35c992fc8e2ad4f4b992d
  aur_subscribe1 :: GHC.Types.Bool
  {- Strictness: b -}
3c88e055fb3014d16a5308de5c79d592
  average :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.average1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds8 }) -}
4d8ce7c0ba5c513fad88a3f350565394
  average1 :: GHC.Types.Double
  {- Strictness: b -}
68b6b1f8214b1663d264f8cf0c71065f
  averageCost :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.averageCost1
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds5 }) -}
fffd2e888989a23f76eedfb4cabe0837
  averageCost1 :: GHC.Types.Double
  {- Strictness: b -}
e282a78b4b76b57441817249e4bc9419
  avgCost :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.avgCost1
                   IB.Client.Types.PositionData ds1 ds2 ds3 ds4 -> ds4 }) -}
9aa594b014c9b8249954890674b4fede
  avgCost1 :: GHC.Types.Double
  {- Strictness: b -}
0790dc9a91257ca5c081d1cf89baf1ea
  avgFillPrice :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.avgFillPrice1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds5 }) -}
a006bada2999da186584891056f80c89
  avgFillPrice1 :: GHC.Types.Double
  {- Strictness: b -}
a1eabc64c361e62c994d37c7bcc6cd2f
  barDataList ::
    IB.Client.Types.IBMessage -> [IB.Client.Types.BarData]
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.barDataList1
                   IB.Client.Types.HistoricalData ds1 ds2 ds3 ds4 -> ds4 }) -}
d67308bd4667a9d92a5a7ad21d449e57
  barDataList1 :: [IB.Client.Types.BarData]
  {- Strictness: b -}
f9aebf9ec4291245a0a59cc29b51a8c7
  bar_average :: IB.Client.Types.BarData -> GHC.Types.Double
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLL),1*U(A,A,A,A,A,A,1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds7 }) -}
5013e6653fb7ec3499bb8ab60697c721
  bar_barCount :: IB.Client.Types.BarData -> GHC.Types.Int
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLS),1*U(A,A,A,A,A,A,A,A,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds9 }) -}
1fded018c0623afc0743929b7cab7694
  bar_close :: IB.Client.Types.BarData -> GHC.Types.Double
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds5 }) -}
a0cca5c7e7e14bdb28fd089d8571af59
  bar_date :: IB.Client.Types.BarData -> GHC.Base.String
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds1 }) -}
3dad4d13ed73a18a60a0eea106787421
  bar_hasGaps :: IB.Client.Types.BarData -> GHC.Base.String
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSL),1*U(A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds8 }) -}
ce60c7cab7fcf6c2a85590f3efe5f405
  bar_high :: IB.Client.Types.BarData -> GHC.Types.Double
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds3 }) -}
4e83cafcfdee096a766b2f89fd24026d
  bar_low :: IB.Client.Types.BarData -> GHC.Types.Double
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLL),1*U(A,A,A,1*U(U),A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds4 }) -}
09eae3c149cc2cec1e70c8ce0aa11f52
  bar_open :: IB.Client.Types.BarData -> GHC.Types.Double
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds2 }) -}
11d9b97141704dc7f6c4103eb9ed551b
  bar_volume :: IB.Client.Types.BarData -> GHC.Types.Int
  RecSel IB.Client.Types.BarData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLL),1*U(A,A,A,A,A,1*U(U),A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.BarData ->
                 case ds of wild { IB.Client.Types.BarData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds6 }) -}
e509d1fcea3194bc6915a8c381149a02
  basisPoints :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.basisPoints1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds3 }) -}
e296a5a169ee455c4c6bfde096fc4181
  basisPoints1 :: GHC.Types.Double
  {- Strictness: b -}
de140ec629a73021178efa9189f16a1f
  canAutoExecute :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.canAutoExecute1
                   IB.Client.Types.TickPrice ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
53bca25df1188ae3ac5aaf2567fff3fd
  canAutoExecute1 :: GHC.Types.Int
  {- Strictness: b -}
d3edc7acf5e37159b01fa6fdb8e410f9
  cdr_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.cdr_contract1
                   IB.Client.Types.ContractDetailsReq ds1 ds2 -> ds2 }) -}
69a31fbd8a602c0662fb4425792f0626
  cdr_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
111b786b70d673ccad0c6f72f5e80503
  cl_action :: IB.Client.Types.ComboLeg -> GHC.Base.String
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLL),1*U(A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds3 }) -}
58b089ff91cc5e630a9485515c12f995
  cl_conId :: IB.Client.Types.ComboLeg -> GHC.Types.Int
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds1 }) -}
c0a324edadf7b0ee2982fddb1ec8c870
  cl_designatedLocation ::
    IB.Client.Types.ComboLeg -> GHC.Base.String
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSL),1*U(A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds7 }) -}
fded4f0168604c885aeeed45d47a6f76
  cl_exchange :: IB.Client.Types.ComboLeg -> GHC.Base.String
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLL),1*U(A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds4 }) -}
bb933c4159865a1c7953d8be1eb429f1
  cl_exemptCode :: IB.Client.Types.ComboLeg -> GHC.Types.Int
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds8 }) -}
50846cc162eb92727fd71b257add01d7
  cl_openClose :: IB.Client.Types.ComboLeg -> GHC.Types.Int
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLL),1*U(A,A,A,A,1*U(U),A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds5 }) -}
35499b7c1d07b16bd0fa4a43bd8cbb24
  cl_ratio :: IB.Client.Types.ComboLeg -> GHC.Types.Int
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds2 }) -}
cccd36da498c084d8592ead6313e58f5
  cl_shortSaleSlot :: IB.Client.Types.ComboLeg -> GHC.Types.Int
  RecSel IB.Client.Types.ComboLeg
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLL),1*U(A,A,A,A,A,1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ComboLeg ->
                 case ds of wild { IB.Client.Types.ComboLeg ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds6 }) -}
18578854af6c82a656736b91330d4225
  clientId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.clientId1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds9 }) -}
858fe465d21cad37e57fd63e2bc01655
  clientId1 :: GHC.Types.Int
  {- Strictness: b -}
dba44198f1ed60c6b6943e65c6bd2a3c
  close :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.close1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds6 }) -}
ef885a848af5751471bbcfad8e4c4321
  close1 :: GHC.Types.Double
  {- Strictness: b -}
63d829e60347bb12b1596253ec1f2b34
  comboLeg :: IB.Client.Types.IBMessage -> [IB.Client.Types.ComboLeg]
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.comboLeg1
                   IB.Client.Types.OpenOrder ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
36d29cb97d7def241b14a59d910986a7
  comboLeg1 :: [IB.Client.Types.ComboLeg]
  {- Strictness: b -}
3db06c7887565988f3afbec9ecd9d9bb
  commission :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.commission1
                   IB.Client.Types.CommissionReport ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds2 }) -}
cb7da166d4c3d4e2c90580ade583507a
  commission1 :: GHC.Types.Double
  {- Strictness: b -}
dfdadb831c0cc0a7437a932d4e780c41
  conToId :: Data.Data.Data a => a -> GHC.Types.Int
  {- Arity: 2,
     Strictness: <S(LLLC(S(SLLLL))LLLLLLLLLLL),1*U(A,A,A,1*C1(U(1*U,A,A,A,1*U(1*U,A))),A,A,A,A,A,A,A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a43 $dData :: Data.Data.Data a43 eta :: a43 ->
                 case Data.Data.toConstr
                        @ a43
                        $dData
                        eta of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 Data.Data.$wconstrIndex ww1 ww5 }) -}
2ec711d63b5e701f501e64a38d3addec
  contract :: IB.Client.Types.IBMessage -> IB.Client.Types.Contract
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.contract1
                   IB.Client.Types.OpenOrder ds1 ds2 ds3 ds4 ds5 -> ds2
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds1
                   IB.Client.Types.ExecutionData ds1 ds2 ds3 -> ds2
                   IB.Client.Types.PositionData ds1 ds2 ds3 ds4 -> ds2 }) -}
5a796ec4907a77626a8855afd7dda33b
  contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
221db7078227b3715f03b71887f8142f
  contractInfo :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.contractInfo1
                   IB.Client.Types.DisplayGroupUpdated ds1 ds2 -> ds2 }) -}
fa1c92b1f7dcb8d379c22b9e885f9914
  contractInfo1 :: GHC.Base.String
  {- Strictness: b -}
e934ff680310498dc7662e89cae19ff5
  count :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.count1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds9 }) -}
2fe299e9a35e486fc181a081339b5eff
  count1 :: GHC.Types.Int
  {- Strictness: b -}
dbf1f4bb9ef9d0dea7abf849c9f18211
  ct_comboLegsDescrip :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
e34d9d0d3184baf04a359d5e5e2eae99
  ct_comboLegsList ::
    IB.Client.Types.Contract -> [IB.Client.Types.ComboLeg]
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
bdf7db4b6e16f4fb43c7ccccaaf0822e
  ct_conId :: IB.Client.Types.Contract -> GHC.Types.Int
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds1 }) -}
77719cea6f41afde8f01eaca1d78141b
  ct_currency :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
3f10b3769d15711239f337e72f21686f
  ct_exchange :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
8157d207d0c253fac321d591174ba894
  ct_expiry :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds4 }) -}
678afda3425226329657392d0bf4e343
  ct_includeExpired :: IB.Client.Types.Contract -> GHC.Types.Bool
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
2f1a20738281197b78029ae0cdcf35d8
  ct_localSymbol :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
1c306b7447c076b9234ace9085878d88
  ct_multiplier :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
1b2ede38b11bde73d58361090c1523cc
  ct_primaryExchange :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
9c619ea5b4b36cb1d9836533bba32bc1
  ct_right :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds6 }) -}
c15109c62994a672c53ff8efd05fb507
  ct_secId :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
cae3de0bb0812c51992787c0b05202e3
  ct_secIdType :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
8fb684d1036bc1852054cd26a80bf53b
  ct_secType :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds3 }) -}
b8d85c0904c43efcda913197f134dc54
  ct_strike :: IB.Client.Types.Contract -> GHC.Types.Double
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds5 }) -}
d576a2f8a9d857b426c91e4c74682edd
  ct_symbol :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds2 }) -}
e660b2a73c05df1d6eaada282cd67212
  ct_tradingClass :: IB.Client.Types.Contract -> GHC.Base.String
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
d58421ef7bf58eb420ae5f92077d98b2
  ct_underComp ::
    IB.Client.Types.Contract -> IB.Client.Types.UnderComp
  RecSel IB.Client.Types.Contract
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Contract ->
                 case ds of wild { IB.Client.Types.Contract ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
e3f96aa8022a1c61a2531303b9a07280
  ctd_bondType :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds22 }) -}
6b6bbef9f39d697cd217be6b0f45280f
  ctd_callable :: IB.Client.Types.ContractDetails -> GHC.Types.Bool
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds24 }) -}
3f03b304605aa5451e98151b031b5f09
  ctd_category :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds11 }) -}
ae1492e04b491a0889a5a55413e75dfd
  ctd_contractMonth ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds9 }) -}
91b7c92de7dd6b314968ea6c9d9be74f
  ctd_convertible ::
    IB.Client.Types.ContractDetails -> GHC.Types.Bool
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds27 }) -}
4748c788bc4c9e8956122baa9de4606b
  ctd_coupon :: IB.Client.Types.ContractDetails -> GHC.Types.Double
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds26 }) -}
5faaebd4cce1a1a1ad25d4bff39aa53d
  ctd_couponType ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds23 }) -}
d574e774deeb36ebcae0b51600ca80bf
  ctd_cusip :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds19 }) -}
d093e1bade365b38a98330a4d3bb843e
  ctd_descAppend ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds21 }) -}
1627b3fa96ef609f41357a41c084517d
  ctd_evMultiplier ::
    IB.Client.Types.ContractDetails -> GHC.Types.Double
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds17 }) -}
40d10374302dfedfe57833d6beff82a9
  ctd_evRule :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds16 }) -}
f189b543308ec88586daea2597baa306
  ctd_industry :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds10 }) -}
a849828b7c132a6031ba23bd81d9d198
  ctd_issueDate :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds29 }) -}
47cd490220366651a57ac9b5e1faca25
  ctd_liquidHours ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds15 }) -}
b9350f16358763e43bfae7af2c9d9c9a
  ctd_longName :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds8 }) -}
aa0b4d4efae9a596dff3de3648c5b732
  ctd_marketName ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds2 }) -}
0d95fe1adf3bbb1a148eff0f668d57bd
  ctd_maturity :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds28 }) -}
0ac82895f9790124759ecacc0a8cac7f
  ctd_minTick :: IB.Client.Types.ContractDetails -> GHC.Types.Double
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds3 }) -}
5d851c842f4d182704c7f5ad2054818a
  ctd_nextOptionDate ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds30 }) -}
ce1a1ba08b37dd8599c710201bf34fed
  ctd_nextOptionPartial ::
    IB.Client.Types.ContractDetails -> GHC.Types.Bool
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds32 }) -}
274de3123f01dea89052a02b8563401e
  ctd_nextOptionType ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds31 }) -}
09769ca91aa3c50c27f46e7522165d5a
  ctd_notes :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds33 }) -}
d99b5a537d6e1d83e2984a028c4af9ff
  ctd_orderTypes ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds4 }) -}
a9aa07f28f742883ff1c516f436ed94a
  ctd_priceMagnifier ::
    IB.Client.Types.ContractDetails -> GHC.Types.Int
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds6 }) -}
e8069a660e4de3d9a716150cba1f618b
  ctd_putable :: IB.Client.Types.ContractDetails -> GHC.Types.Bool
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds25 }) -}
99dab863c00d24700c14756dabd6a694
  ctd_ratings :: IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds20 }) -}
f3e23be68008364ca769169cb68b3abf
  ctd_secIdList ::
    IB.Client.Types.ContractDetails -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds18 }) -}
488797ad0797b57bd0ac9ee18d66e50e
  ctd_subcategory ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds12 }) -}
1df5442f1fd587ef90c70b0b5780651a
  ctd_summary ::
    IB.Client.Types.ContractDetails -> IB.Client.Types.Contract
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds1 }) -}
920931a366b3cd41d432cb31f401ddc5
  ctd_timeZoneId ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds13 }) -}
2431a9884391b8abae23524576c3758b
  ctd_tradingHours ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds14 }) -}
5c0f86618f563568a9db414616c16b8e
  ctd_underConId :: IB.Client.Types.ContractDetails -> GHC.Types.Int
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds7 }) -}
aa6ca443eaf268a800041031e0cd4cd2
  ctd_validExchanges ::
    IB.Client.Types.ContractDetails -> GHC.Base.String
  RecSel IB.Client.Types.ContractDetails
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ContractDetails ->
                 case ds of wild { IB.Client.Types.ContractDetails ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ->
                 ds5 }) -}
e6059cbc647c6bd54e1b56db64e9c090
  cur :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.cur1
                   IB.Client.Types.AcctValue ds1 ds2 ds3 ds4 -> ds3 }) -}
64ff13e2912964bd7ea0ba1d35079aa9
  cur1 :: GHC.Base.String
  {- Strictness: b -}
011c1cab61896c029dc3d5440bec14e9
  currency :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.currency1
                   IB.Client.Types.CommissionReport ds1 ds2 ds3 ds4 ds5 ds6 -> ds3
                   IB.Client.Types.AccountSummary ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
a8638fe23c87e9c5d1c71bc583b89266
  currency1 :: GHC.Base.String
  {- Strictness: b -}
4345de5cf79a008c5299257951477abe
  cxml :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.cxml1
                   IB.Client.Types.ReceiveFA ds1 ds2 -> ds2 }) -}
7d855a1c5a65ed3e5c3bc44add396df4
  cxml1 :: GHC.Base.String
  {- Strictness: b -}
f1d299ea4c1201b39dd5b9335de4a81a
  dblBoundsCheck ::
    GHC.Types.Double
    -> GHC.Types.Double -> GHC.Types.Double -> GHC.Types.Double
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U(U)><L,1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ upperBounds :: GHC.Types.Double
                   lowerBounds :: GHC.Types.Double
                   inp :: GHC.Types.Double ->
                 case inp of wild { GHC.Types.D# x ->
                 case upperBounds of wild1 { GHC.Types.D# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>## x y) of wild2 {
                   GHC.Types.False
                   -> case lowerBounds of wild3 { GHC.Types.D# y1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<## x y1) of wild4 {
                        GHC.Types.False -> wild
                        GHC.Types.True -> IB.Client.Types.dblMaximum } }
                   GHC.Types.True -> IB.Client.Types.dblMaximum } } }) -}
c7c32061ce64afadfdd19861346f7cdb
  dblCheckNegative :: GHC.Types.Double -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ inp :: GHC.Types.Double ->
                 case inp of wild { GHC.Types.D# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## x 0.0) of wild1 {
                   GHC.Types.False -> wild
                   GHC.Types.True -> IB.Client.Types.dblMaximum } }) -}
2087b4f9fd385ac488d16cf7972fd9cf
  dblDefaultCheck :: GHC.Types.Double -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ inp :: GHC.Types.Double ->
                 case inp of wild { GHC.Types.D# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>## x 1.0) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<## x -1.0) of wild2 {
                        GHC.Types.False -> wild
                        GHC.Types.True -> IB.Client.Types.dblMaximum }
                   GHC.Types.True -> IB.Client.Types.dblMaximum } }) -}
55a8f176ad55535e3cad0db75cb951c5
  dblMaximum :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# Infinity) -}
0b3120b20533ff2c470446e06e480f5b
  defContract :: IB.Client.Types.Contract
  {- HasNoCafRefs,
     Unfolding: (IB.Client.Types.Contract
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.defUnderComp1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ IB.Client.Types.ComboLeg)
                   IB.Client.Types.defUnderComp) -}
a1ecdec0e687427cec1747fc712786b6
  defContractDetails :: IB.Client.Types.ContractDetails
  {- HasNoCafRefs,
     Unfolding: (IB.Client.Types.ContractDetails
                   IB.Client.Types.defContract
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.defUnderComp1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.$fDataContractDetails2
                   IB.Client.Types.int32max
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.dblMaximum
                   (GHC.Types.[] @ IB.Client.Types.TagValue)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   GHC.Types.False
                   IB.Client.Types.defUnderComp1
                   GHC.Types.False
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b90e1e66a86029f92bf357f030230d73
  defOrder :: IB.Client.Types.Order
  {- Unfolding: (IB.Client.Types.Order
                   IB.Client.Types.$fDataContractDetails2
                   IB.Client.Types.$fDataContractDetails2
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True
                   IB.Client.Types.$fDataContractDetails2
                   GHC.Types.False
                   GHC.Types.False
                   IB.Client.Types.$fDataContractDetails2
                   IB.Client.Types.$fDataContractDetails2
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   IB.Client.Types.int32max
                   IB.Client.Types.dblMaximum
                   GHC.Types.False
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.defOrder2
                   IB.Client.Types.CUSTOMER
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.defOrder1
                   IB.Client.Types.defUnderComp1
                   GHC.Types.True
                   GHC.Types.True
                   IB.Client.Types.dblMaximum
                   GHC.Types.False
                   IB.Client.Types.$fDataContractDetails2
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.int32max
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   IB.Client.Types.int32max
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.int32max
                   IB.Client.Types.int32max
                   IB.Client.Types.int32max
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.int32max
                   IB.Client.Types.dblMaximum
                   GHC.Types.False
                   IB.Client.Types.int32max
                   IB.Client.Types.int32max
                   GHC.Types.False
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ IB.Client.Types.TagValue)
                   (GHC.Types.[] @ IB.Client.Types.TagValue)
                   GHC.Types.False
                   GHC.Types.False) -}
26bd9a55e93b628288e54f0f38b01223
  defOrder1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# (-1)) -}
9d18572806bb59f9ebeab0bac9acae91
  defOrder2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "O"#) -}
5e276edd8dc2aa3abdcbe84c05519057
  defScannerSubscription :: IB.Client.Types.ScannerSubscription
  {- HasNoCafRefs,
     Unfolding: (IB.Client.Types.ScannerSubscription
                   IB.Client.Types.defOrder1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.int32max
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.dblMaximum
                   IB.Client.Types.$fDataContractDetails2
                   IB.Client.Types.$fDataContractDetails2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
718f445f675a7f16b2b68a2fb7e4a06d
  defUnderComp :: IB.Client.Types.UnderComp
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (IB.Client.Types.UnderComp
                   IB.Client.Types.$fDataContractDetails2
                   IB.Client.Types.defUnderComp1
                   IB.Client.Types.defUnderComp1) -}
0ef36b3360b56e6c1b441c5ee42532e0
  defUnderComp1 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
ef53af8c7f5839aab268b73c637958a3
  delta :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.delta1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds4 }) -}
51bb3eb712d76d7810e4ce031090596a
  delta1 :: GHC.Types.Double
  {- Strictness: b -}
5a28c21a828e3ef5e55f8afb236d7bc3
  dividendImpact :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.dividendImpact1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds8 }) -}
46c6b7a3c7f5fd928883dc2e8d3177d8
  dividendImpact1 :: GHC.Types.Double
  {- Strictness: b -}
45a9980f2fa0e93dffb135979e7d36a7
  dividendsToExpiry :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.dividendsToExpiry1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds9 }) -}
c50028ae86b7ddf9813407d2571be198
  dividendsToExpiry1 :: GHC.Types.Double
  {- Strictness: b -}
9031a54f3df6931084298f7592cbc8c5
  endDateStr :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.endDateStr1
                   IB.Client.Types.HistoricalData ds1 ds2 ds3 ds4 -> ds3 }) -}
e5e207ce63e22552dbff2caace330665
  endDateStr1 :: GHC.Base.String
  {- Strictness: b -}
b44377711ecf2099dbb190173cb60ffa
  eor_account :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.eor_account1
                   IB.Client.Types.ExerciseOptionsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds5 }) -}
c7d8ae92d47c39603af0c20813998c20
  eor_account1 :: GHC.Base.String
  {- Strictness: b -}
70ae3342d880a8b605c61b492181e3f0
  eor_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.eor_contract1
                   IB.Client.Types.ExerciseOptionsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds2 }) -}
8e0f4200d5bf03ac990c5b8bbb3d9497
  eor_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
cee84580f7822119cd3bf40b097a56dc
  eor_exerciseAction :: IB.Client.Types.Request -> GHC.Types.Int
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.eor_exerciseAction1
                   IB.Client.Types.ExerciseOptionsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds3 }) -}
ad283e0b297485375b3fa1cfdb490e2e
  eor_exerciseAction1 :: GHC.Types.Int
  {- Strictness: b -}
b6c44ec1bb64c5828186229595c6b834
  eor_exerciseQuantity :: IB.Client.Types.Request -> GHC.Types.Int
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.eor_exerciseQuantity1
                   IB.Client.Types.ExerciseOptionsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds4 }) -}
8ac84298c5b2d7ba9511e0e694c7c70c
  eor_exerciseQuantity1 :: GHC.Types.Int
  {- Strictness: b -}
3025e9b3b15396c4adac6979076d0d16
  eor_override :: IB.Client.Types.Request -> GHC.Types.Int
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.eor_override1
                   IB.Client.Types.ExerciseOptionsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds6 }) -}
3860d1d5fe4c9071f9e8ebba2463ea5e
  eor_override1 :: GHC.Types.Int
  {- Strictness: b -}
551f7e5bcd3d92b583e63c5441403928
  errorCode :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.errorCode1
                   IB.Client.Types.Err ds1 ds2 -> ds1 }) -}
b371a391a0037abda2052dc132c9fb63
  errorCode1 :: GHC.Types.Int
  {- Strictness: b -}
afa1bece5a02035a45b25975f7ca141c
  errorMsg :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.errorMsg1
                   IB.Client.Types.Err ds1 ds2 -> ds2 }) -}
7a3c5a4f7c68399d68ea12294d03661a
  errorMsg1 :: GHC.Base.String
  {- Strictness: b -}
97cfb02c4aef41eece9fdda2aade7997
  errorText :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.errorText1
                   IB.Client.Types.VerifyCompleted ds1 ds2 -> ds2 }) -}
db5e3fd5eed67ef996cfca9b1c07f4c8
  errorText1 :: GHC.Base.String
  {- Strictness: b -}
10db74ee4c60f325d2b49d6e92a2b5bd
  ex_acctNumber :: IB.Client.Types.Execution -> GHC.Base.String
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds3 }) -}
645faa546a97980aefbc30cbdf6478cc
  ex_avgPrice :: IB.Client.Types.Execution -> GHC.Types.Double
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
424f3a16eea103a1095a28892ea56cc3
  ex_clientId :: IB.Client.Types.Execution -> GHC.Types.Int
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
6799a745c704f0ca4194b4a2cc2aba8d
  ex_cumQty :: IB.Client.Types.Execution -> GHC.Types.Int
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
b9e1e22423aba7f82b60a863ef4e0467
  ex_evMultiplier :: IB.Client.Types.Execution -> GHC.Types.Double
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
2d03b25e7eb3cfd7cbd40cdfad969edc
  ex_evRule :: IB.Client.Types.Execution -> GHC.Base.String
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
dd51c5fefa5ad134cb70058e78a67e41
  ex_exchange :: IB.Client.Types.Execution -> GHC.Base.String
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds4 }) -}
9bb7967850eedc850bd1e3c9f3c7298e
  ex_execId :: IB.Client.Types.Execution -> GHC.Base.String
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds1 }) -}
74f766e2b480e385bdd607b25b539426
  ex_liquidation :: IB.Client.Types.Execution -> GHC.Types.Int
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
e53408ede5a735d6e5589be8f48ce140
  ex_orderId :: IB.Client.Types.Execution -> GHC.Types.Int
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
9b6323e2955c5945a2a68a6f526c95bb
  ex_orderRef :: IB.Client.Types.Execution -> GHC.Base.String
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
a7aec45c19ff546c26ff26e9e03444d9
  ex_permId :: IB.Client.Types.Execution -> GHC.Types.Int
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
20b2d3ea6d0d0354ec17f639a740842f
  ex_price :: IB.Client.Types.Execution -> GHC.Types.Double
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
ec88427e571cc649eff1a10185dd8af9
  ex_shares :: IB.Client.Types.Execution -> GHC.Types.Int
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds6 }) -}
a9a2c71953d1050fa7cb3b9ab31eda48
  ex_side :: IB.Client.Types.Execution -> GHC.Base.String
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds5 }) -}
5a48ca14ebd315597375e313c048e1cd
  ex_time :: IB.Client.Types.Execution -> GHC.Base.String
  RecSel IB.Client.Types.Execution
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Execution ->
                 case ds of wild { IB.Client.Types.Execution ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds2 }) -}
d13284308b4754eff42b53b14d9909f9
  exe_filter ::
    IB.Client.Types.Request -> IB.Client.Types.ExecutionFilter
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.exe_filter1
                   IB.Client.Types.ExecutionsReq ds1 ds2 -> ds2 }) -}
5ef29f91dd25a4ef1a469bdafbadfc2a
  exe_filter1 :: IB.Client.Types.ExecutionFilter
  {- Strictness: b -}
9782bc951e9caa992d29e77327b1ef78
  exec :: IB.Client.Types.IBMessage -> IB.Client.Types.Execution
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.exec1
                   IB.Client.Types.ExecutionData ds1 ds2 ds3 -> ds3 }) -}
cafc61fa38d8d8a2b72fc46a8e9dd3d7
  exec1 :: IB.Client.Types.Execution
  {- Strictness: b -}
e267d6bcbc175fed87aec3ad7dfe32e9
  execId :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.execId1
                   IB.Client.Types.CommissionReport ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds1 }) -}
99066015b5465be3084307af3e6e0808
  execId1 :: GHC.Base.String
  {- Strictness: b -}
a1454c5c1f7029757ce8a4caf8a3a823
  exf_acctCode :: IB.Client.Types.ExecutionFilter -> GHC.Base.String
  RecSel IB.Client.Types.ExecutionFilter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds2 }) -}
8a0c9367498faa1069a3f280d1901934
  exf_clientId :: IB.Client.Types.ExecutionFilter -> GHC.Types.Int
  RecSel IB.Client.Types.ExecutionFilter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U(U),A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds1 }) -}
bb7e636f0f3b9d27b02f5fafc5eb663a
  exf_exchange :: IB.Client.Types.ExecutionFilter -> GHC.Base.String
  RecSel IB.Client.Types.ExecutionFilter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds6 }) -}
28eebf423872dc3339ed4b1cf45d962b
  exf_secType :: IB.Client.Types.ExecutionFilter -> GHC.Base.String
  RecSel IB.Client.Types.ExecutionFilter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds5 }) -}
a23241e01c10f603a1e0c9c62017e557
  exf_side :: IB.Client.Types.ExecutionFilter -> GHC.Base.String
  RecSel IB.Client.Types.ExecutionFilter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds7 }) -}
551aeaeba51b7a37bbda8c125f882916
  exf_symbol :: IB.Client.Types.ExecutionFilter -> GHC.Base.String
  RecSel IB.Client.Types.ExecutionFilter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds4 }) -}
1f823c89b486e36722ea5aeb09cf19f3
  exf_time :: IB.Client.Types.ExecutionFilter -> GHC.Base.String
  RecSel IB.Client.Types.ExecutionFilter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ExecutionFilter ->
                 case ds of wild { IB.Client.Types.ExecutionFilter ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds3 }) -}
97f00873d6ebf29acff2fe9cc2fec0e1
  faDataTypeInt :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.faDataTypeInt1
                   IB.Client.Types.ReceiveFA ds1 ds2 -> ds1 }) -}
575a76cfdde68d6bf29f3bac437cdef9
  faDataTypeInt1 :: GHC.Types.Int
  {- Strictness: b -}
3bb91c4e752000c1b420351dba28cf78
  far_cxml :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.far_cxml1
                   IB.Client.Types.FAReplaceReq ds1 ds2 -> ds2 }) -}
90cc207b56e769cdb094f740c65d5438
  far_cxml1 :: GHC.Base.String
  {- Strictness: b -}
6e77aeca7a31c68c04307c6a35777142
  far_pFaDataType ::
    IB.Client.Types.Request -> IB.Client.Types.FaDataType
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.far_pFaDataType1
                   IB.Client.Types.FAReplaceReq ds1 ds2 -> ds1 }) -}
d21edc152590399d6980f00f5d554007
  far_pFaDataType1 :: IB.Client.Types.FaDataType
  {- Strictness: b -}
4b4fec2219f2835441c2c1bb7a6eba95
  fdata :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.fdata1
                   IB.Client.Types.FundamentalData ds1 ds2 -> ds2 }) -}
5eb4eaccd830ef87d6585c99703c0729
  fdata1 :: GHC.Base.String
  {- Strictness: b -}
9e2b88e2d67cf6f6fee60db097044cdd
  fdr_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.fdr_contract1
                   IB.Client.Types.FundamentalDataReq ds1 ds2 ds3 -> ds2 }) -}
97dce91a062890519c800af3eb695da8
  fdr_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
7cd9f6aef0521f31ea8121358a9fae4e
  fdr_reportType :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.fdr_reportType1
                   IB.Client.Types.FundamentalDataReq ds1 ds2 ds3 -> ds3 }) -}
6e9243207a82c604b3f43e79d5b9508b
  fdr_reportType1 :: GHC.Base.String
  {- Strictness: b -}
439b42b3f116aff7ceba8b8f69917956
  filled :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.filled1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds3 }) -}
4ed66440dbfcd9e387c0ca337ebac6a9
  filled1 :: GHC.Types.Int
  {- Strictness: b -}
04fad9da0734bd09beca000d3b935252
  formattedBasisPoints ::
    IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.formattedBasisPoints1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds4 }) -}
e3ae74acf14e7dc5d5c3164ce2151d73
  formattedBasisPoints1 :: GHC.Base.String
  {- Strictness: b -}
bf83f00c285c927223f0707f832bdc1c
  fromBool :: GHC.Num.Num a => GHC.Types.Bool -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a43 $dNum :: GHC.Num.Num a43 ds :: GHC.Types.Bool ->
                 case ds of wild {
                   GHC.Types.False
                   -> GHC.Num.fromInteger @ a43 $dNum IB.Client.Types.fromBool2
                   GHC.Types.True
                   -> GHC.Num.fromInteger @ a43 $dNum IB.Client.Types.fromBool1 }) -}
8a9b4320ef0d161ebfcec9df2105a6e7
  fromBool1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
2c0ac9c0128c06fa20ec7b5cf0596769
  fromBool2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
78b5a87f484f900d2e4bf9f99a928c78
  fromEnum' :: GHC.Enum.Enum a => a -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLC(S)LLLL),1*U(A,A,A,1*C1(U(U)),A,A,A,A)><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a43 $dEnum :: GHC.Enum.Enum a43 a44 :: a43 ->
                 case GHC.Enum.fromEnum @ a43 $dEnum a44 of wild { GHC.Types.I# x ->
                 GHC.Types.I# (GHC.Prim.+# x 1) }) -}
f2e0cb0e2dca70ad2f455d0f2df5d8e2
  futureExpiry :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.futureExpiry1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds7 }) -}
b7ec6452d964a1aaba8e2c1bacfe40bf
  futureExpiry1 :: GHC.Base.String
  {- Strictness: b -}
9575834ee92a8514cff9fd0918a2d1f1
  gamma :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.gamma1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds7 }) -}
2938b63f4be90d97bbdcb6e6597d99e9
  gamma1 :: GHC.Types.Double
  {- Strictness: b -}
20b4a011694c7c70a52e185689096a40
  groups :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.groups1
                   IB.Client.Types.DisplayGroupList ds1 ds2 -> ds2 }) -}
0f0acb4dcd6969597ca3daaf5da58115
  groups1 :: GHC.Base.String
  {- Strictness: b -}
903b1c47a211a14cc622f283a78cb7fc
  hdr_barSizeSetting :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_barSizeSetting1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds5 }) -}
361c520571fa7b7ade161dad0043ed51
  hdr_barSizeSetting1 :: GHC.Base.String
  {- Strictness: b -}
1b3ed178d1c60a1b8468690d7075a773
  hdr_chartOptions ::
    IB.Client.Types.Request -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_chartOptions1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds9 }) -}
e22059ba506fecc42d1216eeb05d220f
  hdr_chartOptions1 :: [IB.Client.Types.TagValue]
  {- Strictness: b -}
282af2b3d6761ad37be76a9d33384c50
  hdr_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_contract1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds2 }) -}
864c13c9a3ca7d231f52cfe057de4c75
  hdr_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
5d5aeef25ec7a68bde39d2a3280c8776
  hdr_durationStr :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_durationStr1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds4 }) -}
35efa5eafe84d42d459772d8cbc6bd46
  hdr_durationStr1 :: GHC.Base.String
  {- Strictness: b -}
1c1ee16d4c934492d268b05f0a1e3e93
  hdr_endDataTime :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_endDataTime1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds3 }) -}
53c5f1141f2a0a692e4447dd2bead283
  hdr_endDataTime1 :: GHC.Base.String
  {- Strictness: b -}
af1ff1e4d7ceb61af892a41cd194bd7d
  hdr_formatDate :: IB.Client.Types.Request -> GHC.Types.Int
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_formatDate1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds8 }) -}
6718c37c3573d6a7c20bdeb6ddb6ab3a
  hdr_formatDate1 :: GHC.Types.Int
  {- Strictness: b -}
5a762b8afb9b2217b71845316e2ead30
  hdr_useRTH :: IB.Client.Types.Request -> GHC.Types.Int
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_useRTH1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds7 }) -}
af6db650ba43d29f7974bb828fafd5bb
  hdr_useRTH1 :: GHC.Types.Int
  {- Strictness: b -}
62f2748edeab8e51b94be0de5d4159cc
  hdr_whatToShow :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.hdr_whatToShow1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds6 }) -}
71027df02fa6d81583f763432b4f4e59
  hdr_whatToShow1 :: GHC.Base.String
  {- Strictness: b -}
4032e34f2212a6a29c61a001b74b9886
  high :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.high1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds4 }) -}
0610a88227c2d096c4284d83b355ee41
  high1 :: GHC.Types.Double
  {- Strictness: b -}
a673bb2bc172192cecd72746eb5a6854
  holdDays :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.holdDays1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds6 }) -}
3c4beaec37be321f6c8a02cb2604ceda
  holdDays1 :: GHC.Types.Int
  {- Strictness: b -}
7522cb11699979dbef6833c47cf3e6ef
  id :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.id1
                   IB.Client.Types.MarketDepth ds1 ds2 ds3 ds4 ds5 ds6 -> ds1
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7
                   -> ds1 }) -}
c7c6faf98a869dfea2f65afdad931a62
  id1 :: GHC.Types.Int
  {- Strictness: b -}
a62c7f4d1c9f0783bf9ecf60b941cbba
  idToMsg :: GHC.Types.Int -> IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 IB.Client.Types.$widToMsg ww1 }) -}
1bb13724675c7d223e3b05c9dc345a0c
  impliedFuturesPrice ::
    IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.impliedFuturesPrice1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds5 }) -}
99d868cdac60283ca6a966a6a0fe2099
  impliedFuturesPrice1 :: GHC.Types.Double
  {- Strictness: b -}
65f9f716cb7282e817f2c69bd9a14a39
  impliedVol :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.impliedVol1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds3 }) -}
87bf98691ab7d3f98c413f2d5b17e1b7
  impliedVol1 :: GHC.Types.Double
  {- Strictness: b -}
87263ed227140ea8fa3a84890f3b0dac
  int32max :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 2147483647) -}
8c7f94a2969e601f8da23fc3a80567a2
  int32min :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# (-2147483648)) -}
bd1548b1c6a3f3e5179499e47445dbfc
  isPrice :: IB.Client.Types.TickType -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: IB.Client.Types.TickType ->
                 case x of x1 { DEFAULT ->
                 case GHC.Prim.dataToTag# @ IB.Client.Types.TickType x1 of wild {
                   DEFAULT
                   -> case GHC.Prim.dataToTag#
                             @ IB.Client.Types.TickType
                             x1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ IB.Client.Types.TickType
                                  x1 of wild2 {
                             DEFAULT -> GHC.Types.False 4 -> GHC.Types.True }
                        2 -> GHC.Types.True }
                   1 -> GHC.Types.True } }) -}
142c082b36eb651f961dfbf48df8e7c9
  isSuccessful :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.isSuccessful1
                   IB.Client.Types.VerifyCompleted ds1 ds2 -> ds1 }) -}
0d2014db831875bcb68588df38b58eca
  isSuccessful1 :: GHC.Base.String
  {- Strictness: b -}
13ad6639597991bae5885ba8174d2f60
  ivr_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.ivr_contract1
                   IB.Client.Types.ImpliedVolatilityReq ds1 ds2 ds3 ds4 -> ds2 }) -}
cdc1ee7341b4bcc93fe726583b765a99
  ivr_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
73c019b645dc3ae1317ed122b103e5de
  ivr_optionPrice :: IB.Client.Types.Request -> GHC.Types.Double
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.ivr_optionPrice1
                   IB.Client.Types.ImpliedVolatilityReq ds1 ds2 ds3 ds4 -> ds3 }) -}
aac6fa39359e680cab2778129c11a40a
  ivr_optionPrice1 :: GHC.Types.Double
  {- Strictness: b -}
1538f817236ea68fdf671af9449a5903
  ivr_underPrice :: IB.Client.Types.Request -> GHC.Types.Double
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.ivr_underPrice1
                   IB.Client.Types.ImpliedVolatilityReq ds1 ds2 ds3 ds4 -> ds4 }) -}
7dbb1a56fcfcff16c7f5f6e0988e96c1
  ivr_underPrice1 :: GHC.Types.Double
  {- Strictness: b -}
6cce350a8ccc49f3e304999c53cb6a92
  key :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.key1
                   IB.Client.Types.AcctValue ds1 ds2 ds3 ds4 -> ds1 }) -}
e853e2b0d628b362501b31bc397a9d39
  key1 :: GHC.Base.String
  {- Strictness: b -}
b128f76e43bad448f7b352e546bc2348
  lastFillPrice :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.lastFillPrice1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds8 }) -}
52e5f6f806b71385a24f7f0c83791610
  lastFillPrice1 :: GHC.Types.Double
  {- Strictness: b -}
e40373a5fc7ead1134280753a0412ed9
  low :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.low1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds5 }) -}
f3405fa83f7f482918cfd2f1e93adf19
  low1 :: GHC.Types.Double
  {- Strictness: b -}
e87cd01d99afd155c26be86e724bd803
  marketDataType :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.marketDataType1
                   IB.Client.Types.MarketDataType ds1 ds2 -> ds2 }) -}
1572c25a5829920a9da5f149d641e0ba
  marketDataType1 :: GHC.Types.Int
  {- Strictness: b -}
54f1e78baeab8fbe22ebab995876274b
  marketMaker :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.marketMaker1
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7
                   -> ds3 }) -}
4524f43c7480511039093f602527fd4c
  marketMaker1 :: GHC.Base.String
  {- Strictness: b -}
21f552c9661e39fe158d5656a0ed0473
  marketPrice :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.marketPrice1
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds3 }) -}
4b51e64b17eab2db61d3d6ac4a2df21c
  marketPrice1 :: GHC.Types.Double
  {- Strictness: b -}
d338fbc7e64fccc6ecce5765802795fb
  marketValue :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.marketValue1
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds4 }) -}
85ad76e463b610494594b021a9ea3c74
  marketValue1 :: GHC.Types.Double
  {- Strictness: b -}
31de3eb68ed660f467037945ca3dab65
  mdr_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.mdr_contract1
                   IB.Client.Types.MktDataReq ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
d342fbae3f77bbc0955948a50c300537
  mdr_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
241c2a04b78146a2b7692cfcfe235d6f
  mdr_genericTicks :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.mdr_genericTicks1
                   IB.Client.Types.MktDataReq ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
b39a557cb7e6335140a27f6cb1ffca44
  mdr_genericTicks1 :: GHC.Base.String
  {- Strictness: b -}
74a8bebeaa9f8f3542504a2863fac468
  mdr_mktDataOptions ::
    IB.Client.Types.Request -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.mdr_mktDataOptions1
                   IB.Client.Types.MktDataReq ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
4698fc72a4af484834f7fd46c2bcd72a
  mdr_mktDataOptions1 :: [IB.Client.Types.TagValue]
  {- Strictness: b -}
f25ddd8edf833334ab1ec50785a7c7da
  mdr_snapshot :: IB.Client.Types.Request -> GHC.Types.Bool
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.mdr_snapshot1
                   IB.Client.Types.MktDataReq ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
f35112a0a08b92fd0a55a6e7bb3989ed
  mdr_snapshot1 :: GHC.Types.Bool
  {- Strictness: b -}
6432ff038c7eda02f92f605984a47d26
  mkr_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.mkr_contract1
                   IB.Client.Types.MktDepthReq ds1 ds2 ds3 ds4 -> ds2 }) -}
3ae831d760f39ebefa80abc90356e948
  mkr_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
cc6e073d0372fa4db23b9545844c6002
  mkr_mktDepthOptions ::
    IB.Client.Types.Request -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.mkr_mktDepthOptions1
                   IB.Client.Types.MktDepthReq ds1 ds2 ds3 ds4 -> ds4 }) -}
a868d7bbe49293541e28f223c6eacd3b
  mkr_mktDepthOptions1 :: [IB.Client.Types.TagValue]
  {- Strictness: b -}
e548ed82d69c7d35a66abb3727316d5b
  mkr_numRows :: IB.Client.Types.Request -> GHC.Types.Int
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.mkr_numRows1
                   IB.Client.Types.MktDepthReq ds1 ds2 ds3 ds4 -> ds3 }) -}
5e6efbed46322b27189097caf08e900f
  mkr_numRows1 :: GHC.Types.Int
  {- Strictness: b -}
364d75368d6734fd23981649c7882aa4
  msgId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.msgId1
                   IB.Client.Types.NewsBulletins ds1 ds2 ds3 ds4 -> ds1 }) -}
d7c161a2ec9c4dde0fe6557523ccd440
  msgId1 :: GHC.Types.Int
  {- Strictness: b -}
cd16f24eb86ee5222bdeae0ab52d9178
  msgToId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ msg :: IB.Client.Types.IBMessage ->
                 case IB.Client.Types.$fDataIBMessage_$ctoConstr
                        msg of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 case ww1 of wild {
                   DEFAULT -> Data.Data.constrIndex1 ww5
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># x 21) of wild2 {
                        GHC.Types.False -> wild1
                        GHC.Types.True -> GHC.Types.I# (GHC.Prim.+# x 23) } } } }) -}
5a06d7ad19908bccabe2db5ed384c6f4
  msgType :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.msgType1
                   IB.Client.Types.NewsBulletins ds1 ds2 ds3 ds4 -> ds2 }) -}
32625e644346128fd9280d9994c452ec
  msgType1 :: GHC.Types.Int
  {- Strictness: b -}
6d23ef5208a6a05c44d1f81ac15c65b6
  newsMessage :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.newsMessage1
                   IB.Client.Types.NewsBulletins ds1 ds2 ds3 ds4 -> ds3 }) -}
a67866c682e311c73dd1d54723ee36f0
  newsMessage1 :: GHC.Base.String
  {- Strictness: b -}
eb2d6070e59489f0147170e16ff92d27
  open :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.open1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds3 }) -}
c85ca6fff8883171ab4549c661164953
  open1 :: GHC.Types.Double
  {- Strictness: b -}
2b7f623674984c286143150c37c0add2
  operation :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.operation1
                   IB.Client.Types.MarketDepth ds1 ds2 ds3 ds4 ds5 ds6 -> ds3
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7
                   -> ds4 }) -}
00e9f047145cc3c638177072949a120c
  operation1 :: GHC.Types.Int
  {- Strictness: b -}
19721b751f8d2afe2593193ea0450a64
  opr_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.opr_contract1
                   IB.Client.Types.CalcOptionPriceReq ds1 ds2 ds3 ds4 -> ds2 }) -}
98dca07a5fb04c4c403848c131892b91
  opr_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
72993a19b263b3b01e84000262fffb2e
  opr_underPrice :: IB.Client.Types.Request -> GHC.Types.Double
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.opr_underPrice1
                   IB.Client.Types.CalcOptionPriceReq ds1 ds2 ds3 ds4 -> ds4 }) -}
43623f6647b17ad137558fb8e3a34138
  opr_underPrice1 :: GHC.Types.Double
  {- Strictness: b -}
4bb808b5c17d2fc3b4bf97719f1b71b0
  opr_volatility :: IB.Client.Types.Request -> GHC.Types.Double
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.opr_volatility1
                   IB.Client.Types.CalcOptionPriceReq ds1 ds2 ds3 ds4 -> ds3 }) -}
b8f3fe79ad4b5e76b4033ec7fa02e2de
  opr_volatility1 :: GHC.Types.Double
  {- Strictness: b -}
04a743c31593ade394bffa28d583f54a
  optPrice :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.optPrice1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds5 }) -}
770b459bddcc0167066f73b9d809992f
  optPrice1 :: GHC.Types.Double
  {- Strictness: b -}
9acabb0f557883e750ad160db1fb5b2c
  ord_account :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds81 }) -}
50d57f09684d7ddcb998eb6ba3806298
  ord_action :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds4 }) -}
c1b53912fd4016e5ca2b91c0108b612b
  ord_activeStartTime :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds10 }) -}
23efa0ddca055daf3ba2e1e613ec943a
  ord_activeStopTime :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds11 }) -}
a6f1527edb921363323c94e89ca409bb
  ord_algoParams ::
    IB.Client.Types.Order -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds86 }) -}
426259f169221e3e65f041ba6e2f578c
  ord_algoStrategy :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds85 }) -}
357cfed4bffa6020880f1a03509ca4ca
  ord_allOrNone :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds26 }) -}
fd1cfe9129c679b1c93aab77b0897907
  ord_auctionStrategy :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds46 }) -}
db74906560daa30161fb05a81d10f42e
  ord_auxPrice :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds8 }) -}
768de681268d39bae41dab3ebe632624
  ord_basisPoints :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds66 }) -}
e9d52164f4a6acc7a16c97f029277d73
  ord_basisPointsType :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds67 }) -}
dfc9bc665253075eb9a43b32675c9dcd
  ord_blockOrder :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds17 }) -}
4180ab89f8ece3c37f4865a2aee3f485
  ord_clearingAccount :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds83 }) -}
76af303af53e0772e1d511ffdc826c15
  ord_clearingIntent :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds84 }) -}
7da804bdefb1fea26f7d528240de46e0
  ord_clientId :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds2 }) -}
1fd2652e30b27c7927d541ae66911b16
  ord_continuousUpdate :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds64 }) -}
e3d546f7ee4d699368a34f848df70d64
  ord_delta :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds49 }) -}
9e5e4822e962b585e97e349998180c56
  ord_deltaNeutralAuxPrice ::
    IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds55 }) -}
827489731bbc3950687c11632b02cd05
  ord_deltaNeutralClearingAccount ::
    IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds58 }) -}
4f10182b62dbe327ac1d4223c1081e10
  ord_deltaNeutralClearingIntent ::
    IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds59 }) -}
9ab3ad0ebb57b6b7e2483ebabb8d6768
  ord_deltaNeutralConId :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds56 }) -}
f96fb38f28e1a08a3a92b1b1279d1d5b
  ord_deltaNeutralDesignatedLocation ::
    IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds63 }) -}
c7f34565981e4dbd06e97c8f6dd4bade
  ord_deltaNeutralOpenClose ::
    IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds60 }) -}
ee1836bd5bc5e9f422c236c681e845ad
  ord_deltaNeutralOrderType ::
    IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds54 }) -}
09ee9a7c010ae9f570137716e0179750
  ord_deltaNeutralSettlingFirm ::
    IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds57 }) -}
2b9e1d01cd43db36fcc4e2bbc48fed0f
  ord_deltaNeutralShortSale ::
    IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds61 }) -}
6e924945dcbc9c7d865cec79d4cc7286
  ord_deltaNeutralShortSaleSlot ::
    IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds62 }) -}
31a6f67a39dacd411c39650a88c157e4
  ord_designatedLocation :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds39 }) -}
22420adef0586b313d878569367dec6f
  ord_discretionaryAmt :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds41 }) -}
4638e80ac60138697508d2f84f65227c
  ord_displaySize :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds19 }) -}
a0602e04e2955a77ef5cade100a21dbe
  ord_eTradeOnly :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds42 }) -}
72b19def2c17cc15014acda0d76a09a8
  ord_exemptCode :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds40 }) -}
b62627ce2b1a04163bab53980f04e94e
  ord_faGroup :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds32 }) -}
0ea2e00762f2e7415313c4a1df88dd2f
  ord_faMethod :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds34 }) -}
050423c129b0ed91e4886204323530a6
  ord_faPercentage :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds35 }) -}
5fbe941750b0cde05bd9b5a6d0fc1c19
  ord_faProfile :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds33 }) -}
92f61d1e75b5259087e7f4b05dca08e7
  ord_firmQuoteOnly :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds43 }) -}
286924ef130560fee622dfe5a861a681
  ord_goodAfterTime :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds23 }) -}
c3a161c5f3016975b64ed5282ac6335b
  ord_goodTillDate :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds24 }) -}
275ec61b764a2c90c82b3f7beac1c41d
  ord_hedgeParam :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds80 }) -}
5435359acb87a338d3e3cec6968082b1
  ord_hedgeType :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds79 }) -}
b735f862123ce29037845ffb2cc693a6
  ord_hidden :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds22 }) -}
4a30a3ed8b9317db5b725bc1c2ab3708
  ord_lmtPrice :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds7 }) -}
417639c3088ecd2ae7ffb65824dd769c
  ord_minQty :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds27 }) -}
90f9a2605f450ce61cecb9bd8c53e5b2
  ord_nbboPriceCap :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds44 }) -}
46a4605c986580b3c33500255b28c70f
  ord_notHeld :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds89 }) -}
ff53fea212b89839cf61530015706a50
  ord_ocaGroup :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds12 }) -}
b633a777f68bc1593bc92b6942b740e2
  ord_ocaType :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds13 }) -}
86dab27d95150a2887789346c181bb80
  ord_openClose :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds36 }) -}
eae6edeacd457ae69b5e600777b8190d
  ord_optOutSmartRouting :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds45 }) -}
0389358c12ac361dab3368bebef0c338
  ord_orderId :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds1 }) -}
cc78f75d4453a829ade4512a282217ff
  ord_orderRef :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds14 }) -}
397bffe921e528a6ef6b5234d3f84b8a
  ord_orderType :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds6 }) -}
bc2606f43d514278c5632bbbf8821f79
  ord_origin :: IB.Client.Types.Order -> IB.Client.Types.Origin
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds37 }) -}
b449a665812f27054c2e0a0b88974b15
  ord_outsideRth :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds21 }) -}
ce8b6c39826b403c93cb8d784394df26
  ord_overridePercentageConstraints ::
    IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds29 }) -}
e766139450c96869536ecbb593202cc8
  ord_parentId :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds16 }) -}
f7bd3c97aef003ab3baf5b6c98bae96c
  ord_percentOffset :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds28 }) -}
609ad34611fbf0e145a9259d2506a825
  ord_permId :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds3 }) -}
ae37cf92b48293ffb7dd233a0444745f
  ord_referencePriceType :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds65 }) -}
e73e930af979992c39fec51ed5e9da33
  ord_rule80A :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds25 }) -}
c0c20e72ce2fb6df31f0544fdbd449c4
  ord_scaleAutoReset :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds74 }) -}
fda1d0d7b12bc2300553b3ecf2fb8e06
  ord_scaleInitFillQty :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds76 }) -}
f92677c4801fc923de543399b80153e4
  ord_scaleInitLevelSize :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds68 }) -}
aa42ad4e6191deaba358d89f0751201a
  ord_scaleInitPosition :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds75 }) -}
f61be4bfcf890dee375ca81088f842ac
  ord_scalePriceAdjustInterval ::
    IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds72 }) -}
ecafcae2a2d6c6b3a0d7fc926d4e168f
  ord_scalePriceAdjustValue ::
    IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds71 }) -}
cd7fc6ffbcf6ba55e0c7fd8c687a941c
  ord_scalePriceIncrement ::
    IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds70 }) -}
2668868b8befabe4402dbf6c4ffe2c70
  ord_scaleProfitOffset :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds73 }) -}
ef9218313f1a58ec41e881d9693e8ad5
  ord_scaleRandomPercent :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds77 }) -}
f191653eff05557e8acf9fde526aa926
  ord_scaleSubsLevelSize :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds69 }) -}
4305ededb561d1be484e68e075991a83
  ord_scaleTable :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds78 }) -}
77366719cce442f1af1e48917b60bd7d
  ord_settlingFirm :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds82 }) -}
460261ea1f47b97effd30f05fb9ea946
  ord_shortSaleSlot :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds38 }) -}
66da0dd6f4ab2b5fb5ae96ec9c9e3773
  ord_smartComboRoutingParams ::
    IB.Client.Types.Order -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds87 }) -}
ca9dd684d8bc4b10984dfa10792ec336
  ord_startingPrice :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds47 }) -}
8b5b1da441cb9ceb19eda252c6321b82
  ord_stockRangeLower :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds50 }) -}
bd3e42194688e5ee7d1a02f0af34a493
  ord_stockRangeUpper :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds51 }) -}
dc787884a0915cdf7f1e55f960e0f771
  ord_stockRefPrice :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds48 }) -}
81e96c385f846ec87f1f40a6225c9832
  ord_sweepToFill :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds18 }) -}
3a0acd076e6dcbf8b57051618567a5c9
  ord_tif :: IB.Client.Types.Order -> GHC.Base.String
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds9 }) -}
f07ce77f56aa0b769c617dd8450a95fb
  ord_totalQuantity :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds5 }) -}
331dde74ff63966783c4a9dc2694faea
  ord_trailStopPrice :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds30 }) -}
bc93ac500f9837bd7b7b163919c50983
  ord_trailingPercent :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds31 }) -}
511b8d88e1de5f40986bf2c9c5660aa9
  ord_transmit :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds15 }) -}
16afc82da3d656f1da0769a92f77d93b
  ord_triggerMethod :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds20 }) -}
99e996600ac7393897521fa08511f40f
  ord_volatility :: IB.Client.Types.Order -> GHC.Types.Double
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds52 }) -}
fcb74059e64f54220536a28d8274d250
  ord_volatilityType :: IB.Client.Types.Order -> GHC.Types.Int
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds53 }) -}
cfd4d811167862d156b308a250e582a7
  ord_whatIf :: IB.Client.Types.Order -> GHC.Types.Bool
  RecSel IB.Client.Types.Order
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Order ->
                 case ds of wild { IB.Client.Types.Order ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ds33 ds34 ds35 ds36 ds37 ds38 ds39 ds40 ds41 ds42 ds43 ds44 ds45 ds46 ds47 ds48 ds49 ds50 ds51 ds52 ds53 ds54 ds55 ds56 ds57 ds58 ds59 ds60 ds61 ds62 ds63 ds64 ds65 ds66 ds67 ds68 ds69 ds70 ds71 ds72 ds73 ds74 ds75 ds76 ds77 ds78 ds79 ds80 ds81 ds82 ds83 ds84 ds85 ds86 ds87 ds88 ds89 ->
                 ds88 }) -}
11becc452fa5c9c8f1ba966ffe89fe3e
  order :: IB.Client.Types.IBMessage -> IB.Client.Types.Order
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.order1
                   IB.Client.Types.OpenOrder ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
a9a671605578716969ce5157629bf4a8
  order1 :: IB.Client.Types.Order
  {- Strictness: b -}
8d6ee74cdf64a058976a4fbff0209cb4
  orderComboLegs ::
    IB.Client.Types.IBMessage -> [IB.Client.Types.OrderComboLeg]
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.orderComboLegs1
                   IB.Client.Types.OpenOrder ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
85389dab50eeda2cb0130e05529742f9
  orderComboLegs1 :: [IB.Client.Types.OrderComboLeg]
  {- Strictness: b -}
e70dea962e501af0b68a952fd166fb57
  orderId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.orderId1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds1 }) -}
ffee0f081d8203ff70a67214a7d24855
  orderId1 :: GHC.Types.Int
  {- Strictness: b -}
056c30828bf3d206f20d50d5d57c10a5
  orderState ::
    IB.Client.Types.IBMessage -> IB.Client.Types.OrderState
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.orderState1
                   IB.Client.Types.OpenOrder ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
3a83d28cad58d5514b6e9c2c06cfe265
  orderState1 :: IB.Client.Types.OrderState
  {- Strictness: b -}
110c8725222708a6834487867785797c
  originatingExch :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.originatingExch1
                   IB.Client.Types.NewsBulletins ds1 ds2 ds3 ds4 -> ds4 }) -}
b17f9a1cbd0d101ab37567076f9a7f59
  originatingExch1 :: GHC.Base.String
  {- Strictness: b -}
cb3b81e666ec6083c47f9a03b40443c6
  os_commission :: IB.Client.Types.OrderState -> GHC.Types.Double
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds5 }) -}
50ddbb763abab98b7a5a5f9c317b7115
  os_commissionCurrency ::
    IB.Client.Types.OrderState -> GHC.Base.String
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSL),1*U(A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds8 }) -}
4dfca966e5062a0f274c2e183b3c584e
  os_equityWithLoan :: IB.Client.Types.OrderState -> GHC.Base.String
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLL),1*U(A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds4 }) -}
c164cef06cda9c9d01c90087e9516005
  os_initMargin :: IB.Client.Types.OrderState -> GHC.Base.String
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds2 }) -}
7d68cda8285c3779eb98129ed828c630
  os_maintMargin :: IB.Client.Types.OrderState -> GHC.Base.String
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds3 }) -}
8fac1617153a170298e672501c2a5b97
  os_maxCommission :: IB.Client.Types.OrderState -> GHC.Types.Double
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLL),1*U(A,A,A,A,A,A,1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds7 }) -}
77a450ea2bfc1ffc089c6dd0aeedbb4b
  os_minCommission :: IB.Client.Types.OrderState -> GHC.Types.Double
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLL),1*U(A,A,A,A,A,1*U(U),A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds6 }) -}
a98235c095735bc94dd2bfcdfae0e29e
  os_status :: IB.Client.Types.OrderState -> GHC.Base.String
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds1 }) -}
05e63024c7d99fbfa45d1db9faea162a
  os_warningText :: IB.Client.Types.OrderState -> GHC.Base.String
  RecSel IB.Client.Types.OrderState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLS),1*U(A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.OrderState ->
                 case ds of wild { IB.Client.Types.OrderState ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 ds9 }) -}
baceef753f447165a5c9046ed0a85081
  parentId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.parentId1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds7 }) -}
8987ea9b2e546a31bbc58c93e1b7e846
  parentId1 :: GHC.Types.Int
  {- Strictness: b -}
d94ca8caba9eca483f32dc9f06729040
  permId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.permId1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds6 }) -}
dcf8557996a5a7c4d826734d25ca78ba
  permId1 :: GHC.Types.Int
  {- Strictness: b -}
30154708a4b93dd5b1b8e1a1b9ea3d9c
  por_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.por_contract1
                   IB.Client.Types.PlaceOrder ds1 ds2 ds3 -> ds2 }) -}
a4d7706094709d0abaf2bfbcbe4f3c82
  por_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
d77643b9c020105559c04fb9cd0cbe24
  por_order :: IB.Client.Types.Request -> IB.Client.Types.Order
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.por_order1
                   IB.Client.Types.PlaceOrder ds1 ds2 ds3 -> ds3 }) -}
c19c812d007ab485837e99eb8922492f
  por_order1 :: IB.Client.Types.Order
  {- Strictness: b -}
4231aaa767867a242354130f3afe2a7b
  position :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.position1
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds2
                   IB.Client.Types.MarketDepth ds1 ds2 ds3 ds4 ds5 ds6 -> ds2
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7 -> ds2
                   IB.Client.Types.PositionData ds1 ds2 ds3 ds4 -> ds3 }) -}
5cde241a3aa45b61a8eb5a7bab195b3a
  position1 :: GHC.Types.Int
  {- Strictness: b -}
da9d1f448ab523f60f701c8407192265
  pre_serverVersion :: IB.Client.Types.Preamble -> GHC.Types.Int
  RecSel IB.Client.Types.Preamble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Preamble ->
                 case ds of wild { IB.Client.Types.Preamble ds1 ds2 -> ds1 }) -}
f17c2544905300c012df12301e74a3fa
  pre_twsTime :: IB.Client.Types.Preamble -> GHC.Base.String
  RecSel IB.Client.Types.Preamble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Preamble ->
                 case ds of wild { IB.Client.Types.Preamble ds1 ds2 -> ds2 }) -}
ec87f0176212ed7ab98d56a3df4d04da
  price :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.price1
                   IB.Client.Types.TickPrice ds1 ds2 ds3 ds4 ds5 -> ds3
                   IB.Client.Types.TickSize ds1 ds2 ds3 ds4 -> ds3
                   IB.Client.Types.MarketDepth ds1 ds2 ds3 ds4 ds5 ds6 -> ds5
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7
                   -> ds6 }) -}
04617ede5056080d3995e921f154579f
  price1 :: GHC.Types.Double
  {- Strictness: b -}
eeada1be508bd32382bc67c5a9f69850
  pvDividend :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.pvDividend1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds6 }) -}
2642850ac39b9ed408e0ce9074ebe379
  pvDividend1 :: GHC.Types.Double
  {- Strictness: b -}
da689cac084fd6a14575a8a7b980a59f
  rc_msgBody :: IB.Client.Types.RecvMsg -> IB.Client.Types.IBMessage
  RecSel IB.Client.Types.RecvMsg
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.RecvMsg ->
                 case ds of wild { IB.Client.Types.RecvMsg ds1 ds2 ds3 -> ds3 }) -}
f23bb7e20751c15a7314874907cac65e
  rc_msgId :: IB.Client.Types.RecvMsg -> GHC.Types.Int
  RecSel IB.Client.Types.RecvMsg
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.RecvMsg ->
                 case ds of wild { IB.Client.Types.RecvMsg ds1 ds2 ds3 -> ds1 }) -}
238f0b4e31c7683d49ffc0c1ac8a8b19
  rc_version :: IB.Client.Types.RecvMsg -> GHC.Types.Int
  RecSel IB.Client.Types.RecvMsg
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.RecvMsg ->
                 case ds of wild { IB.Client.Types.RecvMsg ds1 ds2 ds3 -> ds2 }) -}
353fdf2fff0faf55b501d816299e9230
  realizedPNL :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.realizedPNL1
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds7
                   IB.Client.Types.CommissionReport ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds4 }) -}
13609380c25d96337865dba030a51e75
  realizedPNL1 :: GHC.Types.Double
  {- Strictness: b -}
fc82e235b04c22a3e8314d1233704172
  remaining :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.remaining1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds4 }) -}
94cde9ce039c95620c5c8dc6223dac2b
  remaining1 :: GHC.Types.Int
  {- Strictness: b -}
ba19846572b7660b8150a75a112b8b28
  reqId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.reqId1
                   IB.Client.Types.ExecutionData ds1 ds2 ds3 -> ds1
                   IB.Client.Types.HistoricalData ds1 ds2 ds3 ds4 -> ds1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds1
                   IB.Client.Types.FundamentalData ds1 ds2 -> ds1
                   IB.Client.Types.DeltaNeutralValidation ds1 ds2 -> ds1
                   IB.Client.Types.MarketDataType ds1 ds2 -> ds1
                   IB.Client.Types.AccountSummary ds1 ds2 ds3 ds4 ds5 -> ds1
                   IB.Client.Types.DisplayGroupList ds1 ds2 -> ds1
                   IB.Client.Types.DisplayGroupUpdated ds1 ds2 -> ds1 }) -}
de13d390f89c7e31474e5dc716ac2209
  reqId1 :: GHC.Types.Int
  {- Strictness: b -}
4c9935967712aa6f2f3f021b151e3559
  reqToId :: IB.Client.Types.Request -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ rq :: IB.Client.Types.Request ->
                 case IB.Client.Types.$fDataRequest_$ctoConstr
                        rq of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 case ww1 of wild {
                   DEFAULT -> Data.Data.constrIndex1 ww5
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># x 25) of wild2 {
                        GHC.Types.False -> wild1
                        GHC.Types.True -> GHC.Types.I# (GHC.Prim.+# x 23) } } } }) -}
f9e24fbf31b6c3f45103fceed3ed0b81
  rqp_orderId :: IB.Client.Types.Request -> IB.Client.Types.OrderId
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rqp_orderId1
                   IB.Client.Types.PlaceOrder ds1 ds2 ds3 -> ds1
                   IB.Client.Types.CancelOrder ds1 -> ds1 }) -}
b7cf8b621799fe9ce5706984318f4e3d
  rqp_orderId1 :: IB.Client.Types.OrderId
  {- Strictness: b -}
c15d5306e91b234a6659a59c3f5299cc
  rqp_reqId :: IB.Client.Types.Request -> IB.Client.Types.ReqId
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rqp_reqId1
                   IB.Client.Types.ExecutionsReq ds1 ds2 -> ds1
                   IB.Client.Types.ContractDetailsReq ds1 ds2 -> ds1
                   IB.Client.Types.FundamentalDataReq ds1 ds2 ds3 -> ds1
                   IB.Client.Types.AccountSummaryReq ds1 ds2 ds3 -> ds1
                   IB.Client.Types.UpdateDisplayGroup ds1 ds2 -> ds1 }) -}
52eeb8633867ad68b3f87a2772cdb7cd
  rqp_reqId1 :: IB.Client.Types.ReqId
  {- Strictness: b -}
86a683d062ead3a16775548f2acdb4ac
  rqp_tickerId :: IB.Client.Types.Request -> IB.Client.Types.TickerId
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rqp_tickerId1
                   IB.Client.Types.MktDataReq ds1 ds2 ds3 ds4 ds5 -> ds1
                   IB.Client.Types.CancelMktData ds1 -> ds1
                   IB.Client.Types.MktDepthReq ds1 ds2 ds3 ds4 -> ds1
                   IB.Client.Types.HistoricalDataReq ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds1
                   IB.Client.Types.ExerciseOptionsReq ds1 ds2 ds3 ds4 ds5 ds6 -> ds1
                   IB.Client.Types.ScannerSubscriptionReq ds1 ds2 ds3 -> ds1
                   IB.Client.Types.RealTimeBarsReq ds1 ds2 ds3 ds4 ds5 ds6 -> ds1
                   IB.Client.Types.ImpliedVolatilityReq ds1 ds2 ds3 ds4 -> ds1
                   IB.Client.Types.CalcOptionPriceReq ds1 ds2 ds3 ds4 -> ds1 }) -}
ca9d0e5b2199e90958b93c5618dd9aea
  rqp_tickerId1 :: IB.Client.Types.TickerId
  {- Strictness: b -}
6f2bd6200140311ec463a767928a5192
  rtb_barSize :: IB.Client.Types.Request -> GHC.Types.Int
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rtb_barSize1
                   IB.Client.Types.RealTimeBarsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds3 }) -}
6fc8211190e0ae2ce8990217c670d5ca
  rtb_barSize1 :: GHC.Types.Int
  {- Strictness: b -}
e912fede76786bf503a61bfb10b075d3
  rtb_contract :: IB.Client.Types.Request -> IB.Client.Types.Contract
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rtb_contract1
                   IB.Client.Types.RealTimeBarsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds2 }) -}
c0a8781203468818bd814e932fd5125e
  rtb_contract1 :: IB.Client.Types.Contract
  {- Strictness: b -}
122be1d91bdea989af279c9acd150c21
  rtb_realTimeBarsOptions ::
    IB.Client.Types.Request -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rtb_realTimeBarsOptions1
                   IB.Client.Types.RealTimeBarsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds6 }) -}
ebb6eb41cea71e5402538e906b622543
  rtb_realTimeBarsOptions1 :: [IB.Client.Types.TagValue]
  {- Strictness: b -}
48fe5f9a51a205cf2d086af7fbdc680a
  rtb_useRTH :: IB.Client.Types.Request -> GHC.Types.Bool
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rtb_useRTH1
                   IB.Client.Types.RealTimeBarsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds5 }) -}
26723991026b54557238b823e7361033
  rtb_useRTH1 :: GHC.Types.Bool
  {- Strictness: b -}
d4021eda6672071f87506f4202fb3659
  rtb_whatToShow :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.rtb_whatToShow1
                   IB.Client.Types.RealTimeBarsReq ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds4 }) -}
b0a734a68a4c85e359927685afd93567
  rtb_whatToShow1 :: GHC.Base.String
  {- Strictness: b -}
05390dbe7f73acce274ba74146d2ab45
  s_addr :: IB.Client.Types.IBServer -> GHC.Base.String
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds1 }) -}
7f80537bec2ae70a2784f21862a601dd
  s_clientId :: IB.Client.Types.IBServer -> GHC.Types.Int
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds3 }) -}
400f0674035aa7079a619b9cefd8a89d
  s_connected :: IB.Client.Types.IBServer -> GHC.Types.Bool
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds6 }) -}
57b516f6b74ca3c58ac59cdfe5b7186d
  s_debug :: IB.Client.Types.IBServer -> GHC.Types.Bool
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds8 }) -}
51110092ea1387c285dc662a86f99826
  s_extraAuth :: IB.Client.Types.IBServer -> GHC.Types.Bool
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds4 }) -}
54ebb9fc651318cd874317148b523d10
  s_handler ::
    IB.Client.Types.IBServer -> IB.Client.Types.HandlerFunc
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds12 }) -}
160ec8866725a573754fcca8c5451cae
  s_msgThread ::
    IB.Client.Types.IBServer -> GHC.Base.Maybe GHC.Conc.Sync.ThreadId
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds10 }) -}
e5c070d3224c3b2d0989c1e312d08532
  s_port :: IB.Client.Types.IBServer -> GHC.Types.Int
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds2 }) -}
abaa0706f12748447909ffb0b78e644f
  s_sock ::
    IB.Client.Types.IBServer
    -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds9 }) -}
9ff9847fafb3c3c0c64bf3b422320f2f
  s_timeoutInterval :: IB.Client.Types.IBServer -> GHC.Types.Int
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds11 }) -}
c7ff0cc1629859c7be4f10e0aa7c526a
  s_twsTime :: IB.Client.Types.IBServer -> GHC.Base.String
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds7 }) -}
889b3513dbf8128819d06a795147b927
  s_version :: IB.Client.Types.IBServer -> GHC.Types.Int
  RecSel IB.Client.Types.IBServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBServer ->
                 case ds of wild { IB.Client.Types.IBServer ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                 ds5 }) -}
1a67325fca4e3b1fab721a2b194ec7b8
  scannerDataList ::
    IB.Client.Types.IBMessage -> [IB.Client.Types.ScanData]
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.scannerDataList1
                   IB.Client.Types.ScannerData ds1 ds2 -> ds2 }) -}
2a7f83890008e60b512f7f1863f3e4e1
  scannerDataList1 :: [IB.Client.Types.ScanData]
  {- Strictness: b -}
1558f587b446ffdcb628cb94dadfd181
  sd_benchmark :: IB.Client.Types.ScanData -> GHC.Base.String
  RecSel IB.Client.Types.ScanData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScanData ->
                 case ds of wild { IB.Client.Types.ScanData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
93488390d8c428cfff02f31719fe2549
  sd_contract ::
    IB.Client.Types.ScanData -> IB.Client.Types.ContractDetails
  RecSel IB.Client.Types.ScanData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScanData ->
                 case ds of wild { IB.Client.Types.ScanData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
a6000bfe13e935255a5fbe0a1db9b0c0
  sd_distance :: IB.Client.Types.ScanData -> GHC.Base.String
  RecSel IB.Client.Types.ScanData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScanData ->
                 case ds of wild { IB.Client.Types.ScanData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
65a304b76f942416709804d62669de80
  sd_legsStr :: IB.Client.Types.ScanData -> GHC.Base.String
  RecSel IB.Client.Types.ScanData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScanData ->
                 case ds of wild { IB.Client.Types.ScanData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
9e9bf820d96475f7a711800aa9c39fb8
  sd_projection :: IB.Client.Types.ScanData -> GHC.Base.String
  RecSel IB.Client.Types.ScanData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScanData ->
                 case ds of wild { IB.Client.Types.ScanData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
9312d2c76e11d38f181f04532bf35b30
  sd_rank :: IB.Client.Types.ScanData -> GHC.Types.Int
  RecSel IB.Client.Types.ScanData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U),A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScanData ->
                 case ds of wild { IB.Client.Types.ScanData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
46c3d83c88541b270646954f1a6799c9
  side :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.side1
                   IB.Client.Types.MarketDepth ds1 ds2 ds3 ds4 ds5 ds6 -> ds4
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7
                   -> ds5 }) -}
a3f5a02c7d5a61c228e27361f00113dd
  side1 :: GHC.Types.Int
  {- Strictness: b -}
c01323e8c53e60517a5fd4cea2def87f
  size :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.size1
                   IB.Client.Types.TickPrice ds1 ds2 ds3 ds4 ds5 -> ds4
                   IB.Client.Types.TickSize ds1 ds2 ds3 ds4 -> ds4
                   IB.Client.Types.MarketDepth ds1 ds2 ds3 ds4 ds5 ds6 -> ds6
                   IB.Client.Types.MarketDepthL2 ds1 ds2 ds3 ds4 ds5 ds6 ds7
                   -> ds7 }) -}
c0c13d5cfa64a7854a831a2d0f5dab77
  size1 :: GHC.Types.Int
  {- Strictness: b -}
1593f57ed376ec98390ab626a9f107b8
  ssb_abovePrice ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Double
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds5 }) -}
651a31a6f7dd6175fc2c4db343491c78
  ssb_aboveVolume ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Int
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds7 }) -}
e8b9fa254ab1b3d2c0a846986ae835d6
  ssb_averageOptionVolumeAbove ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Int
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds19 }) -}
01e47c0e50931b1bc5500e5d1da0d599
  ssb_belowPrice ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Double
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds6 }) -}
e0b681aad7178fcfeff18760daa61d7c
  ssb_couponRateAbove ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Double
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds16 }) -}
ecd5f251505e7c5a8dcae144b4b0ba80
  ssb_couponRateBelow ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Double
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds17 }) -}
24724c2e5a85ef273abfd4a58e5db2ad
  ssb_excludeConvertible ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Int
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds18 }) -}
4381f0a4a25354324b06736c95aef264
  ssb_instrument ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds2 }) -}
d6c28da920810b5280eb12a8a957d4c3
  ssb_locationCode ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds3 }) -}
b7a362e5c753ac915bbe7c708f9a8a49
  ssb_marketCapAbove ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Double
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds8 }) -}
588a6361117a1a616dc268f27efc427a
  ssb_marketCapBelow ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Double
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds9 }) -}
d7a7f0c6bcbab85da41b8ee67242f3fa
  ssb_maturityDateAbove ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds14 }) -}
00dd77ab3cd3a54b577ffc9020b5702c
  ssb_maturityDateBelow ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds15 }) -}
f209dc47720e754eb111d40a92557bca
  ssb_moodyRatingAbove ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds10 }) -}
160a135356ee9f8e7623227938a13c07
  ssb_moodyRatingBelow ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds11 }) -}
58df36dcf2c7ac3f6bd843dbc13c1230
  ssb_numberOfRows ::
    IB.Client.Types.ScannerSubscription -> GHC.Types.Int
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds1 }) -}
371dffd8e49c61214dce7c6833d90bd1
  ssb_scanCode ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds4 }) -}
c4737ccf2dcbc84d02ed1e5900d61d57
  ssb_scannerSettingPairs ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds20 }) -}
254764531b86afebcdc687c5e572177a
  ssb_spRatingAbove ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds12 }) -}
504839026a0d3b9c091b44088b246431
  ssb_spRatingBelow ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds13 }) -}
eb95e096fb001a569f89e7fc7a8e0a25
  ssb_stockTypeFilter ::
    IB.Client.Types.ScannerSubscription -> GHC.Base.String
  RecSel IB.Client.Types.ScannerSubscription
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.ScannerSubscription ->
                 case ds of wild { IB.Client.Types.ScannerSubscription ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                 ds21 }) -}
db013f8d668093d52c45ce03ee1a2b46
  ssr_subscription ::
    IB.Client.Types.Request -> IB.Client.Types.ScannerSubscription
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.ssr_subscription1
                   IB.Client.Types.ScannerSubscriptionReq ds1 ds2 ds3 -> ds2 }) -}
dd8eeb5fd7d38de18146645e399f5638
  ssr_subscription1 :: IB.Client.Types.ScannerSubscription
  {- Strictness: b -}
6dca303ce2a0978caf4148a29d8764a9
  ssr_subscriptionOptions ::
    IB.Client.Types.Request -> [IB.Client.Types.TagValue]
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.ssr_subscriptionOptions1
                   IB.Client.Types.ScannerSubscriptionReq ds1 ds2 ds3 -> ds3 }) -}
9b13e3b17d0cec12bae6f815ed5babb9
  ssr_subscriptionOptions1 :: [IB.Client.Types.TagValue]
  {- Strictness: b -}
a26932f4a1d375b04c73c1ae478aef4b
  startDateStr :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.startDateStr1
                   IB.Client.Types.HistoricalData ds1 ds2 ds3 ds4 -> ds2 }) -}
73a5f3960db2655895fd4e57c268a4c9
  startDateStr1 :: GHC.Base.String
  {- Strictness: b -}
c7a0f5b95cff8fb5904d02e727e7f5ca
  status :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.status1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds2 }) -}
9d6ac739cf039c7dc2371d68e231d1a0
  status1 :: GHC.Base.String
  {- Strictness: b -}
9d34f4039a1a245537b2bd6dd323abf0
  tag :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.tag1
                   IB.Client.Types.AccountSummary ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
0f92057fd5748cd0c7275e6d7de8a450
  tag1 :: GHC.Base.String
  {- Strictness: b -}
804c388b45d9e4898b9b3421c7885dc5
  tg_value :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.tg_value1
                   IB.Client.Types.TickGeneric ds1 ds2 ds3 -> ds3 }) -}
03c2767e1a4302e58cf88e1840360279
  tg_value1 :: GHC.Types.Double
  {- Strictness: b -}
7d6cde80a9172238e7ec8c35c2713524
  theta :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.theta1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds9 }) -}
078eefbbbe2b128fd3c62d79002632c3
  theta1 :: GHC.Types.Double
  {- Strictness: b -}
2d2cbed9d475a34b60341fd393aee507
  tickType :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.tickType1
                   IB.Client.Types.TickPrice ds1 ds2 ds3 ds4 ds5 -> ds2
                   IB.Client.Types.TickSize ds1 ds2 ds3 ds4 -> ds2
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds2
                   IB.Client.Types.TickGeneric ds1 ds2 ds3 -> ds2
                   IB.Client.Types.TickString ds1 ds2 ds3 -> ds2
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds2 }) -}
2bfdbe7061ae0a0dbb3e7ac53b9d976b
  tickType1 :: GHC.Types.Int
  {- Strictness: b -}
42c1428ebdc54250844e1b5203e44a28
  tickerId :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.tickerId1
                   IB.Client.Types.TickPrice ds1 ds2 ds3 ds4 ds5 -> ds1
                   IB.Client.Types.TickSize ds1 ds2 ds3 ds4 -> ds1
                   IB.Client.Types.ScannerData ds1 ds2 -> ds1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds1
                   IB.Client.Types.TickGeneric ds1 ds2 ds3 -> ds1
                   IB.Client.Types.TickString ds1 ds2 ds3 -> ds1
                   IB.Client.Types.TickEFP ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds1 }) -}
33b26e7892cd73ee610edb3d450701b9
  tickerId1 :: GHC.Types.Int
  {- Strictness: b -}
ac3bacc8e05a2506f3d694d11059b8ce
  time :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.time1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds2 }) -}
330f5748b1c407ddab6100d47b5330c8
  time1 :: GHC.Types.Int
  {- Strictness: b -}
2849457233649f01a2dcd56b1199f040
  ts_value :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.ts_value1
                   IB.Client.Types.TickString ds1 ds2 ds3 -> ds3 }) -}
44bd1d6eb7ba3ac46d2edea52a6a0faa
  ts_value1 :: GHC.Base.String
  {- Strictness: b -}
7ed291a4a625a0fbf27654219c21c49f
  tv_tag :: IB.Client.Types.TagValue -> GHC.Base.String
  RecSel IB.Client.Types.TagValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.TagValue ->
                 case ds of wild { IB.Client.Types.TagValue ds1 ds2 -> ds1 }) -}
9a72792a0ffacbdbb799ec03ae406221
  tv_value :: IB.Client.Types.TagValue -> GHC.Base.String
  RecSel IB.Client.Types.TagValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.TagValue ->
                 case ds of wild { IB.Client.Types.TagValue ds1 ds2 -> ds2 }) -}
8fb494a50f69daf19ea9ab87c2342d4a
  uc_conId :: IB.Client.Types.UnderComp -> GHC.Types.Int
  RecSel IB.Client.Types.UnderComp
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.UnderComp ->
                 case ds of wild { IB.Client.Types.UnderComp ds1 ds2 ds3 ->
                 ds1 }) -}
30f622990c00b9fb75a004b6f94e5719
  uc_delta :: IB.Client.Types.UnderComp -> GHC.Types.Double
  RecSel IB.Client.Types.UnderComp
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.UnderComp ->
                 case ds of wild { IB.Client.Types.UnderComp ds1 ds2 ds3 ->
                 ds2 }) -}
d18e9b79134cfcd4bca0292bf8ebdb01
  uc_price :: IB.Client.Types.UnderComp -> GHC.Types.Double
  RecSel IB.Client.Types.UnderComp
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.UnderComp ->
                 case ds of wild { IB.Client.Types.UnderComp ds1 ds2 ds3 ->
                 ds3 }) -}
fde44d26ecb7a85a31f9b20da59a57b2
  udg_contractInfo :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.udg_contractInfo1
                   IB.Client.Types.UpdateDisplayGroup ds1 ds2 -> ds2 }) -}
f3ed1d454113a4d22b2da85f68f1585a
  udg_contractInfo1 :: GHC.Base.String
  {- Strictness: b -}
fee4762a622855f2222563ebdefbbcdd
  undPrice :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.undPrice1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds10 }) -}
98e814cbc910640eff20ab82c74c6294
  undPrice1 :: GHC.Types.Double
  {- Strictness: b -}
3e9f56f9aa9862f0b03c667a8f581c0b
  underComp :: IB.Client.Types.IBMessage -> IB.Client.Types.UnderComp
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.underComp1
                   IB.Client.Types.DeltaNeutralValidation ds1 ds2 -> ds2 }) -}
1a65345ec954d52b48469bb3abf77549
  underComp1 :: IB.Client.Types.UnderComp
  {- Strictness: b -}
ef054e0beec49c387411a2e9fd0dfd7d
  unrealizedPNL :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.unrealizedPNL1
                   IB.Client.Types.PortfolioValue ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8
                   -> ds6 }) -}
fca7bb65c3ad9bcf0b80e85b981152a9
  unrealizedPNL1 :: GHC.Types.Double
  {- Strictness: b -}
2c7035b954efe47ea6b8dc7fb2b72f49
  val :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.val1
                   IB.Client.Types.AcctValue ds1 ds2 ds3 ds4 -> ds2 }) -}
1da1c76fffded3f15f1ed8047560cdce
  val1 :: GHC.Base.String
  {- Strictness: b -}
b89a9178620e72e9cc0fa13bab4a009b
  value :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.value1
                   IB.Client.Types.AccountSummary ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
75af2669c9835f0607414e89c1fce41a
  value1 :: GHC.Base.String
  {- Strictness: b -}
743a7f62256def5ee0798d73cb0a2c1c
  vega :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.vega1
                   IB.Client.Types.TickOptionComputation ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds8 }) -}
42fd7c85e86e1ec5abf428d84be5e787
  vega1 :: GHC.Types.Double
  {- Strictness: b -}
420d22e48a3118140f90df346cecc3f9
  volume :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.volume1
                   IB.Client.Types.RealTimeBars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9
                   -> ds7 }) -}
fb1ad5d2d858ae4371ed666c0695db35
  volume1 :: GHC.Types.Int
  {- Strictness: b -}
3b87aaf02604e36e45bc095ea00e978f
  vr_apiName :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.vr_apiName1
                   IB.Client.Types.VerifyReq ds1 ds2 -> ds1 }) -}
95231c383ceb11a2e11b6ad84f43f691
  vr_apiName1 :: GHC.Base.String
  {- Strictness: b -}
2344f5e76be2b91c62d131307d074e38
  vr_apiVer :: IB.Client.Types.Request -> GHC.Base.String
  RecSel IB.Client.Types.Request
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.Request ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.vr_apiVer1
                   IB.Client.Types.VerifyReq ds1 ds2 -> ds2 }) -}
b7f490db4964c234fccd815d64f61f23
  vr_apiVer1 :: GHC.Base.String
  {- Strictness: b -}
f186699ea038de9bf69ee11d1868b038
  whyHeld :: IB.Client.Types.IBMessage -> GHC.Base.String
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.whyHeld1
                   IB.Client.Types.OrderStatus ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10
                   -> ds10 }) -}
2023cc87f936ab79fe171fb47e3c1ce8
  whyHeld1 :: GHC.Base.String
  {- Strictness: b -}
054b72451af3d69ca0125b66d320082a
  yield :: IB.Client.Types.IBMessage -> GHC.Types.Double
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.yield1
                   IB.Client.Types.CommissionReport ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds5 }) -}
88f476b02f8bebf9e5188ea989f30da7
  yield1 :: GHC.Types.Double
  {- Strictness: b -}
584a003865b2222ae700151f9318694d
  yieldRedemptionDate :: IB.Client.Types.IBMessage -> GHC.Types.Int
  RecSel IB.Client.Types.IBMessage
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: IB.Client.Types.IBMessage ->
                 case ds of wild {
                   DEFAULT -> IB.Client.Types.yieldRedemptionDate1
                   IB.Client.Types.CommissionReport ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds6 }) -}
279138436291202c66e778b9a0c786fa
  yieldRedemptionDate1 :: GHC.Types.Int
  {- Strictness: b -}
instance Data.Data.Data [IB.Client.Types.BarData]
  = IB.Client.Types.$fDataBarData
instance Data.Data.Data [IB.Client.Types.ComboLeg]
  = IB.Client.Types.$fDataComboLeg
instance Data.Data.Data [IB.Client.Types.Contract]
  = IB.Client.Types.$fDataContract
instance Data.Data.Data [IB.Client.Types.ContractDetails]
  = IB.Client.Types.$fDataContractDetails
instance Data.Data.Data [IB.Client.Types.Execution]
  = IB.Client.Types.$fDataExecution
instance Data.Data.Data [IB.Client.Types.ExecutionFilter]
  = IB.Client.Types.$fDataExecutionFilter
instance Data.Data.Data [IB.Client.Types.FaDataType]
  = IB.Client.Types.$fDataFaDataType
instance Data.Data.Data [IB.Client.Types.IBMessage]
  = IB.Client.Types.$fDataIBMessage
instance Data.Data.Data [IB.Client.Types.Order]
  = IB.Client.Types.$fDataOrder
instance Data.Data.Data [IB.Client.Types.OrderState]
  = IB.Client.Types.$fDataOrderState
instance Data.Data.Data [IB.Client.Types.Origin]
  = IB.Client.Types.$fDataOrigin
instance Data.Data.Data [IB.Client.Types.Request]
  = IB.Client.Types.$fDataRequest
instance Data.Data.Data [IB.Client.Types.ScanData]
  = IB.Client.Types.$fDataScanData
instance Data.Data.Data [IB.Client.Types.ScannerSubscription]
  = IB.Client.Types.$fDataScannerSubscription
instance Data.Data.Data [IB.Client.Types.TagValue]
  = IB.Client.Types.$fDataTagValue
instance Data.Data.Data [IB.Client.Types.UnderComp]
  = IB.Client.Types.$fDataUnderComp
instance GHC.Enum.Enum [IB.Client.Types.FaDataType]
  = IB.Client.Types.$fEnumFaDataType
instance GHC.Enum.Enum [IB.Client.Types.NewsBulletin]
  = IB.Client.Types.$fEnumNewsBulletin
instance GHC.Enum.Enum [IB.Client.Types.Origin]
  = IB.Client.Types.$fEnumOrigin
instance GHC.Enum.Enum [IB.Client.Types.TickType]
  = IB.Client.Types.$fEnumTickType
instance GHC.Classes.Eq [IB.Client.Types.FaDataType]
  = IB.Client.Types.$fEqFaDataType
instance GHC.Classes.Eq [IB.Client.Types.Origin]
  = IB.Client.Types.$fEqOrigin
instance GHC.Classes.Eq [IB.Client.Types.TickType]
  = IB.Client.Types.$fEqTickType
instance GHC.Classes.Eq [IB.Client.Types.UnderComp]
  = IB.Client.Types.$fEqUnderComp
instance GHC.Read.Read [IB.Client.Types.FaDataType]
  = IB.Client.Types.$fReadFaDataType
instance GHC.Read.Read [IB.Client.Types.NewsBulletin]
  = IB.Client.Types.$fReadNewsBulletin
instance GHC.Read.Read [IB.Client.Types.Origin]
  = IB.Client.Types.$fReadOrigin
instance GHC.Read.Read [IB.Client.Types.TickType]
  = IB.Client.Types.$fReadTickType
instance GHC.Show.Show [IB.Client.Types.BarData]
  = IB.Client.Types.$fShowBarData
instance GHC.Show.Show [IB.Client.Types.ComboLeg]
  = IB.Client.Types.$fShowComboLeg
instance GHC.Show.Show [IB.Client.Types.Contract]
  = IB.Client.Types.$fShowContract
instance GHC.Show.Show [IB.Client.Types.ContractDetails]
  = IB.Client.Types.$fShowContractDetails
instance GHC.Show.Show [IB.Client.Types.Execution]
  = IB.Client.Types.$fShowExecution
instance GHC.Show.Show [IB.Client.Types.FaDataType]
  = IB.Client.Types.$fShowFaDataType
instance GHC.Show.Show [IB.Client.Types.IBMessage]
  = IB.Client.Types.$fShowIBMessage
instance GHC.Show.Show [IB.Client.Types.NewsBulletin]
  = IB.Client.Types.$fShowNewsBulletin
instance GHC.Show.Show [IB.Client.Types.Order]
  = IB.Client.Types.$fShowOrder
instance GHC.Show.Show [IB.Client.Types.OrderState]
  = IB.Client.Types.$fShowOrderState
instance GHC.Show.Show [IB.Client.Types.Origin]
  = IB.Client.Types.$fShowOrigin
instance GHC.Show.Show [IB.Client.Types.ScanData]
  = IB.Client.Types.$fShowScanData
instance GHC.Show.Show [IB.Client.Types.TagValue]
  = IB.Client.Types.$fShowTagValue
instance GHC.Show.Show [IB.Client.Types.TickType]
  = IB.Client.Types.$fShowTickType
instance GHC.Show.Show [IB.Client.Types.UnderComp]
  = IB.Client.Types.$fShowUnderComp
"SPEC/IB.Client.Types $dmdataCast1 @ BarData" [ALWAYS] forall $dData :: Data.Data.Data
                                                                          IB.Client.Types.BarData
  Data.Data.$dmdataCast1 @ IB.Client.Types.BarData $dData
  = IB.Client.Types.$fDataBarData_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ ComboLeg" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.ComboLeg
  Data.Data.$dmdataCast1 @ IB.Client.Types.ComboLeg $dData
  = IB.Client.Types.$fDataComboLeg_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ Contract" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.Contract
  Data.Data.$dmdataCast1 @ IB.Client.Types.Contract $dData
  = IB.Client.Types.$fDataContract_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ ContractDetails" [ALWAYS] forall $dData :: Data.Data.Data
                                                                                  IB.Client.Types.ContractDetails
  Data.Data.$dmdataCast1 @ IB.Client.Types.ContractDetails $dData
  = IB.Client.Types.$fDataContractDetails_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ Execution" [ALWAYS] forall $dData :: Data.Data.Data
                                                                            IB.Client.Types.Execution
  Data.Data.$dmdataCast1 @ IB.Client.Types.Execution $dData
  = IB.Client.Types.$fDataExecution_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ ExecutionFilter" [ALWAYS] forall $dData :: Data.Data.Data
                                                                                  IB.Client.Types.ExecutionFilter
  Data.Data.$dmdataCast1 @ IB.Client.Types.ExecutionFilter $dData
  = IB.Client.Types.$fDataExecutionFilter_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ FaDataType" [ALWAYS] forall $dData :: Data.Data.Data
                                                                             IB.Client.Types.FaDataType
  Data.Data.$dmdataCast1 @ IB.Client.Types.FaDataType $dData
  = IB.Client.Types.$fDataFaDataType_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ IBMessage" [ALWAYS] forall $dData :: Data.Data.Data
                                                                            IB.Client.Types.IBMessage
  Data.Data.$dmdataCast1 @ IB.Client.Types.IBMessage $dData
  = IB.Client.Types.$fDataIBMessage_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ Order" [ALWAYS] forall $dData :: Data.Data.Data
                                                                        IB.Client.Types.Order
  Data.Data.$dmdataCast1 @ IB.Client.Types.Order $dData
  = IB.Client.Types.$fDataOrder_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ OrderState" [ALWAYS] forall $dData :: Data.Data.Data
                                                                             IB.Client.Types.OrderState
  Data.Data.$dmdataCast1 @ IB.Client.Types.OrderState $dData
  = IB.Client.Types.$fDataOrderState_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ Origin" [ALWAYS] forall $dData :: Data.Data.Data
                                                                         IB.Client.Types.Origin
  Data.Data.$dmdataCast1 @ IB.Client.Types.Origin $dData
  = IB.Client.Types.$fDataOrigin_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ Request" [ALWAYS] forall $dData :: Data.Data.Data
                                                                          IB.Client.Types.Request
  Data.Data.$dmdataCast1 @ IB.Client.Types.Request $dData
  = IB.Client.Types.$fDataRequest_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ ScanData" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.ScanData
  Data.Data.$dmdataCast1 @ IB.Client.Types.ScanData $dData
  = IB.Client.Types.$fDataScanData_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ ScannerSubscription" [ALWAYS] forall $dData :: Data.Data.Data
                                                                                      IB.Client.Types.ScannerSubscription
  Data.Data.$dmdataCast1 @ IB.Client.Types.ScannerSubscription $dData
  = IB.Client.Types.$fDataScannerSubscription_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ TagValue" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.TagValue
  Data.Data.$dmdataCast1 @ IB.Client.Types.TagValue $dData
  = IB.Client.Types.$fDataTagValue_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast1 @ UnderComp" [ALWAYS] forall $dData :: Data.Data.Data
                                                                            IB.Client.Types.UnderComp
  Data.Data.$dmdataCast1 @ IB.Client.Types.UnderComp $dData
  = IB.Client.Types.$fDataUnderComp_$s$dmdataCast1
"SPEC/IB.Client.Types $dmdataCast2 @ BarData" [ALWAYS] forall $dData :: Data.Data.Data
                                                                          IB.Client.Types.BarData
  Data.Data.$dmdataCast2 @ IB.Client.Types.BarData $dData
  = IB.Client.Types.$fDataBarData_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ ComboLeg" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.ComboLeg
  Data.Data.$dmdataCast2 @ IB.Client.Types.ComboLeg $dData
  = IB.Client.Types.$fDataComboLeg_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ Contract" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.Contract
  Data.Data.$dmdataCast2 @ IB.Client.Types.Contract $dData
  = IB.Client.Types.$fDataContract_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ ContractDetails" [ALWAYS] forall $dData :: Data.Data.Data
                                                                                  IB.Client.Types.ContractDetails
  Data.Data.$dmdataCast2 @ IB.Client.Types.ContractDetails $dData
  = IB.Client.Types.$fDataContractDetails_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ Execution" [ALWAYS] forall $dData :: Data.Data.Data
                                                                            IB.Client.Types.Execution
  Data.Data.$dmdataCast2 @ IB.Client.Types.Execution $dData
  = IB.Client.Types.$fDataExecution_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ ExecutionFilter" [ALWAYS] forall $dData :: Data.Data.Data
                                                                                  IB.Client.Types.ExecutionFilter
  Data.Data.$dmdataCast2 @ IB.Client.Types.ExecutionFilter $dData
  = IB.Client.Types.$fDataExecutionFilter_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ FaDataType" [ALWAYS] forall $dData :: Data.Data.Data
                                                                             IB.Client.Types.FaDataType
  Data.Data.$dmdataCast2 @ IB.Client.Types.FaDataType $dData
  = IB.Client.Types.$fDataFaDataType_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ IBMessage" [ALWAYS] forall $dData :: Data.Data.Data
                                                                            IB.Client.Types.IBMessage
  Data.Data.$dmdataCast2 @ IB.Client.Types.IBMessage $dData
  = IB.Client.Types.$fDataIBMessage_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ Order" [ALWAYS] forall $dData :: Data.Data.Data
                                                                        IB.Client.Types.Order
  Data.Data.$dmdataCast2 @ IB.Client.Types.Order $dData
  = IB.Client.Types.$fDataOrder_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ OrderState" [ALWAYS] forall $dData :: Data.Data.Data
                                                                             IB.Client.Types.OrderState
  Data.Data.$dmdataCast2 @ IB.Client.Types.OrderState $dData
  = IB.Client.Types.$fDataOrderState_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ Origin" [ALWAYS] forall $dData :: Data.Data.Data
                                                                         IB.Client.Types.Origin
  Data.Data.$dmdataCast2 @ IB.Client.Types.Origin $dData
  = IB.Client.Types.$fDataOrigin_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ Request" [ALWAYS] forall $dData :: Data.Data.Data
                                                                          IB.Client.Types.Request
  Data.Data.$dmdataCast2 @ IB.Client.Types.Request $dData
  = IB.Client.Types.$fDataRequest_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ ScanData" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.ScanData
  Data.Data.$dmdataCast2 @ IB.Client.Types.ScanData $dData
  = IB.Client.Types.$fDataScanData_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ ScannerSubscription" [ALWAYS] forall $dData :: Data.Data.Data
                                                                                      IB.Client.Types.ScannerSubscription
  Data.Data.$dmdataCast2 @ IB.Client.Types.ScannerSubscription $dData
  = IB.Client.Types.$fDataScannerSubscription_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ TagValue" [ALWAYS] forall $dData :: Data.Data.Data
                                                                           IB.Client.Types.TagValue
  Data.Data.$dmdataCast2 @ IB.Client.Types.TagValue $dData
  = IB.Client.Types.$fDataTagValue_$s$dmdataCast2
"SPEC/IB.Client.Types $dmdataCast2 @ UnderComp" [ALWAYS] forall $dData :: Data.Data.Data
                                                                            IB.Client.Types.UnderComp
  Data.Data.$dmdataCast2 @ IB.Client.Types.UnderComp $dData
  = IB.Client.Types.$fDataUnderComp_$s$dmdataCast2
"SPEC/IB.Client.Types $dmreadsPrec @ FaDataType" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                             IB.Client.Types.FaDataType
  GHC.Read.$dmreadsPrec @ IB.Client.Types.FaDataType $dRead
  = IB.Client.Types.$fReadFaDataType_$s$dmreadsPrec
"SPEC/IB.Client.Types $dmreadsPrec @ NewsBulletin" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                               IB.Client.Types.NewsBulletin
  GHC.Read.$dmreadsPrec @ IB.Client.Types.NewsBulletin $dRead
  = IB.Client.Types.$fReadNewsBulletin_$s$dmreadsPrec
"SPEC/IB.Client.Types $dmreadsPrec @ Origin" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                         IB.Client.Types.Origin
  GHC.Read.$dmreadsPrec @ IB.Client.Types.Origin $dRead
  = IB.Client.Types.$fReadOrigin_$s$dmreadsPrec
"SPEC/IB.Client.Types $dmreadsPrec @ TickType" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                           IB.Client.Types.TickType
  GHC.Read.$dmreadsPrec @ IB.Client.Types.TickType $dRead
  = IB.Client.Types.$fReadTickType_$s$dmreadsPrec
"SPEC/IB.Client.Types $fData[] @ BarData" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                          [IB.Client.Types.BarData]
                                                          $dData :: Data.Data.Data
                                                                      IB.Client.Types.BarData
  Data.Data.$fData[] @ IB.Client.Types.BarData $dTypeable $dData
  = IB.Client.Types.$s$fData[]31
"SPEC/IB.Client.Types $fData[] @ Char" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                       [GHC.Types.Char]
                                                       $dData :: Data.Data.Data GHC.Types.Char
  Data.Data.$fData[] @ GHC.Types.Char $dTypeable $dData
  = IB.Client.Types.$fDataBarData_$s$fData[]
"SPEC/IB.Client.Types $fData[] @ ComboLeg" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                           [IB.Client.Types.ComboLeg]
                                                           $dData :: Data.Data.Data
                                                                       IB.Client.Types.ComboLeg
  Data.Data.$fData[] @ IB.Client.Types.ComboLeg $dTypeable $dData
  = IB.Client.Types.$fDataContract_$s$fData[]
"SPEC/IB.Client.Types $fData[] @ Double" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                         [GHC.Types.Double]
                                                         $dData :: Data.Data.Data GHC.Types.Double
  Data.Data.$fData[] @ GHC.Types.Double $dTypeable $dData
  = IB.Client.Types.$s$fData[]
"SPEC/IB.Client.Types $fData[] @ ScanData" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                           [IB.Client.Types.ScanData]
                                                           $dData :: Data.Data.Data
                                                                       IB.Client.Types.ScanData
  Data.Data.$fData[] @ IB.Client.Types.ScanData $dTypeable $dData
  = IB.Client.Types.$s$fData[]22
"SPEC/IB.Client.Types $fData[] @ TagValue" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                           [IB.Client.Types.TagValue]
                                                           $dData :: Data.Data.Data
                                                                       IB.Client.Types.TagValue
  Data.Data.$fData[] @ IB.Client.Types.TagValue $dTypeable $dData
  = IB.Client.Types.$s$fData[]13
"SPEC/IB.Client.Types $fData[]_$cdataCast1 @ BarData" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                      [IB.Client.Types.BarData]
                                                                      $dData :: Data.Data.Data
                                                                                  IB.Client.Types.BarData
  Data.Data.$fData[]_$cdataCast1 @ IB.Client.Types.BarData
                                 $dTypeable
                                 $dData
  = IB.Client.Types.$s$fData[]_$s$fData[]_$cdataCast3
"SPEC/IB.Client.Types $fData[]_$cdataCast1 @ ComboLeg" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                       [IB.Client.Types.ComboLeg]
                                                                       $dData :: Data.Data.Data
                                                                                   IB.Client.Types.ComboLeg
  Data.Data.$fData[]_$cdataCast1 @ IB.Client.Types.ComboLeg
                                 $dTypeable
                                 $dData
  = IB.Client.Types.$fDataContract_$s$fData[]_$cdataCast1
"SPEC/IB.Client.Types $fData[]_$cdataCast1 @ ScanData" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                       [IB.Client.Types.ScanData]
                                                                       $dData :: Data.Data.Data
                                                                                   IB.Client.Types.ScanData
  Data.Data.$fData[]_$cdataCast1 @ IB.Client.Types.ScanData
                                 $dTypeable
                                 $dData
  = IB.Client.Types.$s$fData[]_$s$fData[]_$cdataCast2
"SPEC/IB.Client.Types $fData[]_$cdataCast1 @ TagValue" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                       [IB.Client.Types.TagValue]
                                                                       $dData :: Data.Data.Data
                                                                                   IB.Client.Types.TagValue
  Data.Data.$fData[]_$cdataCast1 @ IB.Client.Types.TagValue
                                 $dTypeable
                                 $dData
  = IB.Client.Types.$s$fData[]_$s$fData[]_$cdataCast1
"SPEC/IB.Client.Types readListDefault @ FaDataType" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                                IB.Client.Types.FaDataType
  GHC.Read.readListDefault @ IB.Client.Types.FaDataType $dRead
  = IB.Client.Types.$fReadFaDataType_$sreadListDefault
"SPEC/IB.Client.Types readListDefault @ NewsBulletin" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                                  IB.Client.Types.NewsBulletin
  GHC.Read.readListDefault @ IB.Client.Types.NewsBulletin $dRead
  = IB.Client.Types.$fReadNewsBulletin_$sreadListDefault
"SPEC/IB.Client.Types readListDefault @ Origin" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                            IB.Client.Types.Origin
  GHC.Read.readListDefault @ IB.Client.Types.Origin $dRead
  = IB.Client.Types.$fReadOrigin_$sreadListDefault
"SPEC/IB.Client.Types readListDefault @ TickType" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                              IB.Client.Types.TickType
  GHC.Read.readListDefault @ IB.Client.Types.TickType $dRead
  = IB.Client.Types.$fReadTickType_$sreadListDefault
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

